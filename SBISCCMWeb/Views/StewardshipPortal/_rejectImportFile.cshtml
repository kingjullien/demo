@using SBISCCMWeb.Utility;
@using SBISCCMWeb.LanguageResources;
@{
    string allowedFormats = "xls,xlsx";
    bool IsPurgeData = ViewBag.IsPurgeData;
}
@Html.Hidden("allowedFormats", allowedFormats)
@Html.Hidden("IsPurgeData", IsPurgeData)
<style>
    #DivPartialBindRejectMapping .row
    {
        margin:0
    }
</style>
<div id="" style="background-color:white">
    <section id="widget-grid" class="">
        <article class="sortable-grid ui-sortable" id="articleRejectImportFile">
            <div id="wid-id-1" class="jarviswidget jarviswidget-sortable jarviswidget-color-blueDark" data-widget-custombutton="false" data-widget-editbutton="false" role="widget">
                    <header role="heading">
                        <h2>
                            @if (!IsPurgeData)
                            {
                                <strong>@MatchDataLang.hdrRejectFromFile</strong>
                            }
                            else
                            {
                                <strong>@MatchDataLang.hdrPurgeFromFile</strong>
                            }
                        </h2>
                    </header>
                    <div role="content">
                        <div class="">
                            <div class="form-group">
                                <div class="input-group">
                                    <input type="file" name="file" id="RejectPurgeFile" class="browserFile margin-top-5 inputfile inputfile-6" accept=".xls,.xlsx" />
                                    <label for="RejectPurgeFile">
                                        <span></span>
                                        <strong>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17">
                                                <path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z"></path>
                                            </svg>
                                            @CommonMessagesLang.lblBrowse
                                        </strong>
                                    </label>
                                </div>
                                <label>@MatchDataLang.lblAcceptsonlyExcelfiles</label>
                            </div>
                            @*<input type="file" id="RejectPurgeFile" accept=".xls,.xlsx" />*@
                            
                        </div>
                        <div id="myTabContent" class="tab-content">
                            <h2 class="text-center">@MatchDataLang.hdrMapFileToColumns</h2>
                            <div role="content">
                                <div class="jarviswidget-editbox"></div>
                                <div class="widget-body ">

                                    <div class="tab-content">
                                        <div id="DivPartialBindRejectMapping">
                                            @{
                                                IPagedList<dynamic> pagedProducts = new StaticPagedList<dynamic>(new List<dynamic>(), 1, 10000, 0);
                                                Html.RenderPartial("_bindRejectMapping", pagedProducts);
                                            }
                                        </div>

                                    </div>
                                    @if (!IsPurgeData)
                                    {
                                        if (Helper.Branding == Branding.Matchbook.ToString())
                                        {
                                            <div class="row">
                                                <div class="col-md-8 col-sm-10 pull-md-left">
                                                    <input type="checkbox" id="chkRejectAll" name="Purge" title="@MatchDataLang.titlePurgefromMatchbook"><span class="control-label" style="position: absolute;padding-top: 3px;">&nbsp; @MatchDataLang.lblPurgeFromMatchbook</span>
                                                    <br />
                                                    <span>@MatchDataLang.lblNoRecordsInMatchQueue</span>
                                                </div>
                                            </div>
                                        }
                                        else if (Helper.Branding == Branding.DandB.ToString())
                                        {
                                            <div class="row">
                                                <div class="col-md-8 col-sm-10 pull-md-left">
                                                    <input type="checkbox" id="chkRejectAll" name="Purge" title="@MatchDataLang.titlePurgefromMatchbook"><span class="control-label" style="position: absolute;padding-top: 3px;">&nbsp; @MatchDataLang.lblPurgeFromMatchbook</span>
                                                    <br />
                                                    <span>@MatchDataLang.lblNoRecordsInMatchQueue</span>
                                                </div>
                                            </div>
                                        }
                                    }

                                    <div class="importbuttondiv paddingtop8">
                                        <input id="btnInsertRejectData" class="btn btn-primary" type="submit" name="btnInsertData" title="@MatchDataLang.titleSubmit" value="@MatchDataLang.lblSubmit" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </article>
    </section>
</div>

<script type="text/javascript">
    'use strict';

    ; (function (document, window, index) {
        var inputs = document.querySelectorAll('.inputfile');
        Array.prototype.forEach.call(inputs, function (input) {
            var label = input.nextElementSibling,
                labelVal = label.innerHTML;

            input.addEventListener('change', function (e) {
                var fileName = '';
                if (this.files && this.files.length > 1)
                    fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
                else
                    fileName = e.target.value.split('\\').pop();

                if (fileName)
                    label.querySelector('span').innerHTML = fileName;
                else
                    label.innerHTML = labelVal;
            });

            // Firefox bug fix
            input.addEventListener('focus', function () { input.classList.add('has-focus'); });
            input.addEventListener('blur', function () { input.classList.remove('has-focus'); });
        });
    }(document, window, 0));

</script>




