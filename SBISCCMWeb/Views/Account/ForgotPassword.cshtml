@model SBISCCMWeb.Models.ForgotPasswordViewModel
@using SBISCCMWeb.Utility
@using Resources = ViewResources.BrandingTypes;
@using SBISCCMWeb.LanguageResources;

@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    ViewBag.Title = AccountLang.titleForgotPassword;
    var profileImg = "/Images/ClientLogos/" + Helper.ClientLogo;
    var absolutePath = HttpContext.Current.Server.MapPath(profileImg);
}

@section scripts
{
    <script type="text/javascript">
        runAllForms();
    </script>
    @Scripts.Render("~/bundles/forgetpassword")
}
<style>
    .smart-form footer .btn {
        width: 225px;
    }
</style>
<div class="row justify-content-center">
    @if (Helper.Branding == Branding.Matchbook.ToString())
    {
        <div class="col-md-4 col-md-offset-2">
            <div class="logo_sec">
                <img src="/Image/GetAnonymousImage?imagepath=@HttpUtility.UrlEncode(Utility.GetEncryptedString(Resources.Resource_Matchbook.LoginImage))" alt="matchbook" class="img-fluid" />
            </div>
        </div>
    }
    else if (Helper.Branding == Branding.DandB.ToString())
    {
        <div class="col-md-4 col-md-offset-2">
            <div class="logo_sec">
                <img src="/Image/GetAnonymousImage?imagepath=@HttpUtility.UrlEncode(Utility.GetEncryptedString(Resources.Resource_DandB.ImageLogin))" alt="dandb" class="img-fluid" />
            </div>
        </div>
    }
    <div class="col-md-4">
        <div class="sub_logo_sec">
            @if (System.IO.File.Exists(absolutePath))
            {
                <img src="/Image/GetAnonymousImage?imagepath=@HttpUtility.UrlEncode(Utility.GetEncryptedString(profileImg))" alt="@SessionHelper.ClientName" class="img-fluid" />
            }
            else if (!string.IsNullOrEmpty(Helper.ClientLogo))
            {
                if (ImageHelper.IsFileExists(@Helper.ClientLogo, ImageHelper.PictureType.clientlogo))
                {
                    <img src="/Image/GetAnonymousBlobImage?imagepath=@HttpUtility.UrlEncode(Utility.GetEncryptedString(ImageHelper.GetImageFullURL(ImageHelper.PictureType.clientlogo, @Helper.ClientLogo)))" alt="@SessionHelper.ClientName" class="img-fluid" id="ClientLogo" />
                }
            }
            else
            {
                <img class="img-fluid" src="/Image/GetAnonymousImage?imagepath=@HttpUtility.UrlEncode(Utility.GetEncryptedString("/Images/Matchbook-logo.png"))" alt="Matchbook"/>
            }
            <h4>@SessionHelper.ClientName</h4>
        </div>
    </div>
</div>

<div class="row w-50 m-auto">
    <div class="well sigin_cus">
        @using (Html.BeginForm("ForgotPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "smart-form client-form", role = "form", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            <header>
                @AccountLang.hdrForgotPassword
            </header>
            <fieldset>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <section>

                    <label class="input">
                        <em class="icon-append fa fa-user"></em>
                        @Html.TextBoxFor(m => m.Email, new { onfocus = "this.removeAttribute('readonly');", @readonly = true, autocomplete = "off", placeholder = AccountLang.placeholderEnterEmail, maxlength = "200" })
                        <strong class="tooltip tooltip-top-right"><em class="fa fa-user txt-color-teal"></em> @AccountLang.lblPleaseenteremailaddress</strong>
                    </label>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </section>

            </fieldset>
            <footer>
                <button type="submit" class="btn btn-primary pull-left">
                    <em class="fa fa-refresh"></em> @AccountLang.lblResetPassword
                </button>
            </footer>
        }
    </div>
</div>
@*<div class="row">
        <div class="col-xs-12 col-sm-12 col-md-7 col-lg-8 hidden-xs hidden-sm">
            <div class="companylog">

                @if (!string.IsNullOrEmpty(Helper.ClientLogo))
                {
                <img src="@ImageHelper.GetImageFullURL(ImageHelper.PictureType.clientlogo, @Helper.ClientLogo)" />
                }
                else
                {

                <img src="/Image/GetAnonymousImage?imagepath=@HttpUtility.UrlEncode(Utility.GetEncryptedString("/Images/Matchbook-logo.png"))" />
                }
            </div>

            <div class="hero">
                <div class="pull-left login-desc-box-l">

                    @ViewBag.ClientName

                </div>
            </div>
            <div class="row"></div>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-5 col-lg-4">
            <div class="well no-padding">
                @using (Html.BeginForm("ForgotPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "smart-form client-form", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <header>
                        Forgot Password
                    </header>

                    <fieldset>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <section>
                            @Html.LabelFor(m => m.Email, new { @class = "label" })
                            <label class="input">
                                <i class="icon-append fa fa-user"></i>
                                @Html.TextBoxFor(m => m.Email, new { onfocus = "this.removeAttribute('readonly');", @readonly = true, autocomplete = "off" })
                                <b class="tooltip tooltip-top-right"><i class="fa fa-user txt-color-teal"></i> Please enter email address</b>
                            </label>
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </section>

                    </fieldset>
                            <footer>
                                <button type="submit" class="btn btn-primary pull-left">
                                    <i class="fa fa-refresh"></i> Reset Password
                                </button>
                                @Html.ActionLink("Login", "Login", "Account", null, new { @class = "btn btn-link" })
                            </footer>
                }

            </div>
        </div>
    </div>*@
