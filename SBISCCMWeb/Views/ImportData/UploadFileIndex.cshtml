@using SBISCCMWeb.LanguageResources
@using SBISCompanyCleanseMatchBusiness.Objects.EntitiesAndAdapters
@using SBISCCMWeb.Utility
@model ImportJobDataEntity
@{
    List<SelectListItem>
    lstTemplate = new List<SelectListItem>
        ();
    foreach (var item in Model.lstTemplates)
    {
        lstTemplate.Add(new SelectListItem { Value = item.TemplateId + "::" + item.ExcelWorksheetName + "::" + item.Delimiter + "::" + item.HasHeader, Text = item.TemplateName });
    }
    string fileType = Model.SourceType;
    string ImportMode = string.IsNullOrEmpty(Model.ImportType) ? "Data Import" : (Model.ImportType.Contains("MATCH") ? "Data Import" : "Match Refresh");
    string infoMessage = string.Empty;
    string allowedFormats = string.Empty;
    string OpenFileFormats = string.Empty;
    bool isTSV = false;
    bool isText = false;
    bool IsTemplateSelected = ViewBag.IsTemplateSelected;
    switch (fileType)
    {
        case "EXCEL":
            infoMessage =ImportDataLang.lblAcceptExcelFiles;
            allowedFormats = "xls,xlsx";
            OpenFileFormats = ".xls,.xlsx";
            break;
        case "CSV":
            infoMessage = ImportDataLang.lblAcceptCSVFiles;
            allowedFormats = "csv";
            OpenFileFormats = ".csv";
            break;
        case "TSV":
            infoMessage = ImportDataLang.lblAcceptTextFiles;
            allowedFormats = "txt";
            OpenFileFormats = ".txt";
            isTSV = true;
            break;
        case "TXT":
            infoMessage = ImportDataLang.lblAcceptTextFiles;
            allowedFormats = "txt";
            OpenFileFormats = ".txt";
            isText = true;
            break;
        case "FIXED":
            infoMessage = ImportDataLang.lblAcceptTextFiles;
            allowedFormats = "txt";
            OpenFileFormats = ".txt";
            isText = true;
            break;
            //case "MYSQL":
            //    infoMessage = "(Accepts only My SQL files)";
            //    break;
            //case "SQLSERVER":
            //    infoMessage = "(Accepts only SQL Server files)";
            //    break;
            //case "ORACLE":
            //    infoMessage = "(Accepts only Oracle files)";
            //    break;
    }
}
@Html.Hidden("fileType", fileType)
@Html.Hidden("isText", isText)
@Html.Hidden("isTSV", isTSV)
@Html.Hidden("allowedFormats", allowedFormats)
@Html.Hidden("ImportMode", ImportMode)
@Html.Hidden("IsTemplateSelected")

<div class="tab-pane padding-10 padding-Bottom-0 padding-top-0">
    <div class="form-group select_file">
        <div class="padding-10 padding-Bottom-0 padding-top-0">
            <h4>@ImportDataLang.hdrUploadFile</h4>
            <hr />
            <div class="Select_template">
                <div class="select_type_option">
                    <div class="row">
                        <div class=" col-md-12">
                            <label>@ImportDataLang.lblFile @infoMessage</label>
                            <div class="form-group">
                                <div class="input-group">
                                    <input type="file" name="file" id="file" class="browserFile margin-top-5 inputfile inputfile-6" accept="@OpenFileFormats" />
                                    <label for="file">
                                        <span></span>
                                        <strong>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17">
                                                <path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z"></path>
                                            </svg>
                                            @CommonMessagesLang.lblBrowse
                                        </strong>
                                    </label>
                                </div>
                            </div>
                            <span class="generalMsg error"></span>
                        </div>
                        @if (isText && fileType != "FIXED")
                        {
                            <div class="col-md-3">
                                <label>@ImportDataLang.lblDelimiter<span class="text-danger"> *</span></label>
                                <div class="form-group">
                                    <div class="input-group col-xs-12">
                                        @Html.DropDownList("txtDelimiter", new SelectList(CommonDropdown.GetImportDelimiter(), "Value", "Text"), new { @class = "col-md-12", @autocomplete = "off", @style = "height:32px;" })
                                        <span class="text-danger errorMessage"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (IsTemplateSelected)
                        {
                            <div class="col-md-4 templateSelect">
                                <label>@ImportDataLang.lblSelectFileTemplate</label>
                                <div class="form-group">
                                    <div class="input-group ">
                                        @Html.DropDownList("TemplateId", new SelectList(lstTemplate, "Value", "Text").InsertEmptyFirst("Select File Template", "0::::"), new { @class = "form-control selectbox", autocomplete = "off" })
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-2 sheetSelect">
                                <label>@ImportDataLang.lblTemplateName<span class="text-danger"> *</span></label>
                                <div class="form-group">
                                    <div class="input-group ">
                                        <div @*style='margin-bottom:-8px;'*@><input type='text' id='templateName' name='templateName' class='col-md-12 form-control' maxlength='64'><br /><span class='templateNameError error'></span></div>
                                        <span id="spnTemplateName" class="error" style="display:none;">@ImportDataLang.lblRequiredTemplateName</span>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="col-md-4 sheetSelect" style="display:none">
                            <label>@ImportDataLang.lblSheetName<span class="text-danger"> *</span></label>
                            <div class="form-group">
                                <div class="input-group ">
                                    <select name="sheetName" id="sheetName" class="form-control selectbox" autocomplete="off"></select>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="checkbox margin-top-30">
                                <label class="innrbox">
                                    @ImportDataLang.lblHasHeader
                                    <input type="checkbox" id="WithHeader" name="WithHeader" style="margin:0px">
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="row">

                    </div>

                </div>
            </div>
            <div class="col-md-12 text-align-right">
                <input type="button" class="btn btn-primary"  value="@ImportDataLang.lblPrev" id="UploadFilePrev" />
                <input type="button" class="btn btn-primary uploadfileProceed"  value="@ImportDataLang.lblNext"  id="UploadFileNext" />
                <input type="button" class="btn btn-primary uploadfileProceed" value="@ImportDataLang.lblFinish" id="UploadFileFinish" disabled />
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    'use strict';

    ; (function (document, window, index) {
        var inputs = document.querySelectorAll('.inputfile');
        Array.prototype.forEach.call(inputs, function (input) {
            var label = input.nextElementSibling,
                labelVal = label.innerHTML;

            input.addEventListener('change', function (e) {
                var fileName = '';
                if (this.files && this.files.length > 1)
                    fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
                else
                    fileName = e.target.value.split('\\').pop();

                if (fileName)
                    label.querySelector('span').innerHTML = fileName;
                else
                    label.innerHTML = labelVal;
            });

            // Firefox bug fix
            input.addEventListener('focus', function () { input.classList.add('has-focus'); });
            input.addEventListener('blur', function () { input.classList.remove('has-focus'); });
        });
    }(document, window, 0));

</script>
