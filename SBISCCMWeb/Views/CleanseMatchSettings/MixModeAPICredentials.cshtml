
@using SBISCCMWeb.Models;
@model CleanseMatchSettingsModel
@using SBISCCMWeb.Utility

@{
    Layout = null;
}
@*@using (Html.BeginForm("MixModeAPICredentials", "CleanseMatchSettings", FormMethod.Post, new { id = "form_directplusapi" }))
    {*@
@Html.Hidden("APIFamily", (string)ViewBag.APIFamily)
<form id="form_MixMode">
    <table data-swhgcallback="" data-swhgcontainer="dgBanInputData" data-swhgajax="true" class="table table-bordered panel-group customTable">
        <tbody>
            <tr>
                <td>
                    @*@Html.Hidden("SettingName", (string)ViewBag.ApiLayer)*@
                    <div class="form-group">
                        <div class="DivMixmodeDnBDirectLicense">
                            <h4>Direct 2.0 </h4>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label for="UserName">User Id</label>
                                    @Html.HiddenFor(@model => Model.DNB_USERNAME)
                                    @Html.TextBoxFor(@model => Model.Settings[Model.DNB_USERNAME].SettingValue, Model.Settings[Model.DNB_USERNAME].SettingValue, new { @class = "form-control sideTextboxes", @placeholder = "User Id", autocomplete = "off", @id = "txtMixModeUserName1", onfocus = "this.removeAttribute('readonly');", @readonly = true })
                                    <span id="spnMixModeUserName1" class="MonitoringError" style="display:none;">User Id is required.</span>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label for="Password">Password</label>
                                    @Html.HiddenFor(@model => Model.DNB_PASSWORD)
                                    @Html.PasswordFor(@model => Model.Settings[Model.DNB_PASSWORD].SettingValue, new { value = string.IsNullOrEmpty(Model.Settings[Model.DNB_PASSWORD].SettingValue) ? "" : SBISCCMWeb.Utility.Utility.GetEncryptedString(Model.Settings[Model.DNB_PASSWORD].SettingValue), @class = "form-control sideTextboxes DnBPassword", @placeholder = "Password", autocomplete = "off", @id = "txtMixModePassword1", onfocus = "this.removeAttribute('readonly');", @readonly = true })
                                    <span id="spnMixModePassword1" class="MonitoringError" style="display:none;">Password is required.</span>
                                </div>
                            </div>

                        </div>
                        <div class="DivMixmodeDirectPlusAPICredentials">
                            <h4>Direct +</h4>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label for="UserName">API Key</label>
                                    @Html.TextBoxFor(@model => Model.Settings[Model.DNB_PLUS_KEY].SettingValue, Model.Settings[Model.DNB_PLUS_KEY].SettingValue, new { @class = "form-control sideTextboxes", @placeholder = "User Name", autocomplete = "off", @id = "txtMixModeUserName", onfocus = "this.removeAttribute('readonly');", @readonly = true })
                                    <span id="spnMixModeUserName" class="MonitoringError" style="display:none;">User Name is required.</span>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label for="Password">API Secret</label>
                                    @Html.PasswordFor(@model => Model.Settings[Model.DNB_PLUS_SECRET].SettingValue, new { value = string.IsNullOrEmpty(Model.Settings[Model.DNB_PLUS_SECRET].SettingValue) ? "" : SBISCCMWeb.Utility.Utility.GetEncryptedString(Model.Settings[Model.DNB_PLUS_SECRET].SettingValue), @class = "form-control sideTextboxes DnBPassword", @placeholder = "Password", autocomplete = "off", @id = "txtMixModePassword", onfocus = "this.removeAttribute('readonly');", @readonly = true })
                                    <span id="spnMixModePassword" class="MonitoringError" style="display:none;">Password is required.</span>
                                </div>
                            </div>
                        </div>
                        <div class="DivMixmodeDirectPlusAPICredentials">
                            <h4>Cleanse Match API Family</h4>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <input type="radio" name="APIFamily" class="rButtonAPIAPIFamily" value="@ApiLayerType.Direct20" checked="checked" />&nbsp;<span>Direct20</span> &nbsp;&nbsp;&nbsp;
                                        <input type="radio" name="APIFamily" class="rButtonAPIAPIFamily" value="@ApiLayerType.Directplus" />&nbsp;<span>DirectPlus</span> &nbsp;&nbsp;&nbsp;
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-12 text-center">
                                    <input type="button" value="Update" name="btnSubmit" id="btnSubmit" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</form>
@* } *@