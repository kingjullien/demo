@using SBISCompanyCleanseMatchBusiness.Objects.EntitiesAndAdapters
@using SBISCCMWeb.Utility;
@model NotificationProfileEntity
@{
    Layout = null;
}
@Scripts.Render("~/bundles/popupjs")
@Styles.Render("~/Content/popupcss")

<div id="content" style="opacity: 1;">
    <section id="widget-grid" class="">
        <article class="col-lg-12 sortable-grid ui-sortable widget-data">
            <div id="wid-id-Process" class="jarviswidget jarviswidget-sortable jarviswidget-color-blueDark" data-widget-custombutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
                <header role="heading">
                    <h2>
                        @if (Model.NotificationProfileID > 0)
                        {
                            <strong>Edit Notification Profile</strong>
                        }
                        else
                        {
                            <strong>Create Notification Profile</strong>
                        }
                    </h2>
                    <ul id="widget-tab-Process" class="nav pull-right nav-pills Custom-pill">
                        <li class="">
                        </li>
                    </ul>
                </header>
                <div role="content">
                    <div class="jarviswidget-editbox"></div>
                    <div class="widget-body no-padding">
                        <div class="tab-content padding-10 ">
                            @using (Html.BeginForm("CreateNotificationProfile", "MonitorProfile", FormMethod.Post, new { id = "frmNotificationProfile", onsubmit = "LoaderProgress()" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.NotificationProfileID)
                                <div class="row form-group">
                                    <div class="col-xs-4 text-right">
                                        <label class="pull-right" for="NotificationProfileName">Notification Profile Name :</label>
                                    </div>
                                    <div class="col-xs-6 text-left">
                                        @Html.TextBoxFor(m => m.NotificationProfileName, new { @class = "form-control", @placeholder = "Notification Profile Name", autocomplete = "off", maxlength = "64" })
                                        <span id="spnName" class="error" style="display:none;">Notification Profile Name is required.</span>
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-4 text-right">
                                        <label class="pull-right" for="NotificationProfileDescription">Notification Profile Description :</label>
                                    </div>
                                    <div class="col-xs-6 text-left">
                                        @Html.TextBoxFor(m => m.NotificationProfileDescription, new { @class = "form-control", @placeholder = "Notification Profile Description", autocomplete = "off", maxlength = "256" })
                                        <span id="spnDesc" class="error" style="display:none;">Notification Profile Description is required.</span>
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-4 text-right">
                                        <label class="pull-right" for="DeliveryChannelUserPreferenceName">User Preference Name :</label>
                                    </div>
                                    <div class="col-xs-6 text-left">
                                        @Html.DropDownList("DeliveryChannelUserPreferenceName", (List<SelectListItem>)ViewBag.UserPreferences, new { @class = "form-control", autocomplete = "off" })
                                        <span id="spnDeliveryChannelUserPreferenceName" class="error" style="display:none;">User Preferences is required.</span>
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-4 text-right">
                                        <label class="pull-right" for="DeliveryFrequency">Delivery Frequency :</label>
                                    </div>
                                    <div class="col-xs-6 text-left">
                                        @Html.DropDownList("DeliveryFrequency", (List<SelectListItem>)ViewBag.Frequency, new { @class = "form-control", autocomplete = "off" })
                                        <span id="spnDeliveryFrequency" class="error" style="display:none;">Delivery Frequency is required.</span>
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-4 text-right">
                                        <label class="pull-right" for="StopDeliveryIndicator">Stop Delivery Indicator :</label>
                                    </div>
                                    <div class="col-xs-6 text-left">
                                        @Html.CheckBoxFor(m => m.StopDeliveryIndicator)
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-xs-4 text-right">
                                        <label class="pull-right" for="CompressedProductIndicator">Compressed Product Indicator :</label>
                                    </div>
                                    <div class="col-xs-6 text-left">
                                        @Html.CheckBoxFor(m => m.CompressedProductIndicator)
                                    </div>
                                </div>
                                    <div class="row form-group">
                                        <div class="col-xs-4 text-right">
                                            <label class="pull-right" for="InquiryReferenceText">Inquiry Reference Text :</label>
                                        </div>
                                        <div class="col-xs-6 text-right">
                                            @Html.TextAreaFor(m => m.InquiryReferenceText, new { @class = "form-control clsReferenceText", autocomplete = "off", maxlength="240" })
                                            <span id="spnReferenceText" class="error" style="display:none;">Inquiry Reference Text is required.</span>
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-xs-offset-4 col-md-2">
                                            @if (Model.NotificationProfileID > 0)
                                            {
                                                @Html.HiddenFor(m => m.NotificationProfileID)
                                                <input type="submit" value="Update Notification Profile" name="btnNotificationProfile" id="btnNotificationProfile" class="btn btn-primary" />
                                            }
                                            else
                                            {
                                                <input type="submit" value="Create Notification Profile" name="btnNotificationProfile" id="btnNotificationProfile" class="btn btn-primary" />
                                            }

                                        </div>
                                    </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </section>
</div>
<div class="loaderMain" id="divProgress">
    <div class="loaderDiv">
        <p class="loaderTxt">Please wait while processing...</p>
    </div>
</div>
<script src="~/Scripts/bootstrap/bootstrap.min.js"></script>
<script src="~/Scripts/CustomJS-minified/Common.js"></script>
<script src="~/Scripts/CustomJS-minified/Notification.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
@if (ViewBag.Message != null)
{
    <script type="text/javascript">
        bootbox.alert({
            title: "<i class='fa fa-info-circle' aria-hidden='true'></i> Message",
            message: '@ViewBag.Message', callback: function () {
                if ('@ViewBag.Message' == "Notification profile created successfully." || '@ViewBag.Message' == "Notification profile updated successfully.") {
                    window.parent.$.magnificPopup.close();
                }
            }
        });
    </script>
}
