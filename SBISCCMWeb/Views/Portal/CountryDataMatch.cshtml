@using SBISCCMWeb.LanguageResources
@model PagedList.IPagedList<dynamic>
@using SBISCCMWeb.Utility;
@{
    ViewBag.Title = PortalSettingLang.titleCountryGroupDataMatch;
    Layout = null;
}
@{
    List<string> listColumn = ViewBag.ColumnList != null ? ViewBag.ColumnList : new List<string>();
    List<SelectListItem> lstAllFilter = ViewBag.ExternalColumn != null ? ViewBag.ExternalColumn : new List<SelectListItem>();
    int z = 0;
}
@Html.AntiForgeryToken()
<div class="modal" id="CountryGroupImportModal" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-xs">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <div>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <h4 class="modal-title">@PortalSettingLang.hdrImportData</h4>
            </div>
            <div class="modal-body">
                <div id="myTabContent" class="tab-content">
                    <h2 class="text-center">@PortalSettingLang.lblMappingCoulmn</h2>
                    <div class="dataimportbox">
                        <table class="table table-bordered paddingtop7">
                            <thead>
                                <tr class="row">
                                    <th class="col-md-4">@PortalSettingLang.lblTableColumn</th>
                                    <th class="col-md-4">@PortalSettingLang.lblInputHeader</th>
                                    <th class="col-md-4">@PortalSettingLang.lblExample</th>
                                </tr>
                            </thead>
                            <tbody class="tbdataMatch">
                                @if (Model != null)
                                {
                                    if (Model.Count > 0)
                                    {
                                        foreach (var columnName in listColumn.Take(2))
                                        {
                                            string ErrorMessage = "ErrorMessage-" + z;
                                            <tr class="row">
                                                <td class="col-md-4">
                                                    <span class="spnExcelColumn" data-val="@(columnName)">@(columnName)</span>
                                                    @if (z == 0 || z == 1)
                                                    {
                                                        <span class="error">*</span>
                                                    }
                                                </td>
                                                <td class="col-md-4">@Html.DropDownList("DataColumn-" + z, new SelectList(lstAllFilter, "Value", "Text"), new { @class = "form-control SelectBox", @autocomplete = "off" })</td>
                                                <td class="col-md-4 WordBreak"></td>
                                            </tr>
                                            z++;
                                        }
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3"></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="importbuttondiv">
                    <input id="btnInsertData" class="btn btn-primary btnBlack  InsertData" type="submit" name="btnInsertData" title="@PortalSettingLang.titleImportdataintodatabase" value="@PortalSettingLang.lblImportdataintodatabase" disabled="disabled" />
                </div>
            </div>
            <div class="modal-footer"></div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $(".SelectBox").each(function () {
            var fieldName = $(this).parent().parent().find(".spnExcelColumn").attr('data-val');
            var selectedvalue = 0;
            $(".SelectBox option").each(function () {
                var optionName = $(this).text();
                if (fieldName == optionName) {
                    selectedvalue = $(this).val();
                }
                if (optionName.toLowerCase() == "groupname") {
                    if (fieldName.toLowerCase() == "groupname") {
                        selectedvalue = $(this).val();
                    }
                }
                if (optionName.toLowerCase() == "countries" || optionName.toLowerCase() == "isoalpha2codes" || optionName.toLowerCase() == "isoalpha2code") {
                    if (fieldName.toLowerCase() == "isoalpha2code") {
                        selectedvalue = $(this).val();
                    }
                }
            });
            $(this).val(selectedvalue);
            var id = $(this).attr('id');
            var CurrentColumn = $(this).val();
            if (parseInt(CurrentColumn) != 0) {
                $.ajax({
                    type: "POST",
                    url: "/Portal/UpdateExamples",
                    data: JSON.stringify({ CurrentColumn: CurrentColumn }),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        $("#" + id).parent().next().text(data);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                    }
                });
            } else {
                $("#" + id).parent().next().text('');
            }
        });
        if (parseInt($("#DataColumn-0").val()) > 0 && parseInt($("#DataColumn-1").val())) {
            $("#btnInsertData").attr('disabled', false);
        }
        else {
            $("#btnInsertData").attr('disabled', 'disabled');
        }
    });
</script>