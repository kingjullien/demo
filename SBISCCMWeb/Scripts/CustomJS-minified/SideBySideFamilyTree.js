var DragAndDropRightMenu = function (e) { function a(e) { var a = $(this).closest("li"), t = e.closest("li"); return !$.contains(t[0], a[0]) } function t(e, a) { } function i(e, a) { } function n(e, a) { var t = $(this).closest("li").attr("data-val"), i = a.draggable.closest("li").attr("data-val"); $('input[name="__RequestVerificationToken"]').val(); a.draggable.closest("span").hasClass("node-cpe1") ? bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: moveNode, callback: function (e) { if (e) { var a = $('input[name="__RequestVerificationToken"]').val(), n = "sourceFamilyTreeId:" + $("#RightView_FamilyTreeId").val() + "@#$sourceFamilyTreeDetailId:" + i + "@#$destinationFamilyTreeId:" + $("#RightView_FamilyTreeId").val() + "@#$destinationFamilyTreeDetailId:" + t, r = parent.ConvertEncrypte(encodeURI(n)).split("+").join("***"); $.ajax({ type: "POST", url: "/FamilyTree/MoveFamilyTree/", data: JSON.stringify({ Parameters: r }), contentType: "application/json", headers: { __RequestVerificationToken: a }, success: function (e) { e && ChangeView() }, error: function (e, a, t) { } }) } } }) : bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: copyNode, callback: function (e) { if (e) { var a = $('input[name="__RequestVerificationToken"]').val(), n = "sourceFamilyTreeId:" + $("#LeftView_FamilyTreeId").val() + "@#$sourceFamilyTreeDetailId:" + i + "@#$destinationFamilyTreeId:" + $("#RightView_FamilyTreeId").val() + "@#$destinationFamilyTreeDetailId:" + t, r = parent.ConvertEncrypte(encodeURI(n)).split("+").join("***"); $.ajax({ type: "POST", url: "/FamilyTree/CopyFamilyTree/", data: JSON.stringify({ Parameters: r }), headers: { __RequestVerificationToken: a }, contentType: "application/json", success: function (e) { e && ChangeView() }, error: function (e, a, t) { } }) } } }) } return e.enable = function (e) { $(e).find(".node-cpe1").draggable({ helper: "clone", zIndex: 1e4, snapMode: "inner" }), $(e).find(".node-cpe1, .node-facility").droppable({ activeClass: "active", hoverClass: "hover", accept: a, over: t, out: i, drop: n, greedy: !0, tolerance: "pointer" }) }, e }(DragAndDropRightMenu || {}), DragAndDropLeftMenu = function (e) { function a(e) { var a = $(this).closest("li"), t = e.closest("li"); return !$.contains(t[0], a[0]) } function t(e, a) { } function i(e, a) { } function n(e, a) { var t = $(this).closest("li").attr("data-val"), i = a.draggable.closest("li").attr("data-val"); a.draggable.closest("span").hasClass("node-cpe1") ? bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: moveNode, callback: function (e) { if (e) { var a = $('input[name="__RequestVerificationToken"]').val(), n = "sourceFamilyTreeId:" + $("#RightView_FamilyTreeId").val() + "@#$sourceFamilyTreeDetailId:" + i + "@#$destinationFamilyTreeId:" + $("#RightView_FamilyTreeId").val() + "@#$destinationFamilyTreeDetailId:" + t, r = parent.ConvertEncrypte(encodeURI(n)).split("+").join("***"); $.ajax({ type: "POST", url: "/FamilyTree/MoveFamilyTree/", data: JSON.stringify({ Parameters: r }), headers: { __RequestVerificationToken: a }, contentType: "application/json", success: function (e) { e && ChangeView() }, error: function (e, a, t) { } }) } } }) : bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: copyNode, callback: function (e) { if (e) { var a = $('input[name="__RequestVerificationToken"]').val(), n = "sourceFamilyTreeId:" + $("#LeftView_FamilyTreeId").val() + "@#$sourceFamilyTreeDetailId:" + i + "@#$destinationFamilyTreeId:" + $("#RightView_FamilyTreeId").val() + "@#$destinationFamilyTreeDetailId:" + t, r = parent.ConvertEncrypte(encodeURI(n)).split("+").join("***"); $.ajax({ type: "POST", url: "/FamilyTree/CopyFamilyTree/", data: JSON.stringify({ Parameters: r }), headers: { __RequestVerificationToken: a }, contentType: "application/json", success: function (e) { e && ChangeView() }, error: function (e, a, t) { } }) } } }) } return e.enable = function (e) { $(e).find(".node-cpeLeft").draggable({ helper: "clone", zIndex: 1e4, snapMode: "inner" }), $(e).find(".node-cpe1").draggable({ helper: "clone", zIndex: 1e4, snapMode: "inner" }), $(e).find(".node-cpe1, .node-facility").droppable({ activeClass: "active", hoverClass: "hover", accept: a, over: t, out: i, drop: n, greedy: !0, tolerance: "pointer" }) }, e }(DragAndDropLeftMenu || {}); function GetData(e, a, t) { switch ("False" == $(a).attr("IsLoad")) { case !0: case "true": $(a).next("ul").length > 0 && $(a).next("ul").remove(), $.ajax({ type: "POST", url: "/FamilyTree/GetData/", data: JSON.stringify({ id: e, type: t }), contentType: "application/json", success: function (e) { e.Success && ($(a).after(e.ResponseString), $(a).attr("IsLoad", "True"), setTimeout(function () { PartialPageRefresh($(a).parent()) }, 500)) }, error: function (e, t, i) { $(a).attr("IsLoad", "False"), alert("Error") } }); case 1: case "1": case "on": case "yes": return !0; default: return !1 } } function PartialPageRefresh(e) { $(".tree > ul").attr("role", "tree").find("ul").attr("role", "group"), $(e).find("li:has(ul)").addClass("parent_li").attr("role", "treeitem").find(" > span").attr("title", "Collapse this branch").on("click", function (e) { var a = $(this).parent("li.parent_li").find(" > ul > li"); a.is(":visible") ? (a.hide(), $(this).attr("title", "Expand this branch").find(" > i").removeClass().addClass("fa fa-lg fa-plus-circle")) : (a.show(), $(this).attr("title", "Collapse this branch").find(" > i").removeClass().addClass("fa fa-lg fa-minus-circle")), e.stopPropagation() }), BindContextMenuRight(), BindContextMenuLeft() } function BindContextMenuRight() { var e = $("#ActivateFeature").val(), a = !1; (a = "1" != $("#hdnIsEditableRight").val()) && (a = "1" == $("#hdnIsLockForEditRight").val()); a || DragAndDropRightMenu.enable("#dragRootRight"), $.contextMenu({ selector: ".context-menu-one-right", callback: function (e, a) { }, events: { show: function (a) { setTimeout(function () { a.$menu.find(".context-menu-disabled > span").attr("title", e) }, 50) } }, items: { DeleteNode: { name: deleteNodeSingle, disabled: function (e, a) { var t = !1; (t = "1" != $("#hdnIsEditableRight").val()) && (t = "1" == $("#hdnIsLockForEditRight").val()); return t }, callback: function () { var e = $(this).attr("data-val"), a = $('input[name="__RequestVerificationToken"]').val(), t = 0; t = $("#rdoSingle").is(":checked") ? $("#FamilyTreeId").val() : $("#RightView_FamilyTreeId").val(), bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: deleteNode, callback: function (i) { if (i) { var n = "sourceFamilyTreeId:" + t + "@#$sourceFamilyTreeDetailId:" + e; $.ajax({ type: "POST", url: "/FamilyTree/DeleteFamilytreeNode/", data: JSON.stringify({ Parameters: ConvertEncrypte(encodeURI(n)).split("+").join("***") }), contentType: "application/json", headers: { __RequestVerificationToken: a }, success: function (e) { e && ChangeView() }, error: function (e, a, t) { } }) } } }) } }, "Add Node": { name: addNode, disabled: function (e, a) { var t = !1; (t = "1" != $("#hdnIsEditableRight").val()) && (t = "1" == $("#hdnIsLockForEditRight").val()); return t }, callback: function () { var e = $(this).attr("data-val"); $.ajax({ type: "GET", url: "/FamilyTree/AddFamilyNode?Parameters=" + ConvertEncrypte(encodeURI(e)).split("+").join("***"), dataType: "HTML", async: !1, success: function (e) { $("#AddFamilyNodeModalMain").html(e), DraggableModalPopup("#AddFamilyNodeModal") } }) } } } }) } function BindContextMenuLeft() { DragAndDropLeftMenu.enable("#dragRootLeft") } $(function () { $("#dragRootLeft, #dragRootRight").sortable({ connectWith: ".connectedSortable" }).disableSelection() }), $(document).ready(function () { $(".tree > ul").attr("role", "tree").find("ul").attr("role", "group"), $(".tree").find("li:has(ul)").addClass("parent_li").attr("role", "treeitem").find(" > span").attr("title", "Collapse this branch").on("click", function (e) { var a = $(this).parent("li.parent_li").find(" > ul > li"); a.is(":visible") ? (a.hide(), $(this).attr("title", "Expand this branch").find(" > i").removeClass().addClass("fa fa-lg fa-plus-circle")) : (a.show(), $(this).attr("title", "Collapse this branch").find(" > i").removeClass().addClass("fa fa-lg fa-minus-circle")), e.stopPropagation() }), BindContextMenuRight(), BindContextMenuLeft() });