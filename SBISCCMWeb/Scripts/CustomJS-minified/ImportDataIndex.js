function OnSuccessImportJob() { $("#divProgress").hide(), pageSetUp() } function GetFixedValue(e) { var t = $("#IsHeader").val(), a = $("#txtStart" + e).val(), o = $("#txtLength" + e).val(), n = $("#txtcolumnName" + e).val(); $.isNumeric(a) && $.isNumeric(o) ? ("true" == t.toLowerCase() && $.ajax({ type: "POST", url: "/ImportData/UpdateFixedColumnNames", data: JSON.stringify({ startIndex: a, fieldLength: o, fieldName: n }), dataType: "json", async: !0, contentType: "application/json", success: function (t) { $("#txtcolumnName" + e).val(t) }, error: function (e, t, a) { } }), $.ajax({ type: "POST", url: "/ImportData/UpdateFixedExamples", data: JSON.stringify({ startIndex: a, fieldLength: o, fieldName: n }), dataType: "json", async: !0, contentType: "application/json", success: function (t) { $(".FixedColumnMeta").find("#" + e).find("td:last").text(t) }, error: function (e, t, a) { } })) : $(".FixedColumnMeta").find("#" + e).find("td:last").text("") } function addfullheightPopupClass() { $(".popupImportData").removeClass("mediumHeight confirmHeight"), $(".popupImportData").addClass("fullheight") } function addConfirmScreenPopupclass() { $(".popupImportData").removeClass("fullheight"), $(".popupImportData").removeClass("mediumHeight"), $(".popupImportData").addClass("confirmHeight") } function addMediumScreenPopupclass() { $(".popupImportData").removeClass("fullheight"), $(".popupImportData").removeClass("confirmHeight"), $(".popupImportData").addClass("mediumHeight") } function RemoveAllPopupClass() { $(".popupImportData").removeClass("fullheight"), $(".popupImportData").removeClass("mediumHeight"), $(".popupImportData").removeClass("confirmHeight") } function hideFileUploadStep() { $("#FileUploadStep").hide(), $("#ImportProcessStep").show() } function showFileUploadStep() { $("#ImportProcessStep").hide(), $("#ImportProcessStep").html(""), $("#FileUploadStep").show() } function ClosePopupAndReload() { $("#ImportFileIndexModal").modal("hide"), location.reload() } function addRemoveOISingleEntryPopupClass(e, t) { t ? $(".popupOrbSingleEntryForm").addClass(e) : $(".popupOrbSingleEntryForm").removeClass(e) } function addRemoveDNBSingleEntryPopupClass(e) { var t = $("#IsTagsLicenseAllow").val(); e ? $(".popupEntryForm").addClass("true" === t.toLowerCase() ? "popupEntryMatchrefreshForm" : "popupEntryMatchrefreshFormNoTag") : $(".popupEntryForm").removeClass("true" === t.toLowerCase() ? "popupEntryMatchrefreshForm" : "popupEntryMatchrefreshFormNoTag") } function LoadShowBackgroundProcessList() { $.ajax({ type: "GET", url: "/Home/BackgroundProcessList", dataType: "HTML", success: function (e) { $("#BackgroundProcessListModalMain").html(e), DraggableModalPopup("#BackgroundProcessListModal"); InitFilters([["TimePeriod", "TimePeriod", "/Home/GetDurationHoursDD", "true", "text"], ["ProcessType", "ProcessType", "/Home/GetETLTypeDD", "", "value", "text", "IMPORT", "true"], ["StatusType", "StatusType", "/Home/GetStatusType", "false"]], "/Home/FilterBackGroundProcess", "#BackGroundProcessFilterMain", "#divPartialBackgroundProcess", "") } }) } function CleansMatchSinngleEnrtyFormSuccess(e) { ShowMessageNotification("success", e.message, !1), e.result && $("#SingleEntryFormModal").modal("hide") } function OICleansMatchSinngleEnrtyFormSuccess(e) { ShowMessageNotification("success", e.message, !1), e.result && $("#SingleEntryFormModal").modal("hide") } function LoadTemplateAgain(e) { $.ajax({ type: "GET", url: e, dataType: "HTML", contentType: "application/html", cache: !1, success: function (e) { $("#divPartialImportTemplate").html(e) }, error: function (e, t, a) { } }) } function LoadTemplateDetails(e) { var t = ConvertEncrypte(encodeURI("TemplateId:" + e)).split("+").join("***"); $.ajax({ type: "GET", url: "/ImportData/GetTemplateDetails?Parameters=" + t, dataType: "HTML", success: function (e) { $("#TemplateDetailsModalMain").html(e), DraggableModalPopup("#TemplateDetailsModal") } }) } function SetTemplateListFilter() { InitFilters([["Format", "Format", "/ImportData/GetFormat", "true"], ["TemplateName", "TemplateName", "/ImportData/GetTemplateName"], ["ImportType", "ImportType", "/ImportData/GetImportTypes"]], "/ImportData/FilterImportDataTemplateList", "#ImportDataTemplateListFilter", "#divPartialImportTemplate", "InitDataTable('#tblImportFileTemplate', [10, 20, 30], false, [0, 'desc'])") } $(document).ajaxStart(function () { $("#divProgress").show() }).ajaxStop(function () { $("#divProgress").hide() }), $(document).ready(function () { InitFilters([["Files", "Files", "/ImportData/GetFilesDD", "true"], ["User", "User", "/ImportData/GetUserList", "false", "text"], ["ImportType", "ImportType", "/ImportData/GetImportTypes"], ["Status", "Status", "/ImportData/GetAllStatus"], ["Message", "Message", "", "", "", "onlytext"], ["RequestedDate", "RequestedDate", "/ImportData/GetRequestedDate", "false", "text", "date"], ["ErrorMessage", "ErrorMessage", "", "", "", "onlytext"]], "/ImportData/FilterImportData", "#ImportDataFilterMain", "#ImportFileListing", "InitDataTable('#ImportJobs', [10,20,30], false,[2,'desc'])") }), $(document).on("click", "#singleForm", function () { var e = "", t = $("#CurrentProvider").val(); "oi" == t.toLowerCase() ? e = "/ImportData/OISingleEntryForm" : "dandb" == t.toLowerCase() && (e = "/ImportData/SingleFormEntry"), $.ajax({ type: "GET", url: e, dataType: "HTML", success: function (e) { $("#SingleEntryFormModalMain").html(e), DraggableModalPopup("#SingleEntryFormModal") } }) }), $(document).on("click", "#btnImportFile", function () { $.ajax({ type: "GET", url: "/ImportData/ImportFileIndex", dataType: "HTML", success: function (e) { $("#ImportFileIndexModalMain").html(e), DraggableModalPopup("#ImportFileIndexModal") } }) }), $(document).on("change", ".pagevalueChange", function () { var e = "/ImportData/GetFileImportRequest?pagevalue=" + $(this)[0].value + "&sortby=" + $("#SortBy").val() + "&sortorder=" + $("#SortOrder").val() + "&FileType=" + $("#FileType").val(); $.ajax({ type: "GET", url: e, dataType: "HTML", contentType: "application/html", async: !1, cache: !1, success: function (e) { $("#ImportFileListing").html(e), pageSetUp() }, error: function (e, t, a) { } }) }), $(document).on("change", "#DisplayImportFileType", function () { var e = "/ImportData/GetFileImportRequest?FileType=" + $(this)[0].value + "&IsInnerPage=" + !0; $.ajax({ type: "GET", url: e, dataType: "HTML", contentType: "application/html", async: !1, cache: !1, success: function (e) { $("#ImportFileListing").html(e), pageSetUp() }, error: function (e, t, a) { } }) }), $(document).on("change", "input[type=radio][name=FileFormat]", function () { $(".file_options .file_type_option").removeClass("bgLightBlue"), $(this).is(":checked") && $(this).parent().parent().addClass("bgLightBlue") }), $(document).on("change", "input[type=radio][name=ImportMode]", function () { $(".importTypes .file_type_option").removeClass("bgLightBlue"), $(this).is(":checked") && $(this).parent().parent().addClass("bgLightBlue") }), $(document).on("click", "#ImportFileIndexNext", function () { var e = $("input[name='FileFormat']:checked").val(), t = $("input[name='ImportMode']:checked").val(); $.ajax({ type: "GET", url: "/ImportData/UploadFileIndex?FileFormat=" + e + "&ImportMode=" + t, dataType: "html", async: !1, contentType: !1, processData: !1, success: function (e) { showFileUploadStep(), $("#FileUploadStep").html(e) } }) }), $(document).on("click", ".uploadfileProceed", function () { var e = new FormData, t = $("#FileUploadStep #ImportMode").val(), a = $("#sheetName").val(); null == a && (a = ""); var o = "false"; if ("finish" == $(this).val().toLowerCase() && (o = "true"), null != $("#file")[0].files[0]) { if ("EXCEL" == $("#fileType").val() && ("" == a || null == a)) return void $(".generalMsg").text(requiredSheetName); var n = "", r = ($("#fileType").val(), $("#TemplateId").val().split("::")[0]); if ("true" == $("#isText").val().toLowerCase() && ($(".errorMessage").text(""), "" == (n = $("#txtDelimiter").val()))) return void $(".errorMessage").text(); var s = $('input[name="__RequestVerificationToken"]').val(); "FIXED" == $("#fileType").val() ? (e.append("file", $("#file")[0].files[0]), e.append("header", $("#WithHeader").prop("checked")), e.append("templateId", r), e.append("ImportMode", t), e.append("isFinish", o), $.ajax({ type: "POST", url: "/ImportData/UploadFixedFile", async: !1, data: e, headers: { __RequestVerificationToken: s }, contentType: !1, processData: !1, success: function (e) { if ("Only formats allowed is txt" == e) { var a = $("#allowedFormats").val().split(","); return $(".generalMsg").text(someFormatsAllowed + " " + a), $("#file").val(""), !1 } return e == uploadFailed ? ($(".generalMsg").text(e), !1) : e == errorOccurred ? ($(".generalMsg").text(e), !1) : e.indexOf(error + ":") > -1 ? ($(".generalMsg").text(e), !1) : e == unableImportBlankFile ? ($(".generalMsg").text(e), !1) : e == noRows ? ($(".generalMsg").text(e), !1) : e == invalidTempate ? ($(".generalMsg").text(e), !1) : e == unicodeFormatNotValid ? ($(".generalMsg").text(e), !1) : (o == isTrue ? parent.addConfirmScreenPopupclass() : t == dataImport ? parent.addfullheightPopupClass() : parent.addMediumScreenPopupclass(), hideFileUploadStep(), void $("#ImportProcessStep").html(e)) }, error: function (e, t, a) { } })) : (e.append("file", $("#file")[0].files[0]), e.append("header", $("#WithHeader").prop("checked")), e.append("isTSV", $("#isTSV").val().toLowerCase()), e.append("delimiter", n), e.append("ImportMode", t), e.append("templateId", r), e.append("sheetName", a), e.append("isFinish", o), $.ajax({ type: "POST", url: "/ImportData/UploadFileIndex", data: e, headers: { __RequestVerificationToken: s }, contentType: !1, processData: !1, success: function (e) { if (e == selectValidDelimiter) return $(".generalMsg").text(e), !1; if (e == someFormatsAreAllowed) { var a = $("#allowedFormats").val().split(","); return $(".generalMsg").text(someFormatsAllowed + " " + a), $("#file").val(""), !1 } return e.indexOf(alreadyBelongsToFile) > -1 ? ($(".generalMsg").text(e), !1) : e == uploadFailed ? ($(".generalMsg").text(e), !1) : e == errorOccurred ? ($(".generalMsg").text(e), !1) : e.indexOf(error + ":") > -1 ? ($(".generalMsg").text(e), !1) : e == unableImportBlankFile ? ($(".generalMsg").text(e), !1) : e == noRows ? ($(".generalMsg").text(e), !1) : e == invalidTempate ? ($(".generalMsg").text(e), !1) : e == unicodeFormatNotValid ? ($(".generalMsg").text(e), !1) : (o == isTrue ? parent.addConfirmScreenPopupclass() : t == dataImport ? parent.addfullheightPopupClass() : parent.addMediumScreenPopupclass(), $(".generalMsg").text(""), hideFileUploadStep(), void $("#ImportProcessStep").html(e)) }, error: function (e, t, a) { } })) } else $(".generalMsg").text(requiredFile); return !1 }), $(document).on("change", "#file", function () { if ("" != $("#file").val()) { var e = $("#allowedFormats").val().split(","); if (-1 == $.inArray($(this).val().split(".").pop().toLowerCase(), e)) ShowMessageNotification("success", someFormatsAllowed + " " + e.join(", "), !1, !1), $("#file").val(""); else if ("EXCEL" == $("#fileType").val()) { var t = $('input[name="__RequestVerificationToken"]').val(), a = new FormData; a.append("file", $("#file")[0].files[0]), $.ajax({ type: "POST", url: "/ImportData/GetSheetNames", data: a, headers: { __RequestVerificationToken: t }, contentType: !1, processData: !1, success: function (e) { if (e != someFormatsAreAllowed) { if (e.length > 0) { $(".sheetSelect").show(), $("#sheetName option").remove(); for (var t = 0; t < e.length; t++)$("#sheetName").append(new Option(e[t].split("::")[0], e[t])) } } else ShowMessageNotification("success", e, !1, !1) } }) } } else $(".sheetSelect").hide() }), $(document).on("click", "#ComfirmDetailsFinish", function () { $.ajax({ type: "POST", url: "/ImportData/SaveFileImportRequest", dataType: "json", success: function (e) { e == dataNotImportedToDatabase ? parent.ShowMessageNotification("success", e, !1, !1) : (parent.ShowMessageNotification("success", e, !1, !1), ClosePopupAndReload()) }, error: function (e, t, a) { } }) }), $(document).on("change", "#TemplateId", function () { var e = $(this).val().split("::"), t = e[0], a = e[1], o = e[2], n = e[3]; parseInt(t) > 0 ? ($("#UploadFileFinish").attr("disabled", !1), a && $("#sheetName > option").each(function () { this.value.split("::")[0].toLowerCase() === a.toLowerCase() && $("#sheetName").val(this.value) }), o && $("#txtDelimiter").val(o), n && "true" == n.toLowerCase() ? $("#WithHeader").prop("checked", !0) : $("#WithHeader").prop("checked", !1)) : ($("#sheetName").val(""), $("#WithHeader").prop("checked", !1), $("#UploadFileFinish").attr("disabled", !0)) }), $(document).on("click", "#ColumnMetaNext", function () { var e = 0, t = $("#ImportMode").val(), a = $("#IsTemplate").val(), o = [], n = [], r = []; if ($(".startIndex").each(function () { $.isNumeric($(this).val()) ? (o.push($(this).val()), $(this).removeClass("custom-Has-error")) : ($(this).addClass("custom-Has-error"), e++) }), $(".fieldLength").each(function () { $.isNumeric($(this).val()) ? (n.push($(this).val()), $(this).removeClass("custom-Has-error")) : ($(this).addClass("custom-Has-error"), e++) }), $(".columnName").each(function () { var t = $(this).val(); t ? 0 == r.length ? (r.push(t), $(this).removeClass("custom-Has-error")) : ($.each(r, function (a, o) { if (o.toLowerCase() === t.toLowerCase()) return parent.ShowMessageNotification("success", msgColumnname + t + msgColumnalreadyexists, !1), e++ , !1 }), r.push(t)) : ($(this).addClass("custom-Has-error"), e++) }), 0 === e) { var s = $('input[name="__RequestVerificationToken"]').val(); $.ajax({ type: "POST", url: "/ImportData/FixedFileColumnMapping", data: JSON.stringify({ startIndex: o, fieldLength: n, fieldName: r, IsTemplate: a, ImportMode: t }), headers: { __RequestVerificationToken: s }, contentType: "application/json", processData: !1, success: function (e) { e == invalidFieldMapping ? parent.ShowMessageNotification("success", e, !1) : e == errorOccurred ? parent.ShowMessageNotification("success", e, !1) : $("#ImportProcessStep").html(e) }, error: function (e, t, a) { } }) } }), $(document).on("click", "#btnAddColumn", function () { var e = $("#IsHeader").val(), t = $(".FixedColumnMeta tr:last").attr("id"), a = $("#txtStart" + t).val(), o = $("#txtLength" + t).val(), n = ""; $.isNumeric(a) && $.isNumeric(o) && (n = parseInt(a) + parseInt(o)), t = parseInt(t) + 1, "true" === e.toLowerCase() ? $(".FixedColumnMeta").append('<tr class="row" id="' + t + '"><td><input type="text" class="startIndex OnlyDigit" id="txtStart' + t + '" value="' + n + '"></td > <td><input type="text" class="fieldLength OnlyDigit" id="txtLength' + t + '" /></td ><td><input type="text" class="columnName" id="txtcolumnName' + t + '"  />&nbsp;&nbsp;<a href="javascript:void(0);" class="removeColumn" data-id="' + t + '"> <i class="fa fa-times-circle"></i></a ></td ><td class="col-md-3"></td></tr > ') : $(".FixedColumnMeta").append('<tr class="row" id="' + t + '"><td><input type="text" class="startIndex OnlyDigit" id="txtStart' + t + '" value="' + n + '"></td > <td><input type="text" class="fieldLength OnlyDigit" id="txtLength' + t + '" /></td ><td><input type="text" class="columnName" id="txtcolumnName' + t + '" value="Column ' + t + '" readonly="true" />&nbsp;&nbsp;<a href="javascript:void(0);" class="removeColumn" data-id="' + t + '"> <i class="fa fa-times-circle"></i></a ></td ><td class="col-md-3"></td></tr > ') }), $(document).on("click", ".removeColumn", function () { var e = $(this).attr("data-id"); $("#" + e).remove() }), $(document).on("keypress", ".OnlyDigit", function (e) { var t = 0 == e.keyCode ? e.charCode : e.keyCode; return t >= 48 && t <= 57 || 8 == t }), $(document).on("blur", ".startIndex", function () { GetFixedValue($(this).attr("id").replace("txtStart", "")) }), $(document).on("blur", ".fieldLength", function () { GetFixedValue($(this).attr("id").replace("txtLength", "")) }), $(document).on("click", "#UploadFilePrev", function () { $.ajax({ type: "GET", url: "/ImportData/ImportFileIndex?IsFromPrev=" + !0, dataType: "html", async: !1, contentType: !1, success: function (e) { hideFileUploadStep(), $("#ImportProcessStep").html(e) } }) }), $(document).on("click", "#ColumnMappingPrev", function () { "FIXED" == $("#fileType").val() ? $.ajax({ type: "GET", url: "/ImportData/BackToFixedFileMetaColumn", dataType: "html", async: !1, contentType: !1, success: function (e) { $("#ImportProcessStep").html(e) } }) : (parent.RemoveAllPopupClass(), showFileUploadStep()) }), $(document).on("click", "#ColumnMetaPrev", function () { parent.RemoveAllPopupClass(), showFileUploadStep() }), $(document).on("click", "#ConfirmDetailsPrev", function () { "true" == $("#IsFromFinish").val().toLowerCase() ? (parent.RemoveAllPopupClass(), showFileUploadStep()) : $.ajax({ type: "GET", url: "/ImportData/BackToColumnMapping", dataType: "html", async: !1, contentType: !1, success: function (e) { $("#ImportType").val() == dataImport ? parent.addfullheightPopupClass() : parent.addMediumScreenPopupclass(), $("#ImportProcessStep").html(e) } }) }), $(document).on("change", ".SelectBox", function () { $.UserRole = $("#UserRole").val(), $.UserLOBTag = $("#UserLOBTag").val(); var e = $("#ImportMode").val(), t = $(this).attr("id"), a = $(this).val(), o = $("#Tags").val(), n = $("#IsTag").val(), r = $("#LicenseEnableTags").val(), s = 0; "Data Import" == e && (s = 0, parseInt($("#DataColumn-0").val()) > 0 && parseInt($("#DataColumn-7").val()) > 0 || s++ , "lob" == $.UserRole.toLowerCase() && "true" == r.toLowerCase() && ("false" == n.toLowerCase() ? "" != o && "0" != o || s++ : parseInt($("#DataColumn-10").val()) > 0 || s++), s > 0 ? ($("#ColumnMappingFinish").attr("disabled", "disabled"), $(".TemplateButtons").attr("disabled", "disabled")) : ($("#ColumnMappingFinish").attr("disabled", !1), $(".TemplateButtons").attr("disabled", !1))), "Match Refresh" == e && (s = 0, parseInt($("#DataColumn-0").val()) > 0 && parseInt($("#DataColumn-1").val()) && parseInt($("#DataColumn-2").val()) > 0 || s++ , "lob" == $.UserRole.toLowerCase() && "true" == r.toLowerCase() && ("false" == n.toLowerCase() ? "" != o && "0" != o || s++ : parseInt($("#DataColumn-3").val()) > 0 || s++), s > 0 ? ($("#ColumnMappingFinish").attr("disabled", "disabled"), $(".TemplateButtons").attr("disabled", "disabled")) : ($("#ColumnMappingFinish").attr("disabled", !1), $(".TemplateButtons").attr("disabled", !1))), 0 != parseInt(a) ? $.ajax({ type: "POST", url: "/ImportData/UpdateExamples", data: JSON.stringify({ CurrentColumn: a }), dataType: "json", contentType: "application/json", success: function (e) { $("#" + t).parent().parent().next().text(e) }, error: function (e, t, a) { } }) : $("#" + t).parent().parent().next().text("") }), $(document).on("click", "#ColumnMappingFinish", function () { var e = [], t = [], a = [], o = 0, n = $("#Tags").val(), r = ($("#IsTag").val(), $("#IsInLanguage").val(), $(".Language").val()), s = ($("#LicenseEnableTags").val(), $("#fileType").val()), l = $("#ImportMode").val(); if (null != n && "0" != n || (n = ""), null == r && (r = ""), $(".SelectBox").each(function () { e.push($(this).val()), 1, $(this).hasClass("chzn-select") ? t.push("Tags") : $(this).hasClass("Language") ? t.push("InLanguage") : t.push($(this).find(":selected").text()), $(this).parent().removeClass("has-error") }), e.length > 0) for (var i = 0; i < e.length; i++) { 0 != i && 7 != i || 0 == $("#DataColumn-" + i).val() && $("#DataColumn-" + i).parent().addClass("has-error"), "Match Refresh" == l && 1 == i && 0 == $("#DataColumn-" + i).val() && $("#DataColumn-" + i).parent().addClass("has-error"); for (var p = 0; p <= e.length; p++)if (i != p && e[i] == e[p]) { 1; var c = $("#DataColumn-" + i).val(), u = $("#DataColumn-" + p).val(); (parseInt(c) > 0 || parseInt(u) > 0) && (o += 1, parseInt(c) > 0 && $("#DataColumn-" + i).parent().addClass("has-error"), parseInt(u) > 0 && $("#DataColumn-" + p).parent().addClass("has-error")) } } if ($(".spnExcelColumn").each(function () { var e = $(this).attr("data-val"); "State (State is required for US)" == e && (e = "State"), a.push(e) }), 0 == $("#DataColumn-0").val() || 0 == $("#DataColumn-7").val()) return !1; if ("Match Refresh" == l && 0 == $("#DataColumn-1").val()) return !1; if (o > 0) return !1; if (!$(".norecored").is(":visible")) { var m = $('input[name="__RequestVerificationToken"]').val(); return $.ajax({ type: "POST", url: "/ImportData/ConfirmImportDetails", data: JSON.stringify({ OrgColumnName: t, ExcelColumnName: a, Tags: n, InLanguage: r, fileType: s }), contentType: "application/json", headers: { __RequestVerificationToken: m }, success: function (e) { parent.addConfirmScreenPopupclass(), $("#ImportProcessStep").html(e) }, error: function (e, t, a) { } }), !0 } return parent.ShowMessageNotification("success", msgUploadData, !0, !1), !1 }), $(document).on("click", ".TemplateButtons", function () { var e, t = $(this).text().trim(), a = [], o = [], n = [], r = 0, s = $("#Tags").val(), l = ($("#IsTag").val(), $("#IsInLanguage").val(), $(".Language").val()), i = ($("#LicenseEnableTags").val(), $("#fileType").val()), p = $("#ImportMode").val(); if (e = "/ImportData/SaveTemplate", null != s && "0" != s || (s = ""), null == l && (l = ""), $(".SelectBox").each(function () { a.push($(this).val()), 1, $(this).hasClass("chzn-select") ? o.push("Tags") : $(this).hasClass("Language") ? o.push("InLanguage") : o.push($(this).find(":selected").text()), $(this).parent().removeClass("has-error") }), a.length > 0) for (var c = 0; c < a.length; c++) { 0 != c && 7 != c || 0 == $("#DataColumn-" + c).val() && $("#DataColumn-" + c).parent().addClass("has-error"), "Match Refresh" == p && 1 == c && 0 == $("#DataColumn-" + c).val() && $("#DataColumn-" + c).parent().addClass("has-error"); for (var u = 0; u <= a.length; u++)if (c != u && a[c] == a[u]) { 1; var m = $("#DataColumn-" + c).val(), d = $("#DataColumn-" + u).val(); (parseInt(m) > 0 || parseInt(d) > 0) && (r += 1, parseInt(m) > 0 && $("#DataColumn-" + c).parent().addClass("has-error"), parseInt(d) > 0 && $("#DataColumn-" + u).parent().addClass("has-error")) } } if ($(".spnExcelColumn").each(function () { var e = $(this).attr("data-val"); "State (State is required for US)" == e && (e = "State"), n.push(e) }), 0 == $("#DataColumn-0").val() || 0 == $("#DataColumn-7").val()) return !1; if ("Match Refresh" == p && 0 == $("#DataColumn-1").val()) return !1; if (r > 0) return !1; if ($(".norecored").is(":visible")) parent.ShowMessageNotification("success", msgUploadData, !0, !1); else { if (t.toLowerCase() != saveAsTemplateImport) { var h = $('input[name="__RequestVerificationToken"]').val(); return $.ajax({ type: "POST", url: e, data: JSON.stringify({ OrgColumnName: o, ExcelColumnName: n, Tags: s, InLanguage: l, fileType: i }), contentType: "application/json", headers: { __RequestVerificationToken: h }, success: function (e) { parent.ShowMessageNotification("success", e, !1, !1) }, error: function (e, t, a) { } }), !0 } bootbox.dialog({ title: enterTemplateName, centerVertical: !0, message: "<div style='margin-bottom:-8px;'><input type='text' id='templateName' name='templateName' class='col-md-12 form-control' maxlength='64'><br /><span class='templateNameError error'></span></div>", buttons: { cancel: { label: cancel, className: "btn-default", callback: function () { } }, confirm: { label: save, className: "btn-primary", callback: function () { var t = $("#templateName").val().trim(); if ("" == t || null == t) return $(".templateNameError").text(enterTemplateName), !1; var a = $('input[name="__RequestVerificationToken"]').val(); $.ajax({ type: "POST", url: e, data: JSON.stringify({ OrgColumnName: o, ExcelColumnName: n, Tags: s, InLanguage: l, fileType: i, TemplateName: t }), contentType: "application/json", headers: { __RequestVerificationToken: a }, success: function (e) { parent.ShowMessageNotification("success", e, !1, !1) }, error: function (e, t, a) { } }) } } } }) } return !1 }), $(document).on("click", "#btnSEDataImport", function () { var e = "", t = "", a = $("#CurrentProvider").val(); "oi" == a.toLowerCase() ? (e = "/ImportData/OISingleEntryForm", t = "popupOrbSingleEntryForm") : "dandb" == a.toLowerCase() && (e = "/ImportData/SingleFormEntry", t = "popupEntryForm"), $.magnificPopup.open({ preloader: !1, closeBtnInside: !0, type: "iframe", items: { src: e }, callbacks: { close: function () { } }, closeOnBgClick: !1, mainClass: t }) }), $(document).on("click", "#btnSEMatchRefresh", function () { var e, t = "", a = "", o = $("#CurrentProvider").val(); "oi" === o.toLowerCase() ? (t = "/ImportData/OISingleEntryMatchRefresh", a = "popupOrbSingleEntryFormMatchRefresh") : "dandb" === o.toLowerCase() && (a = "true" === $.IsTagsLicenseAllow.toLowerCase() ? "popupEntryMatchrefreshForm" : "popupEntryMatchrefreshFormNoTag", t = "/ImportData/SingleMatchRefreshFormEntry"), e = a, $.magnificPopup.open({ preloader: !1, closeBtnInside: !0, type: "iframe", items: { src: t }, callbacks: { close: function () { } }, closeOnBgClick: !1, mainClass: e }) }), $(document).on("click", ".importFileStats", function () { var e = $(this).attr("data-ImportId"); $.ajax({ type: "GET", url: "/ImportData/GetFileDetails?Parameters=" + ConvertEncrypte(encodeURI(e)).split("+").join("***"), success: function (e) { e.result ? ($("#ImportFileStatsDetailsMain").html(e.message), DraggableModalPopup("#ImportFileStatsModal")) : ShowMessageNotification("error", e.message, !1) }, error: function (e, t, a) { } }) }), $(document).on("click", "#rptShowBackgroundProcessList", function () { LoadShowBackgroundProcessList() }), $(document).on("click", "#btnGetImportTemplatesList", function () { $.ajax({ type: "GET", url: "/ImportData/ImportFileTemplatesList", dataType: "HTML", success: function (e) { $("#ImportFileTemplatesModalMain").html(e), DraggableModalPopup("#ImportFileTemplatesModal"), SetTemplateListFilter() } }) }), $("body").on("click", ".deleteTemplate", function () { var e = $('input[name="__RequestVerificationToken"]').val(), t = $(this).attr("data-TemplateId"), a = "/ImportData/RemoveTemplateData?Parameters=" + ConvertEncrypte(encodeURI(t)).split("+").join("***"); bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: removeTemplate, callback: function (t) { t && $.ajax({ type: "POST", url: a, headers: { __RequestVerificationToken: e }, dataType: "json", contentType: "application/json; charset=UTF-8", async: !1, cache: !1, success: function (e) { SetTemplateListFilter(), parent.ShowMessageNotification("success", e, !1) }, error: function (e, t, a) { } }) } }) }), $(document).on("click", ".clsTemplateDetails", function () { LoadTemplateDetails($(this).attr("data-TemplateId")) });