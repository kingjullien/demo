$(document).ready(function () { if ($("#ImportFileStatsChart").length > 0) { var t = "ImportProcessId:" + $("#FileStatsImportProcessId").val(), e = "/Home/GetMatchUserCount"; "" != t && null != t && (e = "/Home/GetMatchUserCount?Parameters=" + ConvertEncrypte(encodeURI(t)).split("+").join("***")), $.ajax({ type: "GET", url: e, data: "", dataType: "json", beforeSend: function () { }, success: function (t) { var e = jQuery.parseJSON(t.dataStatus), a = t.objMatch.lstMatchUser, o = 0, r = 0; e.Table11.length > 0 && (null == e.Table11[0][0] ? 0 : e.Table11[0][0], o = null == e.Table11[0][1] ? 0 : e.Table11[0][1], r = null == e.Table11[0][2] ? 0 : e.Table11[0][2]), $("#spnNameAddressLkupCnt").text(addCommas(o)), $("#spnAlterLkupCnt").text(addCommas(r)), $("#ImportFileStatsChart").highcharts({ chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: !1, type: "pie", width: 200, height: 250 }, title: { text: matchesbyUser, color: Highcharts.theme && Highcharts.theme.contrastTextColor || "black", style: { fontFamily: '"Open Sans",Arial, Helvetica, sans-serif', fontSize: "14px" }, margin: 0 }, tooltip: { formatter: function () { return "<b>" + this.key + "</b> <br/>" + matches + " : " + this.percentage.toFixed(2) + "% (" + records + ": " + this.y + ")" } }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { enabled: !1, format: "", style: { color: Highcharts.theme && Highcharts.theme.contrastTextColor || "black" } }, size: "100%" } }, series: [{ name: "Matches", colorByPoint: !0, data: a }] }) } }) } });