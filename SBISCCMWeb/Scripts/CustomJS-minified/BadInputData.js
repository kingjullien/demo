function closepopup() { $.magnificPopup.close() } $(document).ready(function () { $("#divProgress").hide(), $(".PurgeMultipleRecords").each(function () { $(this).attr("checked", !1) }), $.ajax({ type: "GET", url: "/UserSessionFilter/popupUserFilterJson/", async: !1, success: function (e) { var t = e.Data, a = [], n = []; a.push(["OrderByColumn", "OrderByColumn", "/StewardshipPortal/GetOrderByColumnDD", "true", "value", "onlyselect", null != t.OrderByColumn && "" != t.OrderByColumn ? t.OrderByColumn : "SrcRecordId"]), null != t.SrcRecordId && "" != t.SrcRecordId ? a.push(["SrcRecordId", "SrcRecordId", "", "", "", "onlytext", null != t.SrcRecordId && "" != t.SrcRecordId ? t.SrcRecordId : "", "true"]) : n.push(["SrcRecordId", "SrcRecordId", "", "", "", "onlytext", null != t.SrcRecordId && "" != t.SrcRecordId ? t.SrcRecordId : ""]), null != t.CompanyName && "" != t.CompanyName ? a.push(["CompanyName", "CompanyName", "", "", "", "onlytext", null != t.CompanyName && "" != t.CompanyName ? t.CompanyName : "", "true"]) : n.push(["CompanyName", "CompanyName", "", "", "", "onlytext", null != t.CompanyName && "" != t.CompanyName ? t.CompanyName : ""]), null != t.City && "" != t.City ? a.push(["City", "City", "", "", "", "onlytext", null != t.City && "" != t.City ? t.City : "", "true"]) : n.push(["City", "City", "", "", "", "onlytext", null != t.City && "" != t.City ? t.City : ""]), null != t.State && "" != t.State ? a.push(["State", "State", "", "", "", "onlytext", null != t.State && "" != t.State ? t.State : "", "true"]) : n.push(["State", "State", "", "", "", "onlytext", null != t.State && "" != t.State ? t.State : ""]), null != t.CountryISOAlpha2Code && "" != t.CountryISOAlpha2Code ? a.push(["Country", "Country", "/StewardshipPortal/GetCountryDD", "", "text", "onlyselect", null != t.CountryISOAlpha2Code && "" != t.CountryISOAlpha2Code ? t.CountryISOAlpha2Code : "", "true"]) : n.push(["Country", "Country", "/StewardshipPortal/GetCountryDD", "", "text", "onlyselect", null != t.CountryISOAlpha2Code && "" != t.CountryISOAlpha2Code ? t.CountryISOAlpha2Code : ""]), null != t.ImportProcess && "" != t.ImportProcess ? a.push(["ImportProcess", "ImportProcess", "/StewardshipPortal/GetImportProcessDD", "", "text", "onlyselect", null != t.ImportProcess && "" != t.ImportProcess ? t.ImportProcess : "", "true"]) : n.push(["ImportProcess", "ImportProcess", "/StewardshipPortal/GetImportProcessDD", "", "text", "onlyselect", null != t.ImportProcess && "" != t.ImportProcess ? t.ImportProcess : ""]), null != t.CountryGroupId && t.CountryGroupId > 0 ? a.push(["CountryGroup", "CountryGroup", "/StewardshipPortal/GetCountryGroupDD", "", "text", "onlyselect", null != t.CountryGroupId && t.CountryGroupId > 0 ? t.CountryGroupId.toString() : "", "true"]) : n.push(["CountryGroup", "CountryGroup", "/StewardshipPortal/GetCountryGroupDD", "", "text", "onlyselect", null != t.CountryGroupId && t.CountryGroupId > 0 ? t.CountryGroupId.toString() : ""]), null != t.Tag && "" != t.Tag ? a.push(["Tag", "Tag", "/StewardshipPortal/GetTagsDD", "", "text", "onlyselect", null != t.Tag && "" != t.Tag ? t.Tag : "", "true"]) : n.push(["Tag", "Tag", "/StewardshipPortal/GetTagsDD", "", "text", "onlyselect", null != t.Tag && "" != t.Tag ? t.Tag : ""]), null != t.ErrorCode && "" != t.ErrorCode ? a.push(["ErrorCode", "ErrorCode", "", "", "", "onlytext", null != t.ErrorCode && "" != t.ErrorCode ? t.ErrorCode : "", "true"]) : n.push(["ErrorCode", "ErrorCode", "", "", "", "onlytext", null != t.ErrorCode && "" != t.ErrorCode ? t.ErrorCode : ""]); var o = $.merge(a, n); InitFilters(o, "/BadInputData/FilterCleanData", "#CleanDataFilterContainer", "#divBadinputData", "", "equalto") }, error: function (e, t, a) { } }), changeLanguageHeader(), $("table#dgBanInputData tbody tr").each(function () { $(this).find("td:last").attr("title", "") }) }), $("#btnClearCompanyData").click(function () { $("#txtScrRecId").val(""), $("#txtCompany").val(""), $("#txtCity").val(""), $("select#State").prop("selectedIndex", 0), $("select#Country").prop("selectedIndex", 0) }), $("body").on("click", "#trig", function () { $("#colMain").toggleClass("col-md-9 col-md-12"), $("#colPush").toggleClass("col-md-3 col-md-0") }), $("body").on("click", ".rejectSearch", function () { var e = $('input[name="__RequestVerificationToken"]').val(), t = $(this).attr("id").split("_"); id = t[1]; var a = $("#hiddenInLang_" + id).val(), n = $(this).attr("data-val"), o = ($("#pageValue").val(), $("#pageNo").val(), $("#SortBy").val(), $("#SortOrderNo").val(), ConvertEncrypte(encodeURI(a)).split("+").join("***")); $.ajax({ type: "POST", url: "/BadInputData/FillTempData/", data: JSON.stringify({ id: n }), headers: { __RequestVerificationToken: e }, dataType: "json", contentType: "application/json", success: function (e) { "success" == e && $.ajax({ type: "GET", url: "/BadInputData/SearchData?Parameters=" + o, dataType: "HTML", success: function (e) { $("#divProgress").hide(), $("#SearchPopupModalMain").html(e), DraggableModalPopup("#SearchPopupModal") } }) }, error: function (e, t, a) { } }) }), $("body").on("click", ".reject", function () { var e = $(this).attr("id").split("_"); id = e[1]; var t = $("input[name='Company_" + id.replace("#", "") + "']").val(), a = $("input[name='Address_" + id.replace("#", "") + "']").val(), n = $("input[name='City_" + id.replace("#", "") + "']").val(), o = $("input[name='State_" + id.replace("#", "") + "']").val(), r = $("input[name='PostalCode_" + id.replace("#", "") + "']").val(), i = $("#CountryISOAlpha2Code_" + id).val(), c = $("input[name='PhoneNbr_" + id.replace("#", "") + "']").val(); $("#spanCompany_" + id).val(), $("#spanAddress_" + id).val(), $("#spanCity_" + id).val(), $("#spanState_" + id).val(), $("#spanPostalCode_" + id).val(), $("#spanCountryISOAlpha2Code_" + id).val(), $("#spanPhoneNbr_" + id).val(); "" != id && $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: '@Url.Action("UpdateBadInputData")', data: { SrcRecId: id, company: t, address: a, city: n, state: o, postalCode: r, countryISOAlpha2Code: i, phoneNbr: c, isRejected: !0 }, dataType: "html", beforeSend: function () { }, success: function (e) { 1 == e.result && $("#form_BadinputData").submit() } }) }), $("body").on("click", ".userFilter", function () { var e = $("#pageValue").val(); $.magnificPopup.open({ preloader: !1, closeBtnInside: !0, type: "iframe", items: { src: "/UserSessionFilter/popupUserFilter/" }, callbacks: { close: function () { window.location.href = "/BadInputData/Index?pagevalue=" + e } }, closeOnBgClick: !1, mainClass: "popupUserSessionFilter" }) }), $("body").on("click", ".DeleteFilter", function () { var e = $("#pageValue").val(), t = $('input[name="__RequestVerificationToken"]').val(); return $(this).find("strong").removeClass("fa fa-plus"), $(this).find("strong").removeClass("fa fa-minus"), bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: deleteSessionFilter, callback: function (a) { a && $.ajax({ type: "POST", url: "/StewardshipPortal/DeleteSessionFilter/", data: "", headers: { __RequestVerificationToken: t }, dataType: "json", contentType: "application/json", success: function (t) { "success" == t && (window.location.href = "/BadInputData/Index?pagevalue=" + e) }, error: function (e, t, a) { } }) } }), !1 }); var isReloadPopup = !1; function loadWebGrid(e) { closepopup(); var t = $("#pageValue").val(), a = $("#pageNo").val(), n = $("#SortBy").val(), o = $("#SortOrderNo").val(); 1 == $("#dgBanInputData tbody tr").length && parseInt(a) > 1 && (a = parseInt(a) - 1), RefreshCleanDataGrid(a, n, o, t) } function UpdateChildRecord() { isReloadPopup = !0, closepopup() } function backToparent() { } function backToparent2() { $.magnificPopup.close() } $("body").on("change", ".pagevalueChange", function () { var e = $(this)[0].value; $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/BadInputData/Index", data: { pagevalue: e }, dataType: "HTML", cache: !1, beforeSend: function () { }, success: function (e) { $("#divBadinputData").html(e), setup_dashboard_widgets_desktop(), OnSuccess() } }) }); var isLoad = !0; function generateAjaxActionLink(e, t, a, n, o, r) { var i = decodeURI(globalAjaxLink); return i = i.replace("{title}", e).replace("{actionName}", t).replace("{page}", a).replace("{sortby}", n).replace("{sortorder}", 1 == o ? 2 : 1).replace("{pageValue}", r) } function OnSuccess() { var e = Number($("#SortOrderNo").val()), t = Number($("#pageNo").val()), a = Number($("#pageValue").val()); isLoad || (setup_dashboard_widgets_desktop(), changeLanguageHeader()), $("#dgBanInputData th").each(function () { "Src Id" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Src Id", "GetFilteredCompanyList", t, 1, e, a)), "Company" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Company", "GetFilteredCompanyList", t, 2, e, a)), "Address" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Address", "GetFilteredCompanyList", t, 3, e, a)), "City" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("City", "GetFilteredCompanyList", t, 4, e, a)), "State" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("State", "GetFilteredCompanyList", t, 5, e, a)), "Zip" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Zip", "GetFilteredCompanyList", t, 6, e, a)), "Country" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Country", "GetFilteredCompanyList", t, 7, e, a)), "Phone" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Phone", "GetFilteredCompanyList", t, 8, e, a)), "Error Code" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Error Code", "GetFilteredCompanyList", t, 9, e, a)), "Error Description" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Error Description", "GetFilteredCompanyList", t, 10, e, a)), "Language" == $.trim(this.innerHTML) && (this.innerHTML = generateAjaxActionLink("Language", "GetFilteredCompanyList", t, 11, e, a)) }), $("body").removeClass("nooverflow") } function changeLanguageHeader() { $(".trStewardshipPortal_td11").each(function () { var e = $(this).children("span").children("span").attr("id").split("_")[1], t = $("#spanCountryISOAlpha2Code_" + e).html(), a = "#spaninLanguage_" + e, n = "#inLanguage_" + e, o = "#hiddenInLang_" + e, r = $(o).val(), i = $(a).html(); changeLanguage(t, e); var c = $(n).find("option[value='" + r + "']").text(); "" != i ? $(a).html(c) : $(a).html(""), $(n).val($(o).val()) }) } function changeLanguage(e, t) { $("#inLanguage_" + t).find("option").remove(), $("#inLanguage_" + t).append("<option value=>Select Language</option>"), "us" == e.toLowerCase() ? ($("#inLanguage_" + t).append("<option value=en-US>English</option>"), $("#inLanguage_" + t).val("en-US")) : "jp" == e.toLowerCase() ? ($("#inLanguage_" + t).append("<option value=en-US>English</option>"), $("#inLanguage_" + t).append("<option value=ja-JP>Japanese</option>"), $("#inLanguage_" + t).val("ja-JP")) : "tw" == e.toLowerCase() ? ($("#inLanguage_" + t).append("<option value=en-US>English</option>"), $("#inLanguage_" + t).append("<option value=zh-hant-TW>Traditional Chinese</option>"), $("#inLanguage_" + t).val("zh-hant-TW")) : "kr" == e.toLowerCase() ? ($("#inLanguage_" + t).append("<option value=en-US>English</option>"), $("#inLanguage_" + t).append("<option value=ko-hang-KR>Hangul</option>"), $("#inLanguage_" + t).val("ko-hang-KR")) : "cn" == e.toLowerCase() ? ($("#inLanguage_" + t).append("<option value=en-US>English</option>"), $("#inLanguage_" + t).append("<option value=zh-hans-CN>Simplified Chinese</option>"), $("#inLanguage_" + t).val("zh-hans-CN")) : ($("#inLanguage_" + t).append("<option value=en-US>English</option>"), $("#inLanguage_" + t).append("<option value=ja-JP>Japanese</option>"), $("#inLanguage_" + t).append("<option value=zh-hans-CN>Simplified Chinese</option>"), $("#inLanguage_" + t).append("<option value=zh-hant-TW>Traditional Chinese</option>"), $("#inLanguage_" + t).append("<option value=ko-hang-KR>Hangul</option>"), $("#inLanguage_" + t).val("en-US")) } function CloseRejectAllWindow() { window.parent.$.magnificPopup.close(); var e = $("#pageValue").val(), t = $("#pageNo").val(), a = $("#SortBy").val(), n = $("#SortOrderNo").val(); 1 == $("#dgBanInputData tbody tr").length && parseInt(t) > 1 && (t = parseInt(t) - 1), RefreshCleanDataGrid(t, a, n, e) } function ReloadWithCurrentPage() { var e = $("#pageValue").val(), t = $("#pageNo").val(), a = $("#SortBy").val(), n = $("#SortOrderNo").val(); 1 == $("#dgBanInputData tbody tr").length && parseInt(t) > 1 && (t = parseInt(t) - 1), RefreshCleanDataGrid(t, a, n, e) } function callbackRejectPurgeData() { window.parent.$.magnificPopup.close(); var e = $("#pageValue").val(), t = $("#pageNo").val(), a = $("#SortBy").val(), n = $("#SortOrderNo").val(); 1 == $("#dgBanInputData tbody tr").length && parseInt(t) > 1 && (t = parseInt(t) - 1), RefreshCleanDataGrid(t, a, n, e) } $(document).ready(function () { OnSuccess(), isLoad = !1 }), $("body").on("change", ".txtCntryCode", function () { var e = $(this).attr("id").split("_")[1]; changeLanguage($(this).val(), e) }), $("body").on("click", "#btnAcceptRejectAll", function () { $.IsTagsLicenseAllow.toLowerCase(), $.ajax({ type: "GET", url: "/StewardshipPortal/RejectAllRecords?IsMatchData=" + !1, cache: !1, async: !1, beforeSend: function () { }, success: function (e) { $("#divPurgeDataMain").html(e), DraggableModalPopup("#divPurgeDataModal") } }), $.ajax({ type: "GET", url: "/StewardshipPortal/RejectFromFile?IsPurgeData=" + !0, cache: !1, beforeSend: function () { }, success: function (e) { $("#divPurgeFromFile").html(e), $("#divProgress").hide() } }) }), $("body").on("click", "#btnDefaultPageSize", function () { var e = "pagevalue:" + $("#pageValue").val() + "@#$Section:BadInputData"; $.ajax({ type: "POST", url: "/StewardshipPortal/SaveDefaultPageSize?Parameters=" + ConvertEncrypte(encodeURI(e)).split("+").join("***"), dataType: "json", contentType: "application/json", cache: !1, success: function (e) { ShowMessageNotification("success", updateSettings, !1) }, error: function (e, t, a) { } }) }), $(function () { var e = $("#ActivateFeature").val(), t = $('input[name="__RequestVerificationToken"]').val(), a = $("#LicenseEnablePurgeData").val(); null != a && "False" != a || (a = !0), "True" == a && (a = !1), $.contextMenu({ selector: ".context-menu-one-purge", callback: function (e, t) { }, events: { show: function (t) { setTimeout(function () { t.$menu.find(".context-menu-disabled > span").attr("title", e) }, 50) } }, items: { Purge: { name: purgeRecord, disabled: a, titile: "Purge", callback: function () { var e = $(this).children().find(".hidenSrcRecordId").attr("id"), a = $(this).children().find(".hidenInputId").attr("id"), n = "/StewardshipPortal/StewPurgeSingleRecord?Parameters=" + ConvertEncrypte(encodeURI("InputId:" + a + "@#$SrcRecordId:" + e + "@#$Queue:BID")).split("+").join("***"); return bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: purgeRecordCleanData, callback: function (e) { e && $.ajax({ type: "POST", url: n, headers: { __RequestVerificationToken: t }, dataType: "json", contentType: "application/json; charset=UTF-8", async: !1, cache: !1, success: function (e) { ShowMessageNotification("error", e, !1, !0, ReloadWithCurrentPage) }, error: function (e, t, a) { } }) } }), "context-menu-icon context-menu-icon-quit" } }, ReMatch: { name: rematchRecord, disabled: !1, titile: "ReMatch", callback: function () { var e = $(this).children().find(".hidenSrcRecordId").attr("id"), a = "/BadInputData/ReMatchRecord?Parameters=" + ConvertEncrypte(encodeURI("SrcRecordId:" + e)).split("+").join("***"); return bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: rematchRecordCleanData, callback: function (e) { e && $.ajax({ type: "POST", url: a, headers: { __RequestVerificationToken: t }, dataType: "json", contentType: "application/json; charset=UTF-8", cache: !1, success: function (e) { "" != e && ShowMessageNotification("error", e, !1, !0, ReloadWithCurrentPage) }, error: function (e, t, a) { } }) } }), "context-menu-icon context-menu-icon-quit" } }, FilterByErrorCode: { name: filterByErrorCode, disabled: !1, titile: "Filter By Error Code", callback: function () { var e = $(this).attr("data-errorCode"); $("#CleanDataFilterContainer #btnAddFilter").click(); var t = !1, a = ""; if ($("#CleanDataFilterContainer .FilterContainer").children().not(".divFilterAddButton").each(function () { if ("display: none;" != $(this).attr("style")) { var e = $(this).attr("filter-id"); "ErrorCode" == $("#CleanDataFilterContainer #filterColumn" + e).val() && (a = e, t = !0) } }), t) $("#CleanDataFilterContainer #filterColumn" + a).val("ErrorCode"), $("#CleanDataFilterContainer input#filterValErrorCode" + a).val(e); else { var n = $("#CleanDataFilterContainer .FilterContainer").children().not(".divFilterAddButton").last().attr("filter-id"); $("#CleanDataFilterContainer #filterColumn" + n).val("ErrorCode"), $("#CleanDataFilterContainer input#filterValErrorCode" + n).val(e) } return DoFiltering("#CleanDataFilterContainer"), "context-menu-icon context-menu-icon-quit" } } } }), $(".context-menu-one-purge").on("click", function (e) { return "context-menu-icon context-menu-icon-quit" }) }), $(".userFilter").popover({ trigger: "manual", html: !0, animation: !1 }).on("mouseenter", function () { var e = this; $(this).popover("show"), $(".popover").on("mouseleave", function () { $(e).popover("hide") }) }).on("mouseleave", function () { var e = this; setTimeout(function () { $(".popover:hover").length || $(e).popover("hide") }, 300) }), $("body").on("click", "#btnAcceptRejectAllFromFile", function () { $(this).attr("id"); $.magnificPopup.open({ preloader: !1, closeBtnInside: !0, type: "iframe", items: { src: "/StewardshipPortal/RejectFromFile?IsPurgeData=" + !0 }, callbacks: { close: function () { } }, closeOnBgClick: !1, mainClass: "popupPurgeData" }) }), $("body").on("click", "#btnReMatchRecords", function () { $.IsTagsLicenseAllow.toLowerCase(), $.ajax({ type: "GET", url: "/BadInputData/ReMatchRecords", dataType: "HTML", success: function (e) { $("#divProgress").hide(), $("#ReMatchRecordsModalMain").html(e), DraggableModalPopup("#ReMatchRecordsModal") } }) }), $("body").on("click", "#btnPurgeDataFromPage", function () { var e = $('input[name="__RequestVerificationToken"]').val(), t = [], a = []; if ($(".PurgeMultipleRecords").each(function () { if ($(this).prop("checked")) { var e = $(this).attr("data-InputId"); t.push(e) } }), $(".PurgeMultipleRecords").each(function () { if ($(this).prop("checked")) { var e = $(this).attr("data-SrcRecordId"); a.push(e) } }), "" == t || "" == a) return ShowMessageNotification("success", selectRecordToPurge, !1), !1; bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: purgeRecords, callback: function (n) { n && $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "/BadInputData/PurgeMultipleRecords", headers: { __RequestVerificationToken: e }, data: JSON.stringify({ Ids: t, SrcIds: a }), dataType: "json", cache: !1, beforeSend: function () { }, success: function (e) { "" != e && ShowMessageNotification("error", e, !1, !0, LocationReload) }, error: function (e, t, a) { } }) } }) }); var MultiAutoAccept = ""; function RefreshCleanDataGrid(e, t, a, n) { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/BadInputData/Index", data: { page: e, sortby: t, sortorder: a, pagevalue: n }, dataType: "HTML", cache: !1, beforeSend: function () { }, success: function (e) { $("#divBadinputData").html(e), setup_dashboard_widgets_desktop(), OnSuccess() } }) } $("body").on("change", "#MultipleSelect", function () { MultiAutoAccept = "", 1 == $(this).prop("checked") ? ($(".ShowWhenUnchecked").hide(), $(".ShowWhenchecked").show(), $(".PurgeMultipleRecords").prop("checked"), $(".PurgeMultipleRecords").each(function () { MultiAutoAccept = MultiAutoAccept + $(this).attr("data-SrcRecordId") + "," + $(this).attr("data-InputId") + ",", $(this).prop("checked", !0) })) : ($(".ShowWhenchecked").hide(), $(".ShowWhenUnchecked").show(), $(".PurgeMultipleRecords").each(function () { $(this).prop("checked", !1) })) }), $("body").on("change", ".PurgeMultipleRecords", function () { var e = $(this).attr("data-SrcRecordId") + "," + $(this).attr("data-InputId"); if (1 == $(this).prop("checked")) MultiAutoAccept = MultiAutoAccept + e + ","; else { $("#MultipleSelect").prop("checked", !1); for (var t = MultiAutoAccept.split(","), a = "", n = 0; n < t.length; n++)"" != t[n] && e != t[n] && (a = a + t[n] + ","); MultiAutoAccept = a } var o = 0, r = 0; $(".PurgeMultipleRecords").each(function () { o += 1, 1 == $(this).prop("checked") && (r += 1) }), r > 0 ? ($(".ShowWhenUnchecked").hide(), $(".ShowWhenchecked").show()) : ($(".ShowWhenchecked").hide(), $(".ShowWhenUnchecked").show()), o == r && $("#MultipleSelect").prop("checked", !0) }), $("body").on("click", "#btnReMatchRecordsFromPage", function () { var e = $('input[name="__RequestVerificationToken"]').val(), t = []; $(".PurgeMultipleRecords").each(function () { if ($(this).prop("checked")) { var e = $(this).attr("data-SrcRecordId"); t.push(e) } }); var a = t.length; if ("" == t) return ShowMessageNotification("success", selectRecordToReMatch, !1), !1; bootbox.confirm({ title: "<i class='fa fa-check-square-o' aria-hidden='true'></i> " + confirmBox, message: total + " " + a + " " + rematchRecords, callback: function (n) { n && $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "/BadInputData/ReMatchMultipleRecords", headers: { __RequestVerificationToken: e }, data: JSON.stringify({ SrcIds: t }), dataType: "json", cache: !1, beforeSend: function () { }, success: function (e) { "" != e && e.endsWith("rows sent for ReMatch.") ? (e = "Data ReMatch Request Completed Successfully. " + a + " rows sent for ReMatch.", ShowMessageNotification("error", e, !1, !0, LocationReload)) : ShowMessageNotification("error", e, !1, !0, LocationReload) }, error: function (e, t, a) { } }) } }) }), $("body").on("click", "#btnInvestigateFromPage", function () { var e = []; if ($(".PurgeMultipleRecords").each(function () { if ($(this).prop("checked")) { var t = JSON.parse($(this).closest("tr").attr("data-val")); e.push({ InputId: t.InputId, SrcRecordId: t.SrcRecordId, BusinessName: t.CompanyName, StreetAddress: t.Address, AddressLocality: t.City, AddressRegion: t.State, PostalCode: t.PostalCode, CountryISOAlpha2Code: t.CountryISOAlpha2Code, Tags: t.Tags }) } }), !(e.length > 0)) return ShowMessageNotification("success", selectRecotdToInvestigate, !1), !1; $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "/ResearchInvestigation/iResearchInvestigationRecordsMultiple", data: JSON.stringify(e), cache: !1, beforeSend: function () { }, success: function (e) { $("#divMultiMiniModalMain").html(e), DraggableModalPopup("#MultiMiniModal") }, error: function (e, t, a) { } }) });