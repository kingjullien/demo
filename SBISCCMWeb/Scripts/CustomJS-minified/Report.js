var DataStewdStatisticsByCCchart, APIUsagesCurntMonthCntChart, APIUsagesCurntYearCntChart, APIUsagesLineTotalCntChart; function chartDataQueue() { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/ReportsList/GetDataQueue", data: "", async: !1, dataType: "json", beforeSend: function () { }, success: function (t) { for (var a = [], e = [], r = 0, s = 0; s < t.length; s++)a.push(t[s].x), e.push(parseInt(t[s].y)), r < parseInt(t[s].y) && (r = parseInt(t[s].y)); $("#partialDivRptDataQueueDashboard").highcharts({ chart: { type: "bar" }, title: { text: "" }, xAxis: { categories: a }, yAxis: { allowDecimals: !1, title: { text: noOfRecords } }, legend: { reversed: !0 }, plotOptions: { bar: { dataLabels: { enabled: !0 } } }, series: [{ name: "NUMBER OF RECORDS", data: e, colorByPoint: !0 }], colors: ["#111", "#fd625e", "#fd625e", "#01b8aa", "#1aadce", "#b6960b", "#f28f43", "#77a1e5", "#c42525"] }), hideSeries() } }) } function DataQueueDashboard() { $.ajax({ type: "GET", url: "/ReportsList/DataQueueDashboard/", dataType: "HTML", cache: !1, contentType: "application/html", async: !1, success: function (t) { $("#partialDataQueuetitle").html(t) } }) } function ChartDataStewardshipStatisticsByUser(t) { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/ReportsList/GetDataStewardshipStatisticsByUser", data: { Parameters: ConvertEncrypte(t).split("+").join("***") }, async: !1, dataType: "json", beforeSend: function () { }, success: function (t) { for (var a = [], e = [], r = 0, s = [], n = 0; n < t.length; n++)a.push(t[n].x), "System Matched" == t[n].userGroup && s.push("#7cb5ec"), "User Matched" == t[n].userGroup && s.push("#434348"), e.push(parseInt(t[n].y)), r < parseInt(t[n].y) && (r = parseInt(t[n].y)); $("#partialDivRptDataStewdStatisticsByUser").highcharts({ chart: { type: "bar" }, title: { text: topRowsByUser, align: "left" }, xAxis: { categories: a }, yAxis: { allowDecimals: !1 }, legend: { reversed: !0 }, plotOptions: { bar: { dataLabels: { enabled: !0 } } }, series: [{ name: "Total Matched Rows", data: e, colorByPoint: !0 }], colors: s }), $("#partialDivRptDataStewdStatisticsByUser .highcharts-legend").hide() } }) } function ChartDataStewardshipStatisticsBycc(t) { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/ReportsList/GetDataStewardshipStatisticsBycc", data: { Parameters: ConvertEncrypte(t).split("+").join("***") }, async: !1, dataType: "json", beforeSend: function () { }, success: function (t) { for (var a = [], e = [], r = [], s = 0; s < t.length; s++)a.push(t[s].x), r.push(t[s].userGroup); var n = r.filter(function (t, a, e) { return a == e.indexOf(t) }), i = a.filter(function (t, a, e) { return a == e.indexOf(t) }); i = i.sort(function (t, a) { return t - a }); for (s = 0; s < n.length; s++) { for (var o = [], c = 0; c < i.length; c++) { var h = t.filter(function (t) { return t.x == i[c] && t.userGroup == n[s] }); h.length > 0 ? o.push(h[0].y) : o.push(0) } item = {}, item.name = n[s], item.data = o, "System Matched" == n[s] && (item.color = "#7cb5ec"), "User Matched" == n[s] && (item.color = "#434348"), e.push(item) } DataStewdStatisticsByCCchart = Highcharts.chart("partialDivRptDataStewdStatisticsByCC", { chart: { type: "column" }, title: { text: topRowsByCC, align: "left" }, xAxis: { categories: i }, yAxis: { allowDecimals: !1 }, tooltip: { headerFormat: "Confidance Code: {point.x}<br/>", pointFormat: "{series.name}: {point.y}<br/>Total: {point.stackTotal}" }, plotOptions: { column: { stacking: "normal", dataLabels: { enabled: !0, formatter: function () { if (this.y > 0) return this.y } } } }, legend: { align: "right", x: 0, verticalAlign: "top", y: 10, floating: !0 }, series: e }) } }) } function APIUsageGrid(t) { $.ajax({ type: "GET", url: "/ReportsList/GetAPIUsageGrid/", dataType: "HTML", cache: !1, contentType: "application/html", success: function (t) { $("#partialAPIUsageGrid").html(t), APIUsageGrid && $(".DashboardAPIUsageGrid .APIreportGrid table thead").addClass("thead_cust") } }) } function ChartAPIUsagesCurntMonthCnt() { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/ReportsList/GetCurrntMonthCnt", data: "", dataType: "json", success: function (t) { for (var a = [], e = [], r = 0, s = 0; s < t.length; s++)a.push(t[s].x), e.push(parseInt(t[s].y)), r < parseInt(t[s].y) && (r = parseInt(t[s].y)); APIUsagesCurntMonthCntChart = Highcharts.chart("partialCurntMonthCnt", { chart: { type: "column" }, title: { text: currentMonthCount }, subtitle: { text: currentMonthCountByAPI }, xAxis: { categories: a, labels: { useHTML: !0, formatter: function () { return a[this.value] } } }, yAxis: { allowDecimals: !1, min: 0, max: r }, tooltip: { headerFormat: '<span style="font-size: 10px"> API Type: {point.key} </span><br/>', pointFormat: "{series.name}: <b>{point.y}</b>" }, legend: { layout: "vertical", align: "right", verticalAlign: "middle", borderWidth: 0 }, series: [{ name: "Current Month Count", data: e, title: "" }] }), hideSeries() } }) } function ChartAPIUsagesCurntYearCnt() { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/ReportsList/GetCurrntYearCnt", data: "", dataType: "json", success: function (t) { APIUsagesCurntYearCntChart = Highcharts.chart("partialCurntYearCnt", { chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: !1, type: "pie" }, title: { text: currentYearCount }, subtitle: { text: currentYearCountByDnBAPIName }, tooltip: { headerFormat: '<span style="font-size: 10px"> DnBAPIName {point.key} </span><br/>', pointFormat: "{series.name}: ({point.y}) <b>{point.percentage:.1f}%</b>" }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { enabled: !0, format: "<b>{point.name}</b>: {point.percentage:.1f} %", style: { fontSize: 9, bold: !1 } } } }, series: [{ name: "Current Year Count", colorByPoint: !0, data: t }] }) } }) } function ChartAPIUsagesLineTotalCnt() { $.ajax({ type: "GET", contentType: "application/json; charset=utf-8", url: "/ReportsList/GetTotalYearsCnt", data: "", dataType: "json", success: function (t) { for (var a = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], e = [], r = [], s = 0; s < t.length; s++) { var n = parseInt(t[s].Month) - 1; r.push(a[n] + " " + t[s].year), e.push(parseInt(t[s].TotalCalls)) } APIUsagesLineTotalCntChart = Highcharts.chart("partialDivLinechart", { chart: { type: "line" }, title: { text: totalCountByMonth }, xAxis: { categories: r }, series: [{ name: "Total Count", data: e }] }), hideSeries() } }) } function hideSeries() { $(".highcharts-legend").hide(), $(".highcharts-legend-item").hide(), $(".highcharts-button").hide(), $(".highcharts-grid").hide() } $(document).ajaxStart(function () { $("#divProgress").show() }).ajaxStop(function () { $("#divProgress").hide() }), $(document).ready(function () { setTimeout(function () { chartDataQueue(), DataQueueDashboard() }, 500) }), $("body").on("click", "#divDataQueue", function () { $(this).parent("li").hasClass("active") || ($("#reportTitle").html($(this).attr("data-title")), setTimeout(function () { chartDataQueue(), DataQueueDashboard() }, 500)) }), $("body").on("click", "#divDataStewrdStatistics", function () { $(this).parent("li").hasClass("active") || ($("#reportTitle").html($(this).attr("data-title")), setTimeout(function () { ChartDataStewardshipStatisticsByUser(""), ChartDataStewardshipStatisticsBycc("") }, 500)) }), $("body").on("click", "#divAPIUsage", function () { $(this).parent("li").hasClass("active") || ($("#reportTitle").html($(this).attr("data-title")), setTimeout(function () { APIUsageGrid(), ChartAPIUsagesCurntMonthCnt(), ChartAPIUsagesCurntYearCnt(), ChartAPIUsagesLineTotalCnt() }, 500)) }), $("body").on("change", "#UserGroup", function () { var t = $(this).val(); ChartDataStewardshipStatisticsByUser(t), ChartDataStewardshipStatisticsBycc(t) }), Highcharts.setOptions({ lang: { thousandsSep: "," } });