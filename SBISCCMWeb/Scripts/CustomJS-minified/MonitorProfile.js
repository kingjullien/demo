$(document).ajaxStart(function () { $("#divProgress").show() }).ajaxStop(function () { $("#divProgress").hide() }), $.ajaxSetup({ cache: !1 }); var ElementType = ""; function SetBusinessCondition() { var e = "element:" + $("#BusinessProductElement option:selected").val() + "@#$SetIds:" + $("#SetId").val(); $.ajax({ url: "/DandB/BussnessConditions", type: "POST", dataType: "JSON", data: { Parameters: ConvertEncrypte(encodeURI(e).split("+").join("***")) }, async: !1, success: function (e) { $("#SelectBusinessConditions").html(""), $.each(e.lstAllBussnessElements, function (e, n) { $("#SelectBusinessConditions").append($("<option></option>").val(n.Value).html(n.Text)) }), $("#ElementType").val(e.ElementType), $("#SetId").val("1") } }) } function GetValueFromNode(e) { var n = $(e).text(), t = $(e).parent().parent().find(".Elements").html(), o = $(e).parent().parent().find(".deleteCondition").attr("data-val"); updateList(n, t, $(e).parent().parent().find(".txtValue").val(), o, $(e).attr("data-Id"), $(e).attr("data-node"), "Update") } function updateList(e, n, t, o, i, a, s) { var l = "Conditon:" + a + "@#$Element:" + n + "@#$ConditonOpetator:" + e + "@#$ConditonValue:" + t + "@#$btnSubmit:" + s + "@#$deletedId:" + o + "@#$TempGrpId:" + i + "@#$GrpCondition:And@#$IsCreate:" + !1 + "@#$IsGroup:" + !1; $.ajax({ type: "GET", url: "/DandB/AddElementCondition?Parameters=" + ConvertEncrypte(encodeURI(l)).split("+").join("***"), dataType: "html", contentType: "application/html", async: !1, cache: !1, success: function (e) { $("#ElementsList").html(e); $("#strCondition").each(function () { $(".lblCondition").text("Your Condition should be : " + $(this).val()) }) }, error: function (e, n, t) { } }) } function ConvertEncrypte(e) { var n = ""; return "" != e && null != e && $.ajax({ type: "POST", url: "/Home/GetEncryptedString", data: JSON.stringify({ strValue: e }), dataType: "json", contentType: "application/json", async: !1, success: function (e) { n = e }, error: function (e, n, t) { } }), n } function OnSuccess() { $("#divProgress").hide() } function backToparent() { window.parent.$.magnificPopup.close(), location.reload() } $("body").on("click", "#btnAddMonitorProfile", function () { var e = $("#MonitoringPageValue").val(), n = $("#MonitoringSortBy").val(), t = $("#MonitoringSortOrder").val(); $.magnificPopup.open({ preloader: !1, closeBtnInside: !0, type: "iframe", items: { src: "/DandB/CreateMonitorProfile" }, callbacks: { close: function () { var o = "/DandB/IndexMonitoringProfile/?pagevalue=" + e + "&sortby=" + n + "&sortorder=" + t; $.ajax({ type: "POST", url: o, dataType: "HTML", contentType: "application/html", async: !1, success: function (e) { $("#divPartialMonitoringData").html(e) }, error: function (e, n, t) { } }) } }, closeOnBgClick: !1, mainClass: "popupAddMonitorProfile" }) }), $("body").on("click", "#btnAddBusinessElements", function () { $.ajax({ type: "GET", url: "/DandB/AddBusinessElement", dataType: "HTML", success: function (e) { $("#AddBusinessElementModalMain").html(e), DraggableModalPopup("#AddBusinessElementModal") } }) }), $("body").on("click", "#btnCreateConditions", function () { $(".MultiConditionSection").show(), $("#ParentElements").val($("#BusinessProductElement option:selected").text()), $("#ParentCondition").val($("#SelectBusinessConditions option:selected").text()), ElementType = $("#ElementType").val(), $(".divConditon").each(function () { $(this).hide() }), $(".Mainconditons").html(""), $("#ConditionCount").val("0"), $.ajax({ type: "GET", url: "/DandB/EmptyCondition", dataType: "JSON", contentType: "application/json", async: !1, success: function (e) { }, error: function (e, n, t) { } }), $(".lblCondition").text(""), null != ElementType && "numeric" == ElementType ? $(function () { $.contextMenu({ selector: ".context-menu-Operators", trigger: "left", callback: function (e, n) { }, items: { ValueEquals: { name: "Value Equals", callback: function () { $(this).text("ValueEquals"), GetValueFromNode(this) } }, ValueIncreaseByPercentage: { name: "Value Increase By Percentage", callback: function () { $(this).text("ValueIncreaseByPercentage"), GetValueFromNode(this) } }, ValueDecreaseByPercentage: { name: "Value Decrease By Percentage", callback: function () { $(this).text("ValueDecreaseByPercentage"), GetValueFromNode(this) } }, ValueChangeByPercentage: { name: "Value Change By Percentage", callback: function () { $(this).text("ValueChangeByPercentage"), GetValueFromNode(this) } }, ValueIncreaseBy: { name: "Value Increase By", callback: function () { $(this).text("ValueIncreaseBy"), GetValueFromNode(this) } }, ValueDecreaseBy: { name: "Value Decrease By", callback: function () { $(this).text("ValueDecreaseBy"), GetValueFromNode(this) } }, ValueChangeBy: { name: "Value Change By", callback: function () { $(this).text("ValueChangeBy"), GetValueFromNode(this) } }, ValueGoesBeyond: { name: "Value Goes Beyond", callback: function () { $(this).text("ValueGoesBeyond"), GetValueFromNode(this) } }, ValueGoesBelow: { name: "Value Goes Below", callback: function () { $(this).text("ValueGoesBelow"), GetValueFromNode(this) } } } }), $(".context-menu-Operators").change("click", function (e) { }) }) : null != ElementType && "string" == ElementType && $(function () { $.contextMenu({ selector: ".context-menu-Operators", trigger: "left", callback: function (e, n) { }, items: { ValueEquals: { name: "Value Equals", callback: function () { $(this).text("ValueEquals"), GetValueFromNode(this) } } } }), $(".context-menu-Operators").change("click", function (e) { }) }) }), $("body").on("click", "#btncloseBusinessElements", function () { var e = $("#BusinessCondionUpdateId").val(); e = null == e ? null : e; var n = $("#BusinessProductElement option:selected").text(), t = $("#BusinessProductElement").val(), o = (t = t.split("@#$"))[0], i = $("#SelectBusinessConditions").val(), a = 0; if ("-Select-" == n || null == e ? ($("#spnBusinessProductElement").show(), a++) : $("#spnBusinessProductElement").hide(), "-1" == i || "" == i || null == i ? ($("#spnBusinessConditions").show(), a++) : $("#spnBusinessConditions").hide(), a > 0) return !1; var s = $('input[name="__RequestVerificationToken"]').val(), l = "BusinessProductElement:" + n + "@#$BusinessusinessConditions:" + i + "@#$BusinessCondionUpdateId:" + e + "@#$BusinessProductElementId:" + o; $.ajax({ type: "POST", url: "/DandB/SaveBusinessElement/", data: JSON.stringify({ Parameters: ConvertEncrypte(encodeURI(l)).split("+").join("***") }), headers: { __RequestVerificationToken: s }, dataType: "json", contentType: "application/json", cache: !1, async: !1, success: function (e) { $("#AddBusinessElementModal").modal("hide"), $("#BusinessElementModal").modal("hide") }, error: function (e, n, t) { } }) }), $("body").on("change", "#BusinessProductElement", function () { SetBusinessCondition(), "multicondition" == $("#SelectBusinessConditions").val().toLowerCase() ? ($("#btnCreateConditions").show(), $("#btncloseBusinessElements").hide()) : ($("#btnCreateConditions").hide(), $("#btncloseBusinessElements").show(), $(".MultiConditionSection").hide(), $(".lblCondition").text(""), $(".txtValue").each(function () { $(this).val("") }), $(".divConditon").each(function () { $(this).hide() }), $("#ConditionCount").val("0")) }), $("body").on("change", "#SelectBusinessConditions", function () { var e = $("#BusinessProductElement").val(), n = $(this).val(), t = $("#BusinessCondionUpdateId").val(); "multicondition" == $(this).val().toLowerCase() ? ($("#btnCreateConditions").show(), $("#btncloseBusinessElements").hide()) : ($("#btnCreateConditions").hide(), $("#btncloseBusinessElements").show(), $(".MultiConditionSection").hide(), $(".lblCondition").text(""), $(".txtValue").each(function () { $(this).val("") }), $(".divConditon").each(function () { $(this).hide() }), $("#ConditionCount").val("0")), $.ajax({ type: "POST", url: "/DandB/CheckBusinessCondition?ParentElemets=" + e + "&ParentCodition=" + n + "&BusinessCondionUpdateId=" + t, dataType: "JSON", contentType: "application/json", success: function (e) { "failure" == e && ($("#SelectBusinessConditions").val("-1"), bootbox.alert({ title: "<i class='fa fa-info-circle' aria-hidden='true'></i> " + message, message: "Element or Condition is already exist. please try with different Elements or Condition" })) }, error: function (e, n, t) { } }); var o = $(this).val(); null != o && "multicondition" == o.toLowerCase() ? $("#btnCreateConditions").show() : $("#btnCreateConditions").hide() }), $(".context-menu-one").length > 0 && ($(function () { $.contextMenu({ selector: ".context-menu-one", trigger: "left", callback: function (e, n) { }, items: { "And Group": { name: "And Group", callback: function () { $(this).text("And Group"), $(this).attr("data-val", "And Group") } }, "OR Group": { name: "OR Group", callback: function () { $(this).text("OR Group"), $(this).attr("data-val", "OR Group") } }, And: { name: "And", callback: function () { $(".context-menu-one").text("And") } }, OR: { name: "OR", callback: function () { $(".context-menu-one").text("OR") } } } }), $(".context-menu-one").on("click", function (e) { }) }), $(function () { $.contextMenu({ selector: ".context-menu-Grpone", trigger: "left", callback: function (e, n) { }, items: { "And Group": { name: "And Group", callback: function () { $(this).text("And Group"), $(this).attr("data-val", "And Group") } }, "OR Group": { name: "OR Group", callback: function () { $(this).text("OR Group"), $(this).attr("data-val", "OR Group") } }, And: { name: "And", callback: function () { $(this).text("And"), $(this).attr("data-val", "GrpAnd") } }, OR: { name: "OR", callback: function () { $(this).text("OR"), $(this).attr("data-val", "GrpOR") } } } }), $(".context-menu-Grpone").on("click", function (e) { }) }), $(function () { $.contextMenu({ selector: ".context-menu-Elements", trigger: "left", callback: function (e, n) { }, items: { element: { name: "element", callback: function () { $(this).text("element"); var e = $(this).parent().parent().find(".ConditonOperators").html(), n = $(this).parent().parent().find(".deleteCondition").attr("data-val"); updateList(e, "element", $(this).parent().parent().find(".txtValue").val(), n, $(this).attr("data-Id"), $(this).attr("data-node"), "Update") } }, elementPrevious: { name: "element Previous", callback: function () { $(this).text("elementPrevious"); var e = $(this).parent().parent().find(".ConditonOperators").html(), n = $(this).parent().parent().find(".deleteCondition").attr("data-val"); updateList(e, "elementPrevious", $(this).parent().parent().find(".txtValue").val(), n, $(this).attr("data-Id"), $(this).attr("data-node"), "Update") } } } }), $(".context-menu-one").on("click", function (e) { }) })), $("body").on("click", "#btnSubmit", function () { var e = $("#ConditionCount").val(); if (parseInt(e) <= 9) { var n = $(".Conditon").html(), t = !1, o = "AND"; "And Group" != n && "OR Group" != n || ("GrpAnd" == n ? o = "And" : "GrpOR" == n ? o = "OR" : "And Group" == n ? (o = "AndGroup", t = !0) : "OR Group" == n && (o = "ORGroup", t = !0), n = "Group"); var i = "Conditon:" + n + "@#$Element:" + $(".Mainconditons .row:last").children().find(".elements").html() + "@#$ConditonOpetator:" + $(".Mainconditons .row:last").children().find(".Operators").html() + "@#$ConditonValue:" + $(".Mainconditons .row:last").children().find(".txtValue").val() + "@#$btnSubmit:Add@#$deletedId:null@#$TempGrpId:0@#$GrpCondition:" + o + "@#$IsCreate:" + !1 + "@#$IsGroup:" + t; $.ajax({ type: "GET", url: "/DandB/AddElementCondition?Parameters=" + ConvertEncrypte(encodeURI(i)).split("+").join("***"), dataType: "html", contentType: "application/html", cache: !1, success: function (e) { $("#ElementsList").html(e); $("#strCondition").each(function () { $(".lblCondition").text("Your Condition should be : " + $(this).val()) }) }, error: function (e, n, t) { } }) } else bootbox.alert({ title: "<i class='fa fa-info-circle' aria-hidden='true'></i> " + message, message: "You can add maximum 10 condition" }) }), $("body").on("click", ".deleteCondition", function () { var e = $(this).attr("data-Id"), n = "Conditon:" + $(this).attr("data-node") + "@#$Element:@#$ConditonOpetator:@#$ConditonValue:@#$btnSubmit:delete@#$deletedId:@#$TempGrpId:" + e + "@#$GrpCondition:And@#$IsCreate:" + !1 + "@#$IsGroup:" + !1; $.ajax({ type: "GET", url: "/DandB/AddElementCondition?Parameters=" + ConvertEncrypte(encodeURI(n)).split("+").join("***"), dataType: "html", cache: !1, contentType: "application/html", success: function (e) { $("#ElementsList").html(e); $("#strCondition").each(function () { $(".lblCondition").text("Your Condition should be : " + $(this).val()) }) }, error: function (e, n, t) { } }) }), $("body").on("change", ".txtValue", function () { var e = $(this).parent().parent().find(".Elements").html(); updateList($(this).parent().parent().find(".ConditonOperators").html(), e, $(this).val(), $(this).parent().parent().find(".deleteCondition").attr("data-val"), $(this).attr("data-Id"), $(this).attr("data-node"), "Update") }), $("body").on("click", ".EditBussnessCondition", function () { var e = $(this).attr("id"), n = $("#ParentElements").val(), t = $("#ParentCondition").val(); $.magnificPopup.open({ preloader: !1, closeBtnInside: !0, type: "iframe", items: { src: "/DandB/AddElementCondition?ConditionListUpdatesId=" + ConvertEncrypte(encodeURI(e)).split("+").join("***") + "&ParentElements=" + ConvertEncrypte(encodeURI(n)).split("+").join("***") + "&ParentCondition=" + ConvertEncrypte(encodeURI(t)).split("+").join("***") }, callbacks: { close: function () { location.reload() } }, closeOnBgClick: !1, mainClass: "popupAddElementCondition" }) }), $("body").on("click", ".DeleteBussnessCondition", function () { var e = $(this).attr("id"); $.ajax({ type: "GET", url: "/DandB/DeleteBusinessCondition?Parameters=" + ConvertEncrypte(encodeURI(e)).split("+").join("***"), dataType: "html", contentType: "application/html", success: function (e) { $(".BusinessElements").html(e) }, error: function (e, n, t) { } }) }), $("body").on("click", ".AddinList", function () { var e = $('input[name="__RequestVerificationToken"]').val(), n = $("#BusinessCondionUpdateId").val(); n = null == n ? null : ConvertEncrypte(encodeURI(n)).split("+").join("***"); var t = $("#ParentElements").val(); t = ConvertEncrypte(encodeURI(t)).split("+").join("***"); var o = $("#ParentCondition").val(); o = ConvertEncrypte(encodeURI(o)).split("+").join("***"), ProductElementId = $("#BusinessProductElement option:selected").val(), ProductElementId = ConvertEncrypte(encodeURI(ProductElementId)).split("+").join("***"), $.ajax({ type: "POST", url: "/DandB/AddElementCondition", data: JSON.stringify({ BusinessCondionUpdateId: n, ParentElements: t, ParentCondition: o, ProductElementId: ProductElementId }), dataType: "json", contentType: "application/json", headers: { __RequestVerificationToken: e }, async: !1, success: function (e) { window.parent.$.magnificPopup.close() }, error: function (e, n, t) { } }) }), $("body").on("click", ".DeleteMAinConditon", function () { var e = $('input[name="__RequestVerificationToken"]').val(), n = $(this).attr("id"); $.ajax({ type: "POST", url: "/DandB/DeleteMainConditon?Parameters=" + ConvertEncrypte(encodeURI(n)).split("+").join("***"), dataType: "JSON", headers: { __RequestVerificationToken: e }, contentType: "application/json", success: function (e) { "Success" && location.reload() }, error: function (e, n, t) { } }) }), $("body").on("click", ".EditMAinConditon", function () { var e = $(this).attr("id"); $.ajax({ type: "GET", url: "/DandB/AddBusinessElement?Parameters=" + ConvertEncrypte(encodeURI(e)).split("+").join("***"), dataType: "HTML", success: function (e) { $("#AddBusinessElementModalMain").html(e), DraggableModalPopup("#AddBusinessElementModal") } }) }), $("body").on("change", ".pagevalueChangeCondition", function () { var e = $(this)[0].value, n = $("#SortBy").val(), t = $("#SortOrder").val(), o = $("#ProfileId").val(); 0 == o && (o = null); var i = "/DandB/BusinessElement/?pagevalue=" + e + "&sortby=" + n + "&sortorder=" + t + "&ProfileId=" + o; $.ajax({ type: "POST", url: i, dataType: "HTML", contentType: "application/html", async: !1, success: function (e) { $("#divPartialMonitoringData").html(e) }, error: function (e, n, t) { } }) }), $("body").on("click", "#btnGrpSubmit", function () { var e = $("#ConditionCount").val(); if (parseInt(e) <= 9) { var n = $(this).parent().find(".GrpConditon").attr("data-val"), t = $(this).parent().find(".GrpConditon").attr("data-Id"), o = !1, i = "AND"; "GrpAnd" != n && "GrpOR" != n && "And Group" != n && "OR Group" != n || ("GrpAnd" == n ? i = "And" : "GrpOR" == n ? i = "OR" : "And Group" == n ? (i = "AndGroup", o = !0) : "OR Group" == n && (i = "ORGroup", o = !0), n = "Group"); var a = "Conditon:" + n + "@#$Element:" + $(".Mainconditons .row:last").children().find(".elements").html() + "@#$ConditonOpetator:" + $(".Mainconditons .row:last").children().find(".Operators").html() + "@#$ConditonValue:" + $(".Mainconditons .row:last").children().find(".txtValue").val() + "@#$btnSubmit:Add@#$deletedId:null@#$TempGrpId:" + t + "@#$GrpCondition:" + i + "@#$IsCreate:" + !0 + "@#$IsGroup:" + o; $.ajax({ type: "GET", url: "/DandB/AddElementCondition?Parameters=" + ConvertEncrypte(encodeURI(a)).split("+").join("***"), dataType: "html", contentType: "application/html", cache: !1, success: function (e) { $("#ElementsList").html(e); $("#strCondition").each(function () { $(".lblCondition").text("Your Condition should be : " + $(this).val()) }) }, error: function (e, n, t) { } }) } else bootbox.alert({ title: "<i class='fa fa-info-circle' aria-hidden='true'></i> " + message, message: "You can add maximum 10 condition" }) }), $("body").on("click", "#btnBackToProfile", function () { $("#BusinessElementModal").modal("hide") });