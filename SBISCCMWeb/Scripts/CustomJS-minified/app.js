$.throttle_delay = 350, $.menu_speed = 235, $.navbar_height = 49, $.root_ = $("body"), $.left_panel = $("#left-panel"), $.bread_crumb = $("#ribbon ol.breadcrumb"), $.device = null, $.navAsAjax = !1, $.enableJarvisWidgets = !0, $.enableMobileWidgets = !1; var ismobile = /iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase()); function MinifyMenu() { $("body").toggleClass(function (e) { return $(this).is(".minified") ? ($(".circleUserText").show(), $(".txtCompliance").show(), $(".Toggleslider").removeClass("clsComplianceMinified"), $(".Toggleswitch").addClass("switch"), $(".Toggleswitch").removeClass("switchADACompliance"), localStorage.setItem("minifyme", !0), $(".divCustomeProviderSubmenu").removeClass("minifymeProviderMenu"), "minified") : (localStorage.setItem("minifyme", !1), $(".divCustomeProviderSubmenu").addClass("minifymeProviderMenu"), $(".circleUserText").hide(), $(".txtCompliance").hide(), $(".Toggleslider").addClass("clsComplianceMinified"), $(".Toggleswitch").removeClass("switch"), $(".Toggleswitch").addClass("switchADACompliance"), "minified") }) } function nav_page_height() { var e = $("#main").height(), t = $(window).height() - $.navbar_height; e > t ? ($.left_panel.css("min-height", e + "px"), $.root_.css("min-height", e + $.navbar_height + "px")) : ($.left_panel.css("min-height", t + "px"), $.root_.css("min-height", t + "px")) } function check_if_mobile_width() { $(window).width() < 979 ? $.root_.addClass("mobile-view-activated") : $.root_.hasClass("mobile-view-activated") && $.root_.removeClass("mobile-view-activated") } ismobile ? ($.root_.addClass("mobile-detected"), $.device = "mobile") : ($.root_.addClass("desktop-detected"), $.device = "desktop"), $(document).ready(function () { var e = localStorage.getItem("minifyme"); function t() { window.location = $.loginURL } null != e && "false" == e.toLocaleLowerCase() && MinifyMenu(), $("[rel=tooltip]").length && $("[rel=tooltip]").tooltip(), nav_page_height(), $("nav ul").jarvismenu({ accordion: !0, speed: $.menu_speed, closedSign: '<em class="fa fa-expand-o"></em>', openedSign: '<em class="fa fa-collapse-o"></em>' }), $(".minifyme").click(function (e) { MinifyMenu(), $(this).effect("highlight", {}, 500), e.preventDefault() }), $("#hide-menu >:first-child > a").click(function (e) { $("body").toggleClass("hidden-menu"), e.preventDefault() }), $("#search-mobile").click(function () { $.root_.addClass("search-mobile") }), $("#cancel-search-js").click(function () { $.root_.removeClass("search-mobile") }), $("#activity").click(function (e) { var t = $(this); t.find(".badge").hasClass("bg-color-red") && (t.find(".badge").removeClassPrefix("bg-color-"), t.find(".badge").text("0")), t.next(".ajax-dropdown").is(":visible") ? (t.next(".ajax-dropdown").fadeOut(150), t.removeClass("active")) : (t.next(".ajax-dropdown").fadeIn(150), t.addClass("active")); t.next(".ajax-dropdown").find(".btn-group > .active > input").attr("id"); e.preventDefault() }), $('input[name="activity"]').change(function () { var e = $(this); url = e.attr("id"), container = $(".ajax-notifications"), loadURL(url, container) }), $(document).mouseup(function (e) { $(".ajax-dropdown").is(e.target) || 0 !== $(".ajax-dropdown").has(e.target).length || ($(".ajax-dropdown").fadeOut(150), $(".ajax-dropdown").prev().removeClass("active")) }), $("button[data-loading-text]").on("click", function () { var e = $(this); e.button("loading"), setTimeout(function () { e.button("reset") }, 3e3) }), $this = $("#activity > .badge"), parseInt($this.text()) > 0 && $this.addClass("bg-color-red bounceIn animated"), $("#refresh").click(function (e) { $.SmartMessageBox({ title: "<i class='fa fa-refresh' style='color:green'></i> Clear Local Storage", content: "Would you like to RESET all your saved widgets and clear LocalStorage?", buttons: "[No][Yes]" }, function (e) { "Yes" == e && localStorage && (localStorage.clear(), location.reload()) }), e.preventDefault() }), $("#logout a").click(function (e) { var a = $(this); $.loginURL = a.attr("href"), $.logoutMSG = a.data("logout-msg"), -1 != navigator.userAgent.indexOf("Safari") && -1 == navigator.userAgent.indexOf("Chrome") && (confirm("Are you sure you want to logout?") ? setTimeout(t, 1e3) : e.preventDefault()), $.SmartMessageBox({ title: "<i class='fa fa-sign-out txt-color-orangeDark'></i> Logout <span class='txt-color-orangeDark'><strong>" + $("#show-shortcut").text() + "</strong></span> ?", content: $.logoutMSG || "You can improve your security further after logging out by closing this opened browser", buttons: "[No][Yes]" }, function (e) { "Yes" == e && ($.root_.addClass("animated fadeOutUp"), setTimeout(t, 1e3)) }), e.preventDefault() }) }), function (e, t, a) { var i, o = e([]), n = e.resize = e.extend(e.resize, {}), r = "setTimeout", l = "resize", s = l + "-special-event", d = "delay"; n[d] = e.throttle_delay, n.throttleWindow = !0, e.event.special[l] = { setup: function () { if (!n.throttleWindow && this[r]) return !1; var a = e(this); o = o.add(a), e.data(this, s, { w: a.width(), h: a.height() }), 1 === o.length && function a() { i = t[r](function () { o.each(function () { var t = e(this), a = t.width(), i = t.height(), o = e.data(this, s); a === o.w && i === o.h || t.trigger(l, [o.w = a, o.h = i]) }), a() }, n[d]) }() }, teardown: function () { if (!n.throttleWindow && this[r]) return !1; var t = e(this); o = o.not(t), t.removeData(s), o.length || clearTimeout(i) }, add: function (t) { if (!n.throttleWindow && this[r]) return !1; var i; function o(t, o, n) { var r = e(this), l = e.data(this, s); l.w = o !== a ? o : r.width(), l.h = n !== a ? n : r.height(), i.apply(this, arguments) } if (e.isFunction(t)) return i = t, o; i = t.handler, t.handler = o } } }(jQuery, this), $("#main").resize(function () { nav_page_height(), check_if_mobile_width() }), $("nav").resize(function () { nav_page_height() }); var ie = function () { for (var e = 3, t = document.createElement("div"), a = t.getElementsByTagName("i"); t.innerHTML = "\x3c!--[if gt IE " + ++e + "]><i></i><![endif]--\x3e", a[0];); return e > 4 ? e : void 0 }(); function launchFullscreen(e) { $.root_.hasClass("full-screen") ? ($.root_.removeClass("full-screen"), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()) : ($.root_.addClass("full-screen"), e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen()) } function runAllForms() { $.fn.slider && $(".slider").slider(), $.fn.select2 && $(".select2").each(function () { var e = $(this), t = e.attr("data-select-width") || "100%"; e.select2({ allowClear: !0, width: t }) }), $.fn.mask && $("[data-mask]").each(function () { var e = $(this), t = e.attr("data-mask") || "error...", a = e.attr("data-mask-placeholder") || "X"; e.mask(t, { placeholder: a }) }), $.fn.autocomplete && $("[data-autocomplete]").each(function () { var e = $(this), t = e.data("autocomplete") || ["The", "Quick", "Brown", "Fox", "Jumps", "Over", "Three", "Lazy", "Dogs"]; e.autocomplete({ source: t }) }), $.fn.datepicker && $(".datepicker").each(function () { var e = $(this), t = e.attr("data-dateformat") || "dd.mm.yy"; e.datepicker({ dateFormat: t, prevText: '<i class="fa fa-chevron-left"></i>', nextText: '<i class="fa fa-chevron-right"></i>' }) }), $("button[data-loading-text]").on("click", function () { var e = $(this); e.button("loading"), setTimeout(function () { e.button("reset") }, 3e3) }) } function runAllCharts() { $.fn.sparkline && $(".sparkline").each(function () { var e = $(this), t = e.data("sparkline-type") || "bar"; if ("bar" == t) { var a = e.data("sparkline-bar-color") || e.css("color") || "#0000f0", i = e.data("sparkline-height") || "26px", o = e.data("sparkline-barwidth") || 5, n = e.data("sparkline-barspacing") || 2, r = e.data("sparkline-negbar-color") || "#A90329", l = e.data("sparkline-barstacked-color") || ["#A90329", "#0099c6", "#98AA56", "#da532c", "#4490B1", "#6E9461", "#990099", "#B4CAD3"]; e.sparkline("html", { type: "bar", barColor: a, type: t, height: i, barWidth: o, barSpacing: n, stackedBarColor: l, negBarColor: r, zeroAxis: "false" }) } if ("line" == t) { i = e.data("sparkline-height") || "20px"; var s = e.data("sparkline-width") || "90px", d = e.data("sparkline-line-color") || e.css("color") || "#0000f0", c = e.data("sparkline-line-width") || 1, p = e.data("fill-color") || "#c0d0f0", h = e.data("sparkline-spot-color") || "#f08000", u = e.data("sparkline-minspot-color") || "#ed1c24", f = e.data("sparkline-maxspot-color") || "#f08000", g = e.data("sparkline-highlightspot-color") || "#50f050", m = e.data("sparkline-highlightline-color") || "f02020", b = e.data("sparkline-spotradius") || 1.5; thisChartMinYRange = e.data("sparkline-min-y") || "undefined", thisChartMaxYRange = e.data("sparkline-max-y") || "undefined", thisChartMinXRange = e.data("sparkline-min-x") || "undefined", thisChartMaxXRange = e.data("sparkline-max-x") || "undefined", thisMinNormValue = e.data("min-val") || "undefined", thisMaxNormValue = e.data("max-val") || "undefined", thisNormColor = e.data("norm-color") || "#c0c0c0", thisDrawNormalOnTop = e.data("draw-normal") || !1, e.sparkline("html", { type: "line", width: s, height: i, lineWidth: c, lineColor: d, fillColor: p, spotColor: h, minSpotColor: u, maxSpotColor: f, highlightSpotColor: g, highlightLineColor: m, spotRadius: b, chartRangeMin: thisChartMinYRange, chartRangeMax: thisChartMaxYRange, chartRangeMinX: thisChartMinXRange, chartRangeMaxX: thisChartMaxXRange, normalRangeMin: thisMinNormValue, normalRangeMax: thisMaxNormValue, normalRangeColor: thisNormColor, drawNormalOnTop: thisDrawNormalOnTop }) } if ("pie" == t) { var v = e.data("sparkline-piecolor") || ["#B4CAD3", "#4490B1", "#98AA56", "#da532c", "#6E9461", "#0099c6", "#990099", "#717D8A"], k = e.data("sparkline-piesize") || 90, C = e.data("border-color") || "#45494C", w = e.data("sparkline-offset") || 0; e.sparkline("html", { type: "pie", width: k, height: k, tooltipFormat: '<span style="color: {{color}}">&#9679;</span> ({{percent.1}}%)', sliceColors: v, offset: 0, borderWidth: 1, offset: w, borderColor: C }) } if ("box" == t) { var x = e.data("sparkline-width") || "auto", y = e.data("sparkline-height") || "auto", S = e.data("sparkline-boxraw") || !1, _ = e.data("sparkline-targetval") || "undefined", j = e.data("sparkline-min") || "undefined", M = e.data("sparkline-max") || "undefined", R = e.data("sparkline-showoutlier") || !0, A = e.data("sparkline-outlier-iqr") || 1.5, T = e.data("sparkline-spotradius") || 1.5, B = e.css("color") || "#000000", L = e.data("fill-color") || "#c0d0f0", D = e.data("sparkline-whis-color") || "#000000", F = e.data("sparkline-outline-color") || "#303030", N = e.data("sparkline-outlinefill-color") || "#f0f0f0", W = e.data("sparkline-outlinemedian-color") || "#f00000", z = e.data("sparkline-outlinetarget-color") || "#40a020"; e.sparkline("html", { type: "box", width: x, height: y, raw: S, target: _, minValue: j, maxValue: M, showOutliers: R, outlierIQR: A, spotRadius: T, boxLineColor: B, boxFillColor: L, whiskerColor: D, outlierLineColor: F, outlierFillColor: N, medianColor: W, targetColor: z }) } if ("bullet" == t) { var E = e.data("sparkline-height") || "auto", P = e.data("sparkline-width") || 2, I = e.data("sparkline-bullet-color") || "#ed1c24", O = e.data("sparkline-performance-color") || "#3030f0", U = e.data("sparkline-bulletrange-color") || ["#d3dafe", "#a8b6ff", "#7f94ff"]; e.sparkline("html", { type: "bullet", height: E, targetWidth: P, targetColor: I, performanceColor: O, rangeColors: U }) } if ("discrete" == t) { var q = e.data("sparkline-height") || 26, H = e.data("sparkline-width") || 50, Y = e.css("color"), K = e.data("sparkline-line-height") || 5, V = e.data("sparkline-threshold") || "undefined", X = e.data("sparkline-threshold-color") || "#ed1c24"; e.sparkline("html", { type: "discrete", width: H, height: q, lineColor: Y, lineHeight: K, thresholdValue: V, thresholdColor: X }) } if ("tristate" == t) { var J = e.data("sparkline-height") || 26, Q = (e.data("sparkline-posbar-color"), e.data("sparkline-negbar-color") || "#f04040"), G = e.data("sparkline-zerobar-color") || "#909090", Z = e.data("sparkline-barwidth") || 5, ee = e.data("sparkline-barspacing") || 2, te = e.data("sparkline-zeroaxis") || !1; e.sparkline("html", { type: "tristate", height: J, posBarColor: ae, negBarColor: Q, zeroBarColor: G, barWidth: Z, barSpacing: ee, zeroAxis: te }) } if ("compositebar" == t) { i = e.data("sparkline-height") || "20px", s = e.data("sparkline-width") || "100%", o = e.data("sparkline-barwidth") || 3, c = e.data("sparkline-line-width") || 1, d = e.data("sparkline-color-top") || "#ed1c24"; var ae = e.data("sparkline-color-bottom") || "#333333"; e.sparkline(e.data("sparkline-bar-val"), { type: "bar", width: s, height: i, barColor: ae, barWidth: o }), e.sparkline(e.data("sparkline-line-val"), { width: s, height: i, lineColor: d, lineWidth: c, composite: !0, fillColor: !1 }) } if ("compositeline" == t) { i = e.data("sparkline-height") || "20px", s = e.data("sparkline-width") || "90px"; var ie = e.data("sparkline-bar-val"), oe = e.data("sparkline-bar-val-spots-top") || null, ne = e.data("sparkline-bar-val-spots-bottom") || null, re = e.data("sparkline-line-width-top") || 1, le = e.data("sparkline-line-width-bottom") || 1, se = e.data("sparkline-color-top") || "#333333", de = e.data("sparkline-color-bottom") || "#ed1c24", ce = e.data("sparkline-spotradius-top") || 1.5, pe = e.data("sparkline-spotradius-bottom") || ce, he = (h = e.data("sparkline-spot-color") || "#f08000", e.data("sparkline-minspot-color-top") || "#ed1c24"), ue = e.data("sparkline-maxspot-color-top") || "#f08000", fe = e.data("sparkline-minspot-color-bottom") || he, ge = e.data("sparkline-maxspot-color-bottom") || ue, me = e.data("sparkline-highlightspot-color-top") || "#50f050", be = e.data("sparkline-highlightline-color-top") || "#f02020", ve = e.data("sparkline-highlightspot-color-bottom") || me, $e = e.data("sparkline-highlightline-color-bottom") || be, ke = e.data("sparkline-fillcolor-top") || "transparent", Ce = e.data("sparkline-fillcolor-bottom") || "transparent"; e.sparkline(ie, { type: "line", spotRadius: ce, spotColor: h, minSpotColor: he, maxSpotColor: ue, highlightSpotColor: me, highlightLineColor: be, valueSpots: oe, lineWidth: re, width: s, height: i, lineColor: se, fillColor: ke }), e.sparkline(e.data("sparkline-line-val"), { type: "line", spotRadius: pe, spotColor: h, minSpotColor: fe, maxSpotColor: ge, highlightSpotColor: ve, highlightLineColor: $e, valueSpots: ne, lineWidth: le, width: s, height: i, lineColor: de, composite: !0, fillColor: Ce }) } }), $.fn.easyPieChart && $(".easy-pie-chart").each(function () { var e = $(this), t = e.css("color") || e.data("pie-color"), a = e.data("pie-track-color") || "#eeeeee", i = parseInt(e.data("pie-size")) || 25; e.easyPieChart({ barColor: t, trackColor: a, scaleColor: !1, lineCap: "butt", lineWidth: parseInt(i / 8.5), animate: 1500, rotate: -90, size: i, onStep: function (e) { this.$el.find("span").text(~~e) } }) }) } function setup_dashboard_widgets_desktop() { $.fn.jarvisWidgets && $.enableJarvisWidgets && $(".widget-data").jarvisWidgets({ grid: "article", widgets: ".jarviswidget", localStorage: !0, deleteSettingsKey: "#deletesettingskey-options", settingsKeyLabel: "Reset settings?", deletePositionKey: "#deletepositionkey-options", positionKeyLabel: "Reset position?", sortable: !0, buttonsHidden: !1, toggleButton: !0, toggleClass: "fa fa-minus | fa fa-plus", toggleSpeed: 200, onToggle: function () { }, deleteButton: !0, deleteClass: "fa fa-times", deleteSpeed: 200, onDelete: function () { }, editButton: !0, editPlaceholder: ".jarviswidget-editbox", editClass: "fa fa-cog | fa fa-save", editSpeed: 200, onEdit: function () { }, colorButton: !0, fullscreenButton: !0, fullscreenClass: "fa fa-resize-full | fa fa-resize-small", fullscreenDiff: 3, onFullscreen: function () { }, customButton: !1, customClass: "folder-10 | next-10", customStart: function () { alert("Hello you, this is a custom button...") }, customEnd: function () { alert("bye, till next time...") }, buttonOrder: "%refresh% %custom% %edit% %toggle% %fullscreen% %delete%", opacity: 1, dragHandle: "> header", placeholderClass: "jarviswidget-placeholder", indicator: !0, indicatorTime: 600, ajax: !0, timestampPlaceholder: ".jarviswidget-timestamp", timestampFormat: "Last update: %m%/%d%/%y% %h%:%i%:%s%", refreshButton: !0, refreshButtonClass: "fa fa-refresh", labelError: "Sorry but there was a error:", labelUpdated: "Last Update:", labelRefresh: "Refresh", labelDelete: "Delete widget:", afterLoad: function () { }, rtl: !1, onChange: function () { }, onSave: function () { }, ajaxnav: $.navAsAjax }) } function setup_widgets_desktop() { $.fn.jarvisWidgets && $.enableJarvisWidgets && $("#widget-grid").jarvisWidgets({ grid: "article", widgets: ".jarviswidget", localStorage: !0, deleteSettingsKey: "#deletesettingskey-options", settingsKeyLabel: "Reset settings?", deletePositionKey: "#deletepositionkey-options", positionKeyLabel: "Reset position?", sortable: !0, buttonsHidden: !1, toggleButton: !0, toggleClass: "fa fa-minus | fa fa-plus", toggleSpeed: 200, onToggle: function () { }, deleteButton: !0, deleteClass: "fa fa-times", deleteSpeed: 200, onDelete: function () { }, editButton: !0, editPlaceholder: ".jarviswidget-editbox", editClass: "fa fa-cog | fa fa-save", editSpeed: 200, onEdit: function () { }, colorButton: !0, fullscreenButton: !0, fullscreenClass: "fa fa-resize-full | fa fa-resize-small", fullscreenDiff: 3, onFullscreen: function () { }, customButton: !1, customClass: "folder-10 | next-10", customStart: function () { alert("Hello you, this is a custom button...") }, customEnd: function () { alert("bye, till next time...") }, buttonOrder: "%refresh% %custom% %edit% %toggle% %fullscreen% %delete%", opacity: 1, dragHandle: "> header", placeholderClass: "jarviswidget-placeholder", indicator: !0, indicatorTime: 600, ajax: !0, timestampPlaceholder: ".jarviswidget-timestamp", timestampFormat: "Last update: %m%/%d%/%y% %h%:%i%:%s%", refreshButton: !0, refreshButtonClass: "fa fa-refresh", labelError: "Sorry but there was a error:", labelUpdated: "Last Update:", labelRefresh: "Refresh", labelDelete: "Delete widget:", afterLoad: function () { }, rtl: !1, onChange: function () { }, onSave: function () { }, ajaxnav: $.navAsAjax }) } function setup_widgets_mobile() { $.enableMobileWidgets && $.enableJarvisWidgets && setup_widgets_desktop() } $.fn.extend({ jarvismenu: function (e) { var t = $.extend({ accordion: "true", speed: 200, closedSign: "[+]", openedSign: "[-]" }, e), a = $(this); a.find("li").each(function () { 0 != $(this).find("ul").size() && ($(this).find("a:first").append("<b class='collapse-sign'>" + t.closedSign + "</b>"), "#" == $(this).find("a:first").attr("href") && $(this).find("a:first").click(function () { return !1 })) }), a.find("li.active").each(function () { $(this).parents("ul").slideDown(t.speed), $(this).parents("ul").parent("li").find("b:first").html(t.openedSign), $(this).parents("ul").parent("li").addClass("open") }), a.find("li a").click(function () { 0 != $(this).parent().find("ul").size() && (t.accordion && ($(this).parent().find("ul").is(":visible") || (parents = $(this).parent().parents("ul"), visible = a.find("ul:visible"), visible.each(function (e) { var a = !0; parents.each(function (t) { if (parents[t] == visible[e]) return a = !1, !1 }), a && $(this).parent().find("ul") != visible[e] && $(visible[e]).slideUp(t.speed, function () { $(this).parent("li").find("b:first").html(t.closedSign), $(this).parent("li").removeClass("open") }) }))), $(this).parent().find("ul:first").is(":visible") && !$(this).parent().find("ul:first").hasClass("active") ? $(this).parent().find("ul:first").slideUp(t.speed, function () { $(this).parent("li").removeClass("open"), $(this).parent("li").find("b:first").delay(t.speed).html(t.closedSign) }) : $(this).parent().find("ul:first").slideDown(t.speed, function () { $(this).parent("li").addClass("open"), $(this).parent("li").find("b:first").delay(t.speed).html(t.openedSign) })) }) } }), jQuery.fn.doesExist = function () { return jQuery(this).length > 0 }; var gMapsLoaded = !1; window.gMapsCallback = function () { gMapsLoaded = !0, $(window).trigger("gMapsLoaded") }, window.loadGoogleMaps = function () { if (gMapsLoaded) return window.gMapsCallback(); var e = document.createElement("script"); e.setAttribute("type", "text/javascript"), e.setAttribute("src", "https://maps.google.com/maps/api/js?sensor=false&callback=gMapsCallback"), (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(e) }; var jsArray = {}; function loadScript(e, t) { if (jsArray[e]) t && t(); else { jsArray[e] = !0; var a = document.getElementsByTagName("body")[0], i = document.createElement("script"); i.type = "text/javascript", i.src = e, i.onload = t, a.appendChild(i) } } function loadURL(e, t) { $.ajax({ type: "GET", url: e, dataType: "html", cache: !0, beforeSend: function () { t.html('<h1><i class="fa fa-cog fa-spin"></i> Loading...</h1>'), t[0] == $("#content")[0] && (drawBreadCrumb(), $("html").animate({ scrollTop: 0 }, "fast")) }, success: function (e) { t.css({ opacity: "0.0" }).html(e).delay(50).animate({ opacity: "1.0" }, 300) }, error: function (e, a, i) { t.html('<h4 style="margin-top:10px; display:block; text-align:left"><i class="fa fa-warning txt-color-orangeDark"></i> Error 404! Page not found.</h4>') }, async: !1 }) } function drawBreadCrumb() { var e = $("nav li.active > a"), t = e.length; $.bread_crumb.empty(), $.bread_crumb.append($("<li>Home</li>")), e.each(function () { $.bread_crumb.append($("<li></li>").html($.trim($(this).clone().children(".badge").remove().end().text()))), --t || (document.title = $.bread_crumb.find("li:last-child").text()) }) } function pageSetUp() { "desktop" === $.device ? ($("[rel=tooltip]").tooltip(), $("[rel=popover]").popover(), $("[rel=popover-hover]").popover({ trigger: "hover" }), runAllCharts(), setup_widgets_desktop(), nav_page_height(), runAllForms()) : ($("[rel=popover]").popover(), $("[rel=popover-hover]").popover({ trigger: "hover" }), runAllCharts(), setup_widgets_mobile(), nav_page_height(), runAllForms()) } $("body").on("click", function (e) { $('[rel="popover"]').each(function () { $(this).is(e.target) || 0 !== $(this).has(e.target).length || 0 !== $(".popover").has(e.target).length || $(this).popover("hide") }) }), $("#NotifyNotification").click(function (e) { var t = $(this); if (t.find(".badge").hasClass("bg-color-red") && (t.find(".badge").removeClassPrefix("bg-color-"), t.find(".badge").text("0")), t.next(".ajax-dropdown").is(":visible")) t.next(".ajax-dropdown").fadeOut(150), t.removeClass("active"); else { t.next(".ajax-dropdown").fadeIn(150), t.addClass("active"); var a = []; if ($("#NotificationDiv .Notification-Containt li").each(function () { "false" == $(this).attr("data-isRead").toLowerCase() && a.push($(this).attr("data-notificationid")) }), 0 == $("#NotifyNotification b.badge.bounceIn.animated").length) return !1; var i = a.join(","); $.ajax({ type: "POST", url: "Notification/DismissNotification?NotificationId=" + i, dataType: "json", contentType: "application/json", processData: !1, async: !1, global: !1, success: function (e) { "success" && $("#NotifyNotification b.badge.bounceIn.animated").remove() }, error: function (e, t, a) { } }) } t.next(".ajax-dropdown").find(".btn-group > .active > input").attr("id"); e.preventDefault() });