var FilterColumnsArray = []; function RebindUXAuthTokens() { $.ajax({ type: "POST", url: "/Home/RebindUXAuthTokens/", dataType: "json", contentType: "application/json", global: !1, success: function (e) { }, error: function (e, t, a) { } }) } function GetNotification() { $.ajax({ type: "POST", url: "/ExportView/ExportJobNotification/", dataType: "json", contentType: "application/json", global: !1, success: function (e) { null != e && "" != e ? GetMultipleNotifications(e, "<a href='/ExportView/Index' class='clsNotifiaction' style='color:#ffffff'> Click here</a>") : $("#divSmallBoxes").hide() }, error: function (e, t, a) { } }) } function GetOIExportNotification() { $.ajax({ type: "POST", url: "/OIExportView/ExportOIJobNotification/", dataType: "json", contentType: "application/json", global: !1, success: function (e) { null != e && "" != e ? GetMultipleNotifications(e, "<a href='/OI/ExportView' class='clsNotifiaction' style='color:#ffffff'> Click here</a>") : $("#divSmallBoxes").hide() }, error: function (e, t, a) { } }) } function GetMultipleNotifications(e, t) { var a = 10; $("#MySmallBox .SmallBox").each(function () { a += $(this).height() + 10 }); var i = "mySmallbox" + $("#MySmallBox").children().length, n = '<div class="SmallBox animated fadeInRight fast" id="' + i + '" style="background-color: #1E90FF;top:' + a + 'px"><div class="foto"><i class="fa fa-bell swing animated"></i></div> <div class="textoFoto"> <span > Notification</span> <p > <div class="notificationText">' + e + t + '</div></p> </div> <div class="miniIcono"> <i class="btnNotificationClose fa fa-times" id = "botClose3" ></i> </div> </div>'; $("#MySmallBox").append(n), setTimeout(function () { $("#" + i).remove() }, 5e3) } function GetETLJobStatus() { $("#divProgress").hide(), $.ajax({ type: "POST", url: "/Home/GetETLJobStatus/", data: "", dataType: "json", contentType: "application/json", success: function (e) { $(".backgroundProcess").html(e.Data1.replace(/(?:\\[rn]|[\r\n]+)+/g, "<br /><br />").replace('"', "").replace('"', "")), "successful" === e.Data2.trim().toLowerCase() ? $(".bgProcess").css({ backgroundColor: "#6fd64b" }) : "failed" === e.Data2.trim().toLowerCase() && ($(".bgProcess").css({ backgroundColor: "#fe642e" }), $(".backgroundProcess-new").css("height", "300"), $(".bgProcess").css("height", "300")) }, error: function (e, t, a) { } }), $("#divProgress").hide() } function GetActiveUserData() { $("#divProgress").hide(), $.ajax({ type: "POST", url: "/Home/GetActiveUserData/", data: {}, dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { $(".ActiveUser").html(activeUsers + " <br /> " + e.length), $(".userdatacount-new").find("tr").remove(); for (var t = 0; t < e.length; t++) { if (null == e[t].Image_path || "" == e[t].Image_path) $(".userdatacount-new").append("<tr class='margin-3'><td class='captchaimgpadding'><img class='captchaimg' alt='Image' src='/Images/no-image.jpg'></td><td>" + e[t].UserName + "</td></tr>"); else if (UrlExists(e[t].Image_path)) { e[t].Image_path; $(".userdatacount-new").append("<tr class='margin-3'><td class='captchaimgpadding'><img class='captchaimg' alt='Image' src='" + e[t].Image_path + "'></td><td>" + e[t].UserName + "</td></tr>") } else $(".userdatacount-new").append("<tr class='margin-3'><td class='captchaimgpadding'><img class='captchaimg' alt='Image' src='/Images/no-image.jpg'></td><td>" + e[t].UserName + "</td></tr>") } }, error: function (e, t, a) { } }), $("#divProgress").hide() } function validateFileName(e) { return !(e.indexOf("\\") > -1 || e.indexOf("/") > -1 || e.indexOf(":") > -1 || e.indexOf('"') > -1 || e.indexOf("<") > -1 || e.indexOf(">") > -1 || e.indexOf("?") > -1 || e.indexOf("|") > -1 || e.indexOf("*") > -1) } function ConvertEncrypte(e) { var t = ""; return "" != e && null != e && $.ajax({ type: "POST", url: "/Home/GetEncryptedString", data: JSON.stringify({ strValue: e }), dataType: "json", contentType: "application/json", async: !1, success: function (e) { t = e }, error: function (e, t, a) { } }), t } function UrlExists(e) { var t = new XMLHttpRequest; return t.open("HEAD", e, !1), t.send(), 404 != t.status } function ReloadPage() { window.parent.$.magnificPopup.close(), location.reload() } function loadScript(e, t) { var a = document.createElement("script"); a.type = "text/javascript", a.readyState ? a.onreadystatechange = function () { "loaded" != a.readyState && "complete" != a.readyState || (a.onreadystatechange = null, t()) } : a.onload = function () { t() }, a.src = e, document.getElementsByTagName("head")[0].appendChild(a) } function changeLanguageP(e) { $("#LanguageP").find("option").remove(), $("#LanguageP").append("<option value=>Select Language</option>"), "us" == e.toLowerCase() ? ($("#LanguageP").append("<option value=en-US>English</option>"), $("#LanguageP").val("en-US")) : "jp" == e.toLowerCase() ? ($("#LanguageP").append("<option value=en-US>English</option>"), $("#LanguageP").append("<option value=ja-JP>Japanese</option>"), $("#LanguageP").val("ja-JP")) : "tw" == e.toLowerCase() ? ($("#LanguageP").append("<option value=en-US>English</option>"), $("#LanguageP").append("<option value=zh-hant-TW>Traditional Chinese</option>"), $("#LanguageP").val("zh-hant-TW")) : "kr" == e.toLowerCase() ? ($("#LanguageP").append("<option value=en-US>English</option>"), $("#LanguageP").append("<option value=ko-hang-KR>Hangul</option>"), $("#LanguageP").val("ko-hang-KR")) : "cn" == e.toLowerCase() ? ($("#LanguageP").append("<option value=en-US>English</option>"), $("#LanguageP").append("<option value=zh-hans-CN>Simplified Chinese</option>"), $("#LanguageP").val("zh-hans-CN")) : ($("#LanguageP").append("<option value=en-US>English</option>"), $("#LanguageP").append("<option value=ja-JP>Japanese</option>"), $("#LanguageP").append("<option value=zh-hans-CN>Simplified Chinese</option>"), $("#LanguageP").append("<option value=zh-hant-TW>Traditional Chinese</option>"), $("#LanguageP").append("<option value=ko-hang-KR>Hangul</option>"), $("#LanguageP").val("en-US")) } function btnNotificationClose(e) { $("#" + e).remove() } function LocationReload() { location.reload() } function ShowMessageNotification(e, t, a, i, n) { a && window.parent.$.magnificPopup.close(), "success" == e ? ($.notify({ message: t }, { newest_on_top: !0, z_index: 99999, delay: 1e4 }), i && n()) : bootbox.alert({ title: "<i class='fa fa-info-circle' aria-hidden='true'></i> " + message, message: t, callback: function () { i && n() } }) } function RedirectToCreateTicket() { $.magnificPopup.close(), window.location.href = window.location.origin + "/Ticket/Create" } function ShowLoadingImageQuickSearch() { $("#imgCompanyLoadForQuickSearch").show() } function HideLoadingImageQuickSearch() { $("#imgCompanyLoadForQuickSearch").hide() } function LoadTypeAheadQuickSearch() { var e = $("#CountryP").val(); $(".ui-front").addClass("quickSearchIcon"), $("#txtPCompany").autocomplete({ source: function (t, a) { [], ShowLoadingImageQuickSearch(), setTimeout(function () { $.ajax({ type: "GET", url: "/SearchData/SearchDataCompanyNameTypeAhead", data: { paramater: t.term, defaultCountryCode: e }, async: !1, contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { HideLoadingImageQuickSearch(); var t = JSON.parse(e); if (null != t.error && null != t.error.errorMessage) return !1; a($.map(t.searchCandidates, function (e, t) { return { label: e.organization.primaryName + (null != e.organization.primaryAddress.streetAddress ? ", " + e.organization.primaryAddress.streetAddress.line1 : "") + (null != e.organization.primaryAddress.addressLocality ? ", " + e.organization.primaryAddress.addressLocality.name : ""), value: e.organization.primaryName, duns: e.organization.duns, address: (null != e.organization.primaryAddress.streetAddress ? ",  " + e.organization.primaryAddress.streetAddress.line1 : "") + (null != e.organization.primaryAddress.addressLocality ? ",  " + e.organization.primaryAddress.addressLocality.name : ""), address1: null != e.organization.primaryAddress.streetAddress ? e.organization.primaryAddress.streetAddress.line1 : "", city: null != e.organization.primaryAddress.addressLocality ? e.organization.primaryAddress.addressLocality.name : "", state: null != e.organization.primaryAddress.addressRegion ? e.organization.primaryAddress.addressRegion.name : "", country: null != e.organization.primaryAddress.addressCountry.isoAlpha2Code ? e.organization.primaryAddress.addressCountry.isoAlpha2Code : "", fullDetail: e } })) } }) }, 1e3) }, minLength: 3, select: function (e, t) { FinalResponse = JSON.stringify(t.item), $("#txtPCompany").val(t.item.value), $("#txtPAddress").val(t.item.address1), $("#txtPCity").val(t.item.city), $("#txtPState").val(t.item.state), $("#CountryP").val(t.item.country), $(".QuickSearchBox").focus(), checkQuickSearchBox() }, open: function () { $(this).removeClass("ui-corner-all").addClass("ui-corner-top") }, close: function () { $(this).removeClass("ui-corner-top").addClass("ui-corner-all") } }) } function checkQuickSearchBox() { $(".QuickSearchNew").addClass("displayBlock") } $.IsTagsLicenseAllow = $("#IsTagsLicenseAllow").val(), $.UserType = $("#UserType").val(), $.LicenseEnabledDNB = $("#LicenseEnabledDNB").val(), $.LicenseEnabledOrb = $("#LicenseEnabledOrb").val(), $.BrandingString = $("#BrandingString").val(), $(document).ajaxStart(function () { $("#divProgress").show() }).ajaxStop(function () { $("#divProgress").hide() }), $(document).ready(function () { $("#CountryP option[value='US']").attr("selected", "selected"); var e = $("#LanguageP").val(), t = $("#CountryP").val(); null != e && changeLanguageP(t), pageSetUp() }), $("body").on("click", ".QuickSearch", function (e) { $("#divProgress").show(); var t = $("#txtPCompany").val().trim(), a = $("#txtPAddress").val().trim(), i = $("#txtPAddress2").val().trim(), n = $("#txtPCity").val().trim(), l = $("#txtPState").val().trim(), o = $("#txtPPhone").val().trim(), r = $("#txtPZip").val().trim(), s = $("select#CountryP").val().trim(), d = $("select#LanguageP").val(); d = null == d ? "" : d.trim(); var c = 0; if (validateFileName(t) ? $("#spnPCompany").hide() : ($("#spnPCompany").html("Company can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPCompany").show(), c++), validateFileName(a) ? $("#spnPAddress").hide() : ($("#spnPAddress").html("Address can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPAddress").show(), c++), validateFileName(i) ? $("#spnPAddress2").hide() : ($("#spnPAddress2").html("Address can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPAddress2").show(), c++), validateFileName(n) ? $("#spnPCity").hide() : ($("#spnPCity").html("City can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPCity").show(), c++), validateFileName(l) ? $("#spnPState").hide() : ($("#spnPState").html("State can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPState").show(), c++), validateFileName(o) ? $("#spnPPhone").hide() : ($("#spnPPhone").html("Phone can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPPhone").show(), c++), validateFileName(r) ? $("#spnPZip").hide() : ($("#spnPZip").html("Zip can't contain any of the following characters \r\n \\ / : * \" < > |"), $("#spnPZip").show(), c++), "" == t ? ($("#spnPCompany").show(), c++) : $("#spnPCompany").hide(), "" == s ? ($("#spnPCountry").show(), c++) : $("#spnPCountry").hide(), c > 0) return $("#divProgress").hide(), !1; var u = $('input[name="__RequestVerificationToken"]').val(), p = $("<form action='/SearchData/Index' method='post' id='QuickSearchFrm'></form>"); p.append('<input type="hidden" name="__RequestVerificationToken" value="' + u + '">'), p.append('<input type="hidden" name="CompanyName" value="' + t + '">'), p.append('<input type="hidden" name="Address" value="' + a + '">'), p.append('<input type="hidden" name="Address2" value="' + i + '">'), p.append('<input type="hidden" name="City" value="' + n + '">'), p.append('<input type="hidden" name="State" value="' + l + '">'), p.append('<input type="hidden" name="PhoneNbr" value="' + o + '">'), p.append('<input type="hidden" name="Zip" value="' + r + '">'), p.append('<input type="hidden" name="Country" value="' + s + '">'), p.append('<input type="hidden" name="Language" value="' + d + '">'), $("body").append(p), $("#QuickSearchFrm").submit() }), $(document).ready(function () { $($(".mainNav ul")[0]).append($(".liCircleUserText")), $("#divProgress").hide(), $("#divSmallBoxes").append(), GetETLJobStatus(), GetActiveUserData(); var e = 60 * $("#ExportNotificationTimeInterval").val() * 1e3; setInterval(function () { GetETLJobStatus(), GetActiveUserData() }, 5e4), "DandB" == $.BrandingString && "true" == $.LicenseEnabledDNB.toLowerCase() && setInterval(function () { GetNotification() }, e), "DandB" != $.BrandingString && "true" == $.LicenseEnabledOrb.toLowerCase() && setInterval(function () { GetOIExportNotification() }, e), setInterval(function () { var e = localStorage.getItem("AuthTokensInterval"); null == e ? localStorage.setItem("AuthTokensInterval", 1) : (e = parseInt(e)) < 59 ? localStorage.setItem("AuthTokensInterval", e + 1) : (localStorage.setItem("AuthTokensInterval", 0), RebindUXAuthTokens()) }, 6e4) }), $("#ComplianceReset").click(function () { var e = $('input[name="__RequestVerificationToken"]').val(), t = $("input#ComplianceReset").is(":checked"); $.ajax({ type: "POST", url: "/Home/StoreComplianceValue?ComplianceReset=" + t, headers: { __RequestVerificationToken: e }, dataType: "json", contentType: "application/json", global: !1, success: function (e) { }, error: function (e, t, a) { } }) }), $(document).on("click", ".btnNotificationClose", function () { $(this).parent().parent().remove() }), $(".process-popup").on("mouseenter mouseleave", function (e) { $(".bgProcess").show("slide", { direction: "left" }, 500) }), $(".bgProcess").on("mouseleave", function (e) { $(".bgProcess").hide("slide", { direction: "left" }, 500) }), $(".ActiveUser").on("mouseenter mouseleave", function (e) { $(".userdatacount-new").show("slide", { direction: "left" }, 500) }), $(".userdatacount-new").on("mouseleave", function (e) { $(".userdatacount-new").hide("slide", { direction: "left" }, 500) }), $(".well").on("mouseenter mouseleave ", function (e) { $(".userdatacount-new").hide("slide", { direction: "left" }, 500), $(".bgProcess").hide("slide", { direction: "left" }, 500) }), jQuery(document).ready(function (e) { var t = "1"; t = 18e5 * parseInt(t), jQuery(document).bind("idle.idleTimer", function () { var e = $("#SAMLSSOLogout").val(); "true" == e.toLowerCase() && (window.location = "/Account/SAMLLogOff"), "false" == e.toLowerCase() && (window.location = "/Account/LogOff") }), jQuery(document).bind("active.idleTimer", function () { }), jQuery.idleTimer(t) }), $("#FeedbackTypePos").click(function () { $("#FeedbackTypePos").addClass("iconClicked"), $("#FeedbackTypeNeg").removeClass("iconClicked"); var e = $(this).attr("data-val"); $("#FeedbackTypes").val(e) }), $("#FeedbackTypeNeg").click(function () { $("#FeedbackTypeNeg").addClass("iconClicked"), $("#FeedbackTypePos").removeClass("iconClicked"); var e = $(this).attr("data-val"); $("#FeedbackTypes").val(e) }), $("#btnSubmitFeedback").click(function () { var e = $('input[name="__RequestVerificationToken"]').val(), t = $("#FeedbackTypes").val(), a = $("#FeedbackTextBox").val(), i = $("#FeedbackPath").val(), n = 0; if ("" == t ? ($("#spnFeedbackType").show(), n++) : $("#spnFeedbackType").hide(), "" == a ? ($("#spnFeedbackMessage").show(), n++) : $("#spnFeedbackMessage").hide(), n > 0) return !1; var l = ConvertEncrypte(encodeURI("FeedbackType:" + t + "@#$Feedback:" + a + "@#$FeedbackPath:" + i)).split("+").join("***"); $.ajax({ type: "POST", url: "/Feedback/AddFeedback?Parameters=" + l, headers: { __RequestVerificationToken: e }, dataType: "JSON", cache: !1, contentType: "application/json", success: function (e) { null != e && (parent.ShowMessageNotification("success", e, !0), $(".feedbackBox").hide(), $("#FeedbackTypePos").removeClass("iconClicked"), $("#FeedbackTypeNeg").removeClass("iconClicked"), $("#FeedbackTextBox").val(""), $("#FeedbackTypes").val("")) }, error: function (e, t, a) { } }) }), $(document).on("click", ".btnRefresh", function () { var e = $("#ActiveStatisticsFilter").text().trim(), t = "/Home/Index", a = "", i = ""; if ("Filter Applied" == e) { a = $("#LOBTag").val(); var n = "isMainRefresh:true@#$Tags:" + (i = $("#ActiveStatisticsFilterTags").val()).split("::").join("&#58&#58") + "@#$LOBTags:" + a.replace("::", "&#58&#58"); t = "/Home/Index?Parameters=" + ConvertEncrypte(encodeURI(n)).split("+").join("***") } $.ajax({ type: "GET", url: t, dataType: "HTML", contentType: "application/html", success: function (t) { $("#divPartialIndex").html(t); $("#isMainRefresh").val(); LoadOnReady(), "Filter Applied" == e && ($("#ActiveStatisticsFilter").html("Filter Applied <i class='fa fa-caret-down'></i>"), i = $("#ActiveStatisticsFilterTags").val(), a = $("#LOBTag").val(), $("#ActiveStatisticsFilter").attr("data-content", "LOB Tag : " + a + "<br>Tags : " + i.replace("[*]", "No Tag")), $(".btnFiltered").removeAttr("hidden")), pageSetUp() }, error: function (e, t, a) { } }) }), $("body").on("change", "#CountryP", function () { var e = $("#LanguageP").val(), t = $(this).val(); null != e && changeLanguageP(t) }), $("body").on("click", ".DismissNotification", function () { var e = $(this).attr("id"); $.ajax({ type: "POST", url: "/Notification/DismissNotificationById?MessageId=" + e, dataType: "json", contentType: "application/json", processData: !1, async: !1, success: function (t) { t == success && $("#NotificationDiv .Notification-Containt li").each(function () { $(this).attr("data-notificationid") == e && $(this).remove() }) }, error: function (e, t, a) { } }) }), $("body").on("click", ".ClsDismissNotification", function () { var e = $(this).attr("id"); $.ajax({ type: "POST", url: "Notification/DismissNotificationById?MessageId=" + e, dataType: "json", contentType: "application/json", processData: !1, async: !1, success: function (t) { t == success && (bootbox.alert({ title: "<i class='fa fa-info-circle' aria-hidden='true'></i> Message", message: notificationDismissed, callback: function () { } }), $(".ClsDismissNotification").each(function () { $(this).attr("id") == e && $(this).remove() }), $("#NotificationDiv .Notification-Containt li").each(function () { $(this).attr("data-notificationid") == e && $(this).remove() })) }, error: function (e, t, a) { } }) }), $(document).on("click", ".btnOIDashboardRefresh", function () { ReFreshOIActiveStatisticsFilter(), BackgroundProcessStatisticsReport(), ReFreshOIAPIUsagestatistics() }), $("body").on("click", ".OIQuickSearch", function (e) { $("#divProgress").show(); var t = $("#txtPCompany").val().trim(), a = $("#txtPAddress").val().trim(), i = $("#txtPAddress2").val().trim(), n = $("#txtPCity").val().trim(), l = $("#txtPState").val().trim(), o = $("#txtPPhone").val().trim(), r = $("#txtPZip").val().trim(), s = $("select#CountryP").val().trim(), d = 0; if ("" == t ? ($("#spnPCompany").show(), d++) : $("#spnPCompany").hide(), "" == s ? ($("#spnPCountry").show(), d++) : $("#spnPCountry").hide(), d > 0) return $("#divProgress").hide(), !1; var c = $('input[name="__RequestVerificationToken"]').val(), u = $("<form action='/OI/Searchdata' method='post' id='OIQuickSearchFrm'></form>"); u.append('<input type="hidden" name="__RequestVerificationToken" value="' + c + '">'), u.append('<input type="hidden" name="CompanyName" value="' + t + '">'), u.append('<input type="hidden" name="Address1" value="' + a + '">'), u.append('<input type="hidden" name="Address2" value="' + i + '">'), u.append('<input type="hidden" name="City" value="' + n + '">'), u.append('<input type="hidden" name="State" value="' + l + '">'), u.append('<input type="hidden" name="Country" value="' + s + '">'), u.append('<input type="hidden" name="Zipcode" value="' + r + '">'), u.append('<input type="hidden" name="Telephone" value="' + o + '">'), $("body").append(u), $("#OIQuickSearchFrm").submit() }), $("body").on("change", "#CountryP", function () { $(this).val(); "DirectPlus" == $("#APItype").val() && LoadTypeAheadQuickSearch() }), $("#txtPCompany").keypress(function () { "DirectPlus" == $("#APItype").val() && LoadTypeAheadQuickSearch() }); var cnt = 0; function InitFilters(e, t, a, i, n, l = "all") { if (FilterColumnsArray = [], $(a + " .FilterContainer").children().not(".divFilterAddButton").length > 1) DoFiltering(a); else { $(a + " #FilterDataurl").val(t), $(a + " #updateTargetId").val(i), $(a + " #DataTableId").val(n), $(a + " #AvailOperators").val(l); for (var o = 0, r = 0; r < e.length; r++) { if (FilterColumnsArray.push(e[r]), $(a + " #filterColumn" + o).append($("<option></option>").attr("value", e[r][0]).text(e[r][0])), r == o ? ($(a + " #divFilterValue" + o).append('<div id="divms' + (e[r][0] + s) + '"><select multiple="true" data-detail="value" class="filterValue" name="filterVal' + (e[r][0] + o) + '" id="filterVal' + (e[r][0] + o) + '"></select></div>'), $(a + " #divFilterValue" + o).append('<input class="filterValueText" type="text" name="filterVal' + (e[r][0] + o) + '" id="filterVal' + (e[r][0] + o) + '" style="display:none;" />')) : ($(a + " #divFilterValue" + o).append('<div id="divms' + (e[r][0] + s) + '" style="display:none;"><select multiple="true" data-detail="value" class="filterValue" name="filterVal' + (e[r][0] + o) + '" id="filterVal' + (e[r][0] + o) + '" style="display:none;"></select></div>'), $(a + " #divFilterValue" + o).append('<input class="filterValueText" type="text" name="filterVal' + (e[r][0] + o) + '" id="filterVal' + (e[r][0] + o) + '" style="display:none;" />')), "all" != l && $(a + " #filterOperator" + o + " > option").each(function () { this.value != l && this.remove() }), e[r].length > 2 && "" != e[r][2] && $.ajax({ type: "GET", url: e[r][2], dataType: "json", async: !1, success: function (t) { var i = []; e[r].length > 6 && (i = e[r][6].split(",")); for (var n = 0; n < t.Data.length; n++) { var l = i.findIndex(e => e === t.Data[n].Value); $(a + " select#filterVal" + (e[r][0] + o)).append($("<option></option>").attr("value", t.Data[n].Value).text(t.Data[n].Text)), l > -1 && "" != t.Data[n].Value && $(a + " select#filterVal" + (e[r][0] + o) + " option[value=" + t.Data[n].Value + "]").attr("selected", !0) } }, error: function (e, t, a) { } }), e[r].length > 3) if ("true" == e[r][3].split(":")[0]) { $(a + " #filter" + o).attr("data-default", "true"), $(a + " #filterOperator" + o + " > option").each(function () { "equalto" != this.value && this.remove() }), $(a + " #filter" + o).show(), $(a + " #divFilterInfo" + o + " .close_button").hide(), e[r][3].split(":").length > 1 && "true" == e[r][3].split(":")[1] ? ($(a + " select#filterVal" + (e[r][0] + o)).multiselect({ includeSelectAllOption: !0, nonSelectedText: "Select", maxHeight: 200, numberDisplayed: 1, selectAllValue: "all", buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onDropdownHidden: function (e) { DoFiltering(a) } }), (e[r].length < 6 || e[r].length > 6 && ("" == e[r][6] || null == e[r][6] || null == e[r][6])) && ($(a + " select#filterVal" + (e[r][0] + o)).multiselect("selectAll", !1), $(a + " select#filterVal" + (e[r][0] + o)).multiselect("updateButtonText"))) : e[r].length > 5 && "onlytext" == e[r][5] ? ($(a + " select#filterVal" + (e[r][0] + o)).attr("data-Isdate", "onlytext"), $(a + " select#filterVal" + (e[r][0] + o)).removeAttr("multiple"), $(a + " select#filterVal" + (e[r][0] + o)).hide(), $(a + " input#filterVal" + (e[r][0] + o)).show(), e[r].length > 6 && $(a + " input#filterVal" + (e[r][0] + o)).val(e[r][6])) : ($(a + " select#filterVal" + (e[r][0] + o)).removeAttr("multiple"), $(a + " select#filterVal" + (e[r][0] + o)).multiselect({ maxHeight: 200, buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onChange: function (e, t, a) { }, onDropdownHidden: function (e) { DoFiltering(a) } })); var s = parseInt(o) + 1; $(a + " .divFilterAddButton").remove(), $(a + " .FilterContainer").append('<div class="filtergroup filter' + s + '" id="filter' + s + '" filter-id="' + s + '" data-default="false"><div class="filterControls" id="divfilterControls' + s + '"><div class="custom-dropdown-filter"><select name="filterColumn' + s + '" id="filterColumn' + s + '" class="filterColumn"></select></div><div class="custom-dropdown-filter"><select name="filterOperator' + s + '" id="filterOperator' + s + '" class="filterOprator"><option value="equalto">==</option><option value="notEqualTo">!=</option><option value="contains">Contains</option><option value="notContains">!Contains</option></select></div><div class="" id="divFilterValue' + s + '"></div></div><div class="filterDetails" id="divFilterInfo' + s + '" style="display:none"><span id="ColumnDetail' + s + '"></span><span id="OperatorDetail' + s + '"></span><span data-detail="value" id="ValueDetail' + s + '"></span><span class="close_button"><a href="javascript:void(0);" class="removeFilter" id="' + s + '"><i class="fa fa-times-circle"></i></a></span></div></div>'), $(a + " .FilterContainer").append('<div class="divFilterAddButton"><button class="btn btn-primary" id="btnAddFilter">' + addFilter + "</button></div>"), "all" != l && $(a + " #filterOperator" + s + " > option").each(function () { this.value != l && this.remove() }), $(a + " #filter" + s).hide() } else e[r].length > 5 && "date" == e[r][5].split(":")[0] ? ($(a + " select#filterVal" + (e[r][0] + o)).attr("data-Isdate", "true"), $(a + " select#filterVal" + (e[r][0] + o)).removeAttr("multiple"), $(a + " select#filterVal" + (e[r][0] + o)).multiselect({ maxHeight: 200, buttonClass: "filterDDbtn", onChange: function (e, t, i) { if ("customdate" != $(e).val()) DoFiltering(a); else { var n = $(e).parent().attr("id"); $(e).parent().parent().hide(), $(a + " input#" + n).show(), $(a + " input#" + n).daterangepicker({ applyClass: "btn-primary" }, function (e, t, i) { DoFiltering(a) }) } } })) : e[r].length > 5 && "onlytext" == e[r][5] ? ($(a + " select#filterVal" + (e[r][0] + o)).attr("data-Isdate", "onlytext"), $(a + " select#filterVal" + (e[r][0] + o)).removeAttr("multiple"), $(a + " select#filterVal" + (e[r][0] + o)).hide(), $(a + " input#filterVal" + (e[r][0] + o)).show(), e[r].length > 6 && $(a + " input#filterVal" + (e[r][0] + o)).val(e[r][6])) : e[r].length > 5 && "onlyselect" == e[r][5] ? ($(a + " select#filterVal" + (e[r][0] + o)).attr("data-Isdate", "onlyselect"), $(a + " select#filterVal" + (e[r][0] + o)).removeAttr("multiple"), $(a + " select#filterVal" + (e[r][0] + o)).show(), $(a + " input#filterVal" + (e[r][0] + o)).hide(), $(a + " select#filterVal" + (e[r][0] + o)).multiselect({ maxHeight: 200, buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onChange: function (e, t, a) { }, onDropdownHidden: function (e) { DoFiltering(a) } })) : ($(a + " select#filterVal" + (e[r][0] + o)).multiselect({ includeSelectAllOption: !0, nonSelectedText: "Select", maxHeight: 200, numberDisplayed: 1, selectAllValue: "all", buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onDropdownHidden: function (e) { DoFiltering(a) } }), $(a + " select#filterVal" + (e[r][0] + o)).multiselect("selectAll", !1), $(a + " select#filterVal" + (e[r][0] + o)).multiselect("updateButtonText")); else $(a + " select#filterVal" + (e[r][0] + o)).multiselect({ includeSelectAllOption: !0, nonSelectedText: "Select", maxHeight: 200, numberDisplayed: 1, selectAllValue: "all", buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onDropdownHidden: function (e) { DoFiltering(a) } }), $(a + " select#filterVal" + (e[r][0] + o)).multiselect("selectAll", !1), $(a + " select#filterVal" + (e[r][0] + o)).multiselect("updateButtonText"); e[r].length > 4 && "text" == e[r][4] && ($(a + " select#filterVal" + (e[r][0] + o)).attr("data-detail", "text"), $(a + " #ValueDetail" + o).attr("data-detail", "text")), e[r].length > 3 && "true" == e[r][3].split(":")[0] && o++ } $(a + " #filter" + s + " #divfilterControls" + s).append('<div class="close_button"><a href="#" class="removeFilter" id="' + s + '"><i class="fa fa-times-circle"></i></a></div>'), o > 0 && DoFiltering(a, !0) } } function DoFiltering(FilderParentDivId, IsFirstTime = !1) { var i = 0, filterObj = []; if (IsFirstTime) for (var j = 0; j < FilterColumnsArray.length; j++)if (FilterColumnsArray[j].length > 7 && "true" == FilterColumnsArray[j][7]) { $(FilderParentDivId + " #btnAddFilter").click(); var fId = $(FilderParentDivId + " .FilterContainer").children().not(".divFilterAddButton").last().attr("filter-id"); $(FilderParentDivId + " #filterColumn" + fId).val(FilterColumnsArray[j][0]), "onlytext" == $(FilderParentDivId + " select#filterVal" + FilterColumnsArray[j][0] + fId).attr("data-Isdate") ? $(FilderParentDivId + " input#filterVal" + FilterColumnsArray[j][0] + fId).val(FilterColumnsArray[j][6]) : "" != FilterColumnsArray[j][6] && null != FilterColumnsArray[j][6] && ("multiple" == $(FilderParentDivId + " select#filterVal" + FilterColumnsArray[j][0] + fId).attr("multiple") ? ($(FilderParentDivId + " select#filterVal" + FilterColumnsArray[j][0] + fId).val(FilterColumnsArray[j][6]), $(FilderParentDivId + " select#filterVal" + FilterColumnsArray[j][0] + fId).multiselect("refresh")) : $(FilderParentDivId + " select#filterVal" + FilterColumnsArray[j][0] + fId + " option[value='" + FilterColumnsArray[j][6] + "']").attr("selected", "selected")) } $(FilderParentDivId + " .FilterContainer").children().not(".divFilterAddButton").each(function () { if ("display: none;" != $(this).attr("style")) { var e = $(this).attr("filter-id"), t = $(FilderParentDivId + " #filterColumn" + e).val(), a = $(FilderParentDivId + " #filterOperator" + e).val(), n = ""; if ("equalto" == a || "notEqualTo" == a ? ("customdate" == (n = $(FilderParentDivId + " select#filterVal" + t + e).val()) && (n = $(FilderParentDivId + " input#filterVal" + t + e).val()), "onlytext" == $(FilderParentDivId + " select#filterVal" + t + e).attr("data-Isdate") && (n = $(FilderParentDivId + " input#filterVal" + t + e).val())) : n = $(FilderParentDivId + " input#filterVal" + t + e).val(), "" != n && null != n && null != n) { var l = filterObj.findIndex(e => e.FieldName === t); if (l > -1) { var o = filterObj[l].FilterId; $(FilderParentDivId + " #filter" + o).remove(), filterObj.splice(l, 1) } filterObj.push({ FieldName: t, Operator: a, FilterValue: n.toString(), FilterId: e }) } else $(FilderParentDivId + " #filter" + e).remove() } i++ }), filterObj.length > 0 && $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: $(FilderParentDivId + " #FilterDataurl").val(), data: JSON.stringify(filterObj), beforeSend: function () { }, success: function (data) { $($(FilderParentDivId + " #updateTargetId").val()).html(data), "" != $(FilderParentDivId + " #DataTableId").val() && null != $(FilderParentDivId + " #DataTableId").val() && null != $(FilderParentDivId + " #DataTableId").val() && eval($(FilderParentDivId + " #DataTableId").val()), ShowFilterDetailsOnly(FilderParentDivId) }, error: function (e, t, a) { } }) } function ShowFilterDetailsOnly(e) { $(e + " .FilterContainer").children().not(".divFilterAddButton").each(function () { var t = $(this).attr("filter-id"); if ("display: none;" != $(e + " #filter" + t).attr("style")) if ($(e + " #divfilterControls" + t).hide(), $(e + " #divFilterInfo" + t).show(), $(e + " #ColumnDetail" + t).text($(e + " #filterColumn" + t).val()), $(e + " #OperatorDetail" + t).text(getOperatorText($(e + " #filterOperator" + t).val())), "equalto" != $(e + " #filterOperator" + t).val() && "notEqualTo" != $(e + " #filterOperator" + t).val() || "onlytext" == $(e + " select#filterVal" + $(e + " #filterColumn" + t).val() + t).attr("data-Isdate")) $(e + " #ValueDetail" + t).html("<strong>" + $(e + " input#filterVal" + $(e + " #filterColumn" + t).val() + t).val() + "</strong>"); else { var a = $(e + " select#filterVal" + $(e + " #filterColumn" + t).val() + t).val(); "" != a && null != a && null != a && (a = a.toString()), "text" == $(e + " select#filterVal" + $(e + " #filterColumn" + t).val() + t).attr("data-detail") ? "customdate" == a ? $(e + " #ValueDetail" + t).html("<strong>" + $(e + " input#filterVal" + $(e + " #filterColumn" + t).val() + t).val() + "</strong>") : 1 == a.split(",").length ? $(e + " #ValueDetail" + t).html("<strong>" + $(e + " select#filterVal" + ($(e + " #filterColumn" + t).val() + t) + " option:selected").html() + "</strong>") : $(e + " select#filterVal" + $(e + "#filterColumn" + t).val() + t + " option").length == a.split(",").length ? $(e + " #ValueDetail" + t).html("<strong>All</strong>") : $(e + " #ValueDetail" + t).html("<strong>" + a.split(",").length + " Selected</strong>") : "customdate" == a || "onlytext" == $(e + " select#filterVal" + $(e + " #filterColumn" + t).val() + t).attr("data-Isdate") ? $(e + " #ValueDetail" + t).html("<strong>" + $(e + " input#filterVal" + $(e + " #filterColumn" + t).val() + t).val() + "</strong>") : 1 == a.split(",").length ? $(e + " #ValueDetail" + t).html("<strong>" + $(e + " select#filterVal" + $(e + " #filterColumn" + t).val() + t).val() + "</strong>") : $(e + " select#filterVal" + $(e + " #filterColumn" + t).val() + t + " option").length == a.split(",").length ? $(e + " #ValueDetail" + t).html("<strong>All</strong>") : $(e + " #ValueDetail" + t).html("<strong>" + a.split(",").length + " Selected</strong>") } }) } function getOperatorText(e) { return "equalto" == e ? "==" : "notEqualTo" == e ? "!=" : "contains" == e ? "Contains" : "notContains" == e ? "!Contains" : void 0 } function InitDataTable(e, t, a, i) { $(e).DataTable({ destroy: !0, info: !1, searching: a, paging: !0, pageLength: t[0], lengthMenu: t, dom: '<"html5buttons"B>lTfgitp', order: i, buttons: [], columnDefs: [{ orderable: !1, targets: "nosort" }], language: { lengthMenu: "<strong>" + pageSize + "</strong> : _MENU_", emptyTable: noDataAvailable, paginate: { previous: previous, next: next } } }) } function DraggableModalPopup(e) { $(".modal.in").length, $(e).modal({ backdrop: "static", keyboard: !1, show: !0 }), $(".modal-dialog").draggable({ handle: ".modal-header" }) } function addCommas(e) { x = (e += "").split("."), x1 = x[0], x2 = x.length > 1 ? "." + x[1] : ""; for (var t = /(\d+)(\d{3})/; t.test(x1);)x1 = x1.replace(t, "$1,$2"); return x1 + x2 } function addNewTagsPopup() { $.ajax({ type: "GET", url: "/Tags/AddTags?isAllowLOBTag=" + !1, dataType: "HTML", success: function (e) { $("#AddTagsModalMain").html(e), DraggableModalPopup("#AddTagsModal") } }) } function SetTagValue(e) { $("#AddTagsModal").modal("hide"); var t = document.getElementsByClassName("chzn-select"); for (i = 0; i < t.length; i++)$("#" + t[i].id).append($("<option>", { value: e }).text(e)), $("#" + t[i].id).trigger("chosen:updated") } function addNewCountryGroup() { $.ajax({ type: "GET", url: "/Portal/AddCountryGrpPopup", dataType: "HTML", async: !1, success: function (e) { $("#PortalCountryGroupModalMain").html(e), DraggableModalPopup("#PortalCountryGroupModal") } }) } function CallbackCountryGroup(e) { $("#PortalCountryGroupModal").modal("hide"), null != e && $(".AddableCountryGroup").append(new Option(e.split("@#$")[0], e.split("@#$")[1])) } function CallbackCountryGroupPopup(e, t) { $("#PortalCountryGroupModal").modal("hide"), $("#GroupId").append("<option value=" + t + ">" + e.split("@#$")[0] + "</option>") } function CallbackCountryGroupPopupMatch(e, t) { $("#PortalCountryGroupModal").modal("hide"), $("#CountryGroupId").append("<option value=" + t + ">" + e.split("@#$")[0] + "</option>"), $("#GroupId").append("<option value=" + t + ">" + e.split("@#$")[0] + "</option>") } $("body").on("click", ".QuickSearchBox", function () { 0 == cnt ? ($(".QuickSearchNew").addClass("displayBlock"), cnt++) : $(".QuickSearchNew").removeClass("displayBlock") }), $("body").on("click", ".SendFeedbackBox", function () { $(".feedbackBox").show() }), $(document).on("change", ".filterOprator", function () { var e = $(this).closest("div").parent().parent(), t = "#" + e.closest(".FilterContainer").parent().parent().attr("id"), a = e.attr("filter-id"), i = e.find("#filterColumn" + a).val(); e.find("filterVal" + i + a); "onlytext" == $(t + " select#filterVal" + i + a).attr("data-Isdate") ? ($(t + " #divms" + i + a).hide(), e.find("input#filterVal" + i + a).show()) : "onlyselect" == $(t + " select#filterVal" + i + a).attr("data-Isdate") ? ($(t + " #divms" + i + a).show(), e.find("input#filterVal" + i + a).hide()) : "true" != $(t + " select#filterVal" + i + a).attr("data-Isdate") && ("equalto" != $(this).val() && "notEqualTo" != $(this).val() ? ($(t + " #divms" + i + a).hide(), e.find("input#filterVal" + i + a).show()) : ($(t + " #divms" + i + a).show(), e.find("input#filterVal" + i + a).hide())) }), $(document).on("change", ".filterColumn", function () { var e = $(this).closest("div").parent().parent(), t = "#" + e.closest(".FilterContainer").parent().parent().attr("id"), a = e.attr("filter-id"), i = e.find("#filterColumn" + a).val(), n = e.find("#filterOperator" + a).val(); e.find("filterVal" + i + a); e.find("#divFilterValue" + a).children().hide(), "onlytext" == $(t + " select#filterVal" + i + a).attr("data-Isdate") ? ($(t + " #divms" + i + a).hide(), e.find("input#filterVal" + i + a).show(), $(t + " #filterOperator" + a + " option[value='contains']").show(), $(t + " #filterOperator" + a + " option[value='notContains']").show()) : "onlyselect" == $(t + " select#filterVal" + i + a).attr("data-Isdate") ? ($(t + " #divms" + i + a).show(), e.find("input#filterVal" + i + a).hide(), $(t + " #filterOperator" + a + " option[value='contains']").show(), $(t + " #filterOperator" + a + " option[value='notContains']").show()) : "equalto" != n && "notEqualTo" != n ? ($(t + " #divms" + i + a).hide(), e.find("input#filterVal" + i + a).show(), "true" == $(t + " select#filterVal" + i + a).attr("data-Isdate") ? ($(t + " #filterOperator" + a + " option[value='contains']").hide(), $(t + " #filterOperator" + a + " option[value='notContains']").hide()) : ($(t + " #filterOperator" + a + " option[value='contains']").show(), $(t + " #filterOperator" + a + " option[value='notContains']").show())) : ($(t + " #divms" + i + a).show(), e.find("input#filterVal" + i + a).hide(), "true" == $(t + " select#filterVal" + i + a).attr("data-Isdate") ? ($(t + " #filterOperator" + a + " option[value='contains']").hide(), $(t + " #filterOperator" + a + " option[value='notContains']").hide()) : ($(t + " #filterOperator" + a + " option[value='contains']").show(), $(t + " #filterOperator" + a + " option[value='notContains']").show())) }), $(document).on("click", "#btnAddFilter", function () { var e = 0, t = "#" + $(this).closest(".FilterContainer").parent().parent().attr("id"), a = $(t + " .FilterContainer").children().not(".divFilterAddButton").last().attr("filter-id"), i = parseInt(a) + 1, n = $(t + " #AvailOperators").val(); $(t + " .divFilterAddButton").remove(), $(t + " .FilterContainer").append('<div class="filtergroup filter' + i + '" id="filter' + i + '" filter-id="' + i + '" data-default="false"><div class="filterControls" id="divfilterControls' + i + '"><div class="custom-dropdown-filter"><select name="filterColumn' + i + '" id="filterColumn' + i + '" class="filterColumn"></select></div><div class="custom-dropdown-filter"><select name="filterOperator' + i + '" id="filterOperator' + i + '" class="filterOprator"><option value="equalto">==</option><option value="notEqualTo">!=</option><option value="contains">Contains</option><option value="notContains">!Contains</option></select></div><div class="" id="divFilterValue' + i + '"></div></div><div class="filterDetails" id="divFilterInfo' + i + '" style="display:none"><span id="ColumnDetail' + i + '"></span><span id="OperatorDetail' + i + '"></span><span data-detail="value" id="ValueDetail' + i + '"></span><span class="close_button"><a href="#" class="removeFilter" id="' + i + '"><i class="fa fa-times-circle"></i></a></span></div></div>'), $(t + " .FilterContainer").append('<div class="divFilterAddButton"><button class="btn btn-primary" id="btnAddFilter">' + addFilter + "</button></div>"), "all" != n && $(t + " #filterOperator" + i + " > option").each(function () { this.value != n && this.remove() }), $(t + " #filterColumn" + (i - 1) + " > option").each(function () { $(t + " #filterColumn" + i).append($("<option></option>").attr("value", this.value).text(this.text)); var a = $(t + " select#filterVal" + (this.text + (i - 1))).attr("data-detail"); 0 == e ? ($(t + " #divFilterValue" + i).append('<div id="divms' + (this.text + i) + '"><select multiple="true" data-detail="' + a + '" class="filterValue" name="filterVal' + this.text + i + '" id="filterVal' + this.text + i + '"></select></div>'), $(t + " #divFilterValue" + i).append('<input class="filterValueText" type="text" name="filterVal' + this.text + i + '" id="filterVal' + this.text + i + '" style="display:none;" />')) : ($(t + " #divFilterValue" + i).append('<div id="divms' + (this.text + i) + '" style="display:none"><select multiple="true" data-detail="' + a + '" class="filterValue" name="filterVal' + this.text + i + '" id="filterVal' + this.text + i + '" style="display:none;"></select></div>'), $(t + " #divFilterValue" + i).append('<input class="filterValueText" type="text" name="filterVal' + this.text + i + '" id="filterVal' + this.text + i + '" style="display:none;" />')); var n = $(this); $(t + " select#filterVal" + this.text + (i - 1) + " > option").each(function () { $(t + " select#filterVal" + n.text() + i).append($("<option></option>").attr("value", this.value).text(this.text)) }), "true" == $(t + " select#filterVal" + (n.text() + (i - 1))).attr("data-Isdate") ? ($(t + " select#filterVal" + (n.text() + i)).attr("data-Isdate", "true"), $(t + " select#filterVal" + (n.text() + i)).removeAttr("multiple"), $(t + " select#filterVal" + (n.text() + i)).multiselect({ maxHeight: 200, buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onChange: function (e, a, i) { if ("customdate" != $(e).val()) DoFiltering(t); else { var n = $(e).parent().attr("id"); $(e).parent().parent().hide(), $(t + " input#" + n).show(), $(t + " input#" + n).daterangepicker({ applyClass: "btn-primary" }, function (e, a, i) { DoFiltering(t) }) } } })) : "onlytext" == $(t + " select#filterVal" + (n.text() + (i - 1))).attr("data-Isdate") ? ($(t + " select#filterVal" + (n.text() + i)).attr("data-Isdate", "onlytext"), $(t + " select#filterVal" + (n.text() + i)).removeAttr("multiple"), 0 == e && ($(t + " select#filterVal" + (n.text() + i)).hide(), $(t + " input#filterVal" + (n.text() + i)).show())) : "onlyselect" == $(t + " select#filterVal" + (n.text() + (i - 1))).attr("data-Isdate") ? ($(t + " select#filterVal" + (n.text() + i)).attr("data-Isdate", "onlyselect"), $(t + " select#filterVal" + (n.text() + i)).removeAttr("multiple"), 0 == e && ($(t + " select#filterVal" + (n.text() + i)).show(), $(t + " input#filterVal" + (n.text() + i)).hide()), $(t + " select#filterVal" + (n.text() + i)).multiselect({ maxHeight: 200, buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onChange: function (e, t, a) { }, onDropdownHidden: function (e) { DoFiltering(t) } })) : ($(t + " select#filterVal" + (n.text() + i)).multiselect({ includeSelectAllOption: !0, nonSelectedText: "Select", maxHeight: 200, numberDisplayed: 1, selectAllValue: "all", buttonClass: "filterDDbtn", enableCaseInsensitiveFiltering: !0, onDropdownHidden: function (e) { DoFiltering(t) } }), $(t + " select#filterVal" + (n.text() + i)).multiselect("selectAll", !1), $(t + " select#filterVal" + (n.text() + i)).multiselect("updateButtonText")), e++ }), $(t + " #filter" + i + " #divfilterControls" + i).append('<div class="close_button"><a href="#" class="removeFilter" id="' + i + '"><i class="fa fa-times-circle"></i></a></div>') }), $(document).on("blur", ".filterValueText", function () { var e = "#" + $(this).closest(".FilterContainer").parent().parent().attr("id"), t = $(this).attr("id"); if ("true" != $(e + " select#" + t).attr("data-Isdate")) if ("" != $(this).val() && null != $(this).val()) DoFiltering(e); else { var a = $(this).parent().attr("id").replace("divFilterValue", ""); $(e + " #filter" + a).remove(), DoFiltering(e) } }), $(document).on("click", ".removeFilter", function () { var e = 0, t = $(this).attr("id"), a = "#" + $(this).closest(".FilterContainer").parent().parent().attr("id"); $(a + " .FilterContainer").children().not(".divFilterAddButton").each(function () { "false" == $(this).attr("data-default") && e++ }), e > 1 ? $(a + " #filter" + t).remove() : $(a + " #filter" + t).hide(), DoFiltering(a) }), $(document).on("click", ".filterDetails", function () { var e = "#" + $(this).closest(".FilterContainer").parent().parent().attr("id"), t = $(this).parent().attr("filter-id"); $(e + " #divfilterControls" + t).show(), $(e + " #divFilterInfo" + t).hide() });