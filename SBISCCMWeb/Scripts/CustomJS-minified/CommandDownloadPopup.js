function sumbitCommandDownloadMapping() { var e = 0, o = $(".DownloadConfigName").val(), n = $("input[name=DownloadFormat]:checked").val(), a = $("#ProviderType").val(); if ("" == a ? ($("#spnProviderType").show(), e++) : $("#spnProviderType").hide(), "" == o ? ($("#spnUConfigNameDownload").show(), e++) : $("#spnUConfigNameDownload").hide(), "delimiter" == n.toLowerCase() && "" == $(".FormatdownloadValue").val() && ($(".FormatdownloadValue").parent().addClass("has-error"), e++), "" == $("#MultiSelectOptions").val() || null == $("#MultiSelectOptions").val() ? ($("#spnOutputType").show(), e++) : $("#spnOutputType").hide(), $("#MultiSelectOptions option").each(function () { var e = "#" + $(this).val(); $(e).val(this.selected) }), a && "dandb" == a.toLowerCase() && ("true" == $("#DownloadMonitoringUpdates").val().toLowerCase() && "" == $(".divmonitoringAPILayre #APILayer").val() ? ($("#spnAPILayre").show(), e++) : $("#spnAPILayre").hide()), e > 0) return !1 } function CommandDownloadUpdateSuccess(e) { $(".pagevalueDownloadChange").val(), $("#SortBy").val(), $("#SortOrder").val(); $("body").append(e); $("#CommadDownloadMessage").val(); $("#CommadDownloadMessage").remove(), $("#DownloadConfigurationModal").modal("hide"), LoadCommandDownloadList() } function LoadCommandDownloadList() { $.pjax({ url: "/Portal/DownloadConfiguration", container: "#divPartialCommandDownloadList", timeout: 5e4 }).done(function () { InitPortalDownloadConfigurationDataTable(), pageSetUp(), 0 == $("table#tbCmndDownloadMapping tbody tr").length ? $("table#tbCmndDownloadMapping").attr("disabled", !0) : $("table#tbCmndDownloadMapping tbody tr:first").addClass("current") }) } function EnableDisableFilePrefix() { $("#IsAppendDateTime").prop("checked") ? ($("#DateTimeFileFormat").attr("disabled", !1), $("#IsFilePrefix").attr("disabled", !1)) : ($("#DateTimeFileFormat").attr("disabled", !0), $("#IsFilePrefix").attr("disabled", !0)) } function setIsAppendExample() { var e = $("input[name=DownloadFormat]:checked").val(), o = $("#IsAppendDateTime").prop("checked"), n = $("#DateTimeFileFormat").val(), a = $("#IsFilePrefix").prop("checked"), t = $("#FilePrefix").val(); "excel" == e.toLowerCase() ? fileExtension = ".xlsx" : "csv" == e.toLowerCase() ? fileExtension = ".csv" : "tsv" != e.toLowerCase() && "delimiter" != e.toLowerCase() || (fileExtension = ".txt"); var i = "IsAppendDateTime:" + o + "@#$DatetimeFormat:" + n + "@#$IsFilePrefix:" + a + "@#$FilePrefix:" + t + "@#$fileExtension:" + fileExtension, l = $('input[name="__RequestVerificationToken"]').val(); $.ajax({ type: "POST", url: "/CommandMapping/GetDateTimeFormat?Parameters=" + ConvertEncrypte(encodeURI(i)).split("+").join("***"), headers: { __RequestVerificationToken: l }, dataType: "JSON", contentType: "application/json", cache: !1, success: function (e) { $("#TextExample").text(e) }, error: function (e, o, n) { } }) } function ConvertEncrypte(e) { var o = ""; return "" != e && null != e && $.ajax({ type: "POST", url: "/Home/GetEncryptedString", data: JSON.stringify({ strValue: e }), dataType: "json", contentType: "application/json", async: !1, success: function (e) { o = e }, error: function (e, o, n) { } }), o } function resetValueCommadLineDownload() { $("#Id").val(""), $("#ConfigurationName").val(""), $("#LOBTag").val(""), $("#Tag").val(""), $("#Formatvalue").val("|"), $("#MultiSelectOptions").multiselect("clearSelection"), $("#MarkAsExported").prop("checked", !1), $("#IsDefault").prop("checked", !1), $("#IsAppendDateTime").prop("checked", !1), $(".rbtnDownloadFile").prop("checked", !1), $("#IsAppendDateTime").prop("checked", !0), $(".rbtnDownloadFile[value='Excel']").prop("checked", !0), $("#DateTimeFileFormat").val($("#DateTimeFileFormat option:first").val()), $("#FilePrefix").val(""), $("#IsFilePrefix").prop("checked", !1) } $(document).ready(function () { "Orb" == $("#ProviderType").val() && $("#APILayer").hide(), EnableDisableFilePrefix(), setIsAppendExample() }), $(document).on("change", "#ProviderType", function () { $("#MultiSelectOptions").empty(), "DandB" == $("#ProviderType").val() ? ($("#MultiSelectOptions").append(new Option("Match Output", "DownloadMatchOutput")), $("#MultiSelectOptions").append(new Option("Enrichment Output", "DownloadEnrichmentOutput")), $("#MultiSelectOptions").append(new Option("Transferred Duns", "DownloadTransferDUNS")), $("#MultiSelectOptions").append(new Option("Active Data Queue", "DownloadActiveDataQueue")), $("#MultiSelectOptions").append(new Option("Monitoring Notification", "DownloadMonitoringUpdates")), $("#MultiSelectOptions").append(new Option("Low Confidence Queue", "DownloadLCMQueue")), $("#MultiSelectOptions").append(new Option("No Match Queue", "DownloadNoMatchQueue"))) : "Orb" == $("#ProviderType").val() ? ($("#APILayer").hide(), $("#spnAPILayre").hide(), $("#MultiSelectOptions").append(new Option("Match Output", "DownloadMatchOutput")), $("#MultiSelectOptions").append(new Option("Firmographics", "DownloadEnrichmentOutput")), $("#MultiSelectOptions").append(new Option("Company Tree", "DownloadCompanyTree")), $("#MultiSelectOptions").append(new Option("Active Data Queue", "DownloadActiveDataQueue"))) : ($("#APILayer").hide(), $("#spnAPILayre").hide()), $("#MultiSelectOptions").multiselect("rebuild") }), $("body").on("change", ".rbtnDownloadFile", function () { "delimiter" == $("input[name=DownloadFormat]:checked").val().toLowerCase() ? ($(".divFrmtDownloadValue").show(), $("#Formatvalue").val("|")) : $(".divFrmtDownloadValue").hide() }), $("body").on("change", 'input:checkbox[value="DownloadMonitoringUpdates"]', function () { 1 == $(this).prop("checked") ? ($("#APILayer").show(), $(".divmonitoringAPILayre").show()) : ($(".divmonitoringAPILayre #APILayer").val(""), $(".divmonitoringAPILayre").hide(), $("#spnAPILayre").hide()) }), $("body").on("change", 'input:checkbox[value="multiselect-all"]', function () { var e = $("#ProviderType").val(); e && "dandb" == e.toLowerCase() && (1 == $(this).prop("checked") ? ($("#APILayer").show(), $(".divmonitoringAPILayre").show()) : ($(".divmonitoringAPILayre #APILayer").val(""), $(".divmonitoringAPILayre").hide(), $("#spnAPILayre").hide())) }), $("body").on("change", "#IsAppendDateTime", function () { EnableDisableFilePrefix(), setIsAppendExample() }), $("body").on("change", "input[name=DownloadFormat]", function () { setIsAppendExample() }), $("body").on("blur", "#FilePrefix", function () { setIsAppendExample() }), $("body").on("change", "#IsFilePrefix", function () { setIsAppendExample() }), $("body").on("change", "#DateTimeFileFormat", function () { $("#IsAppendDateTime").prop("checked") && setIsAppendExample() });