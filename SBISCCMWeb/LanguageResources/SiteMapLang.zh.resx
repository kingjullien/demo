<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblApproveMatchData" xml:space="preserve">
    <value>批准比赛数据</value>
    <comment>Approve Match Data</comment>
  </data>
  <data name="lblBaseReports" xml:space="preserve">
    <value>基本报告</value>
    <comment>Base Reports</comment>
  </data>
  <data name="lblBuildAList" xml:space="preserve">
    <value>建立清单</value>
    <comment>Build A List</comment>
  </data>
  <data name="lblCleanData" xml:space="preserve">
    <value>清理数据</value>
    <comment>Clean Data</comment>
  </data>
  <data name="lblDandB" xml:space="preserve">
    <value>D&amp;B</value>
    <comment>DandB</comment>
  </data>
  <data name="lblDashboard" xml:space="preserve">
    <value>仪表板</value>
    <comment>Dashboard</comment>
  </data>
  <data name="lblDataStewardship" xml:space="preserve">
    <value>数据管理</value>
    <comment>Data Stewardship</comment>
  </data>
  <data name="lblExportData" xml:space="preserve">
    <value>汇出资料</value>
    <comment>Export Data</comment>
  </data>
  <data name="lblHelpDesk" xml:space="preserve">
    <value>服务台</value>
    <comment>Help Desk</comment>
  </data>
  <data name="lblHome" xml:space="preserve">
    <value>家</value>
    <comment>Home</comment>
  </data>
  <data name="lblImportData" xml:space="preserve">
    <value>汇入资料</value>
    <comment>Import Data</comment>
  </data>
  <data name="lblInputRecords" xml:space="preserve">
    <value>输入记录</value>
    <comment>Input Records</comment>
  </data>
  <data name="lblInvestigationReport" xml:space="preserve">
    <value>调查报告</value>
    <comment>Investigation Report</comment>
  </data>
  <data name="lblManageFamilyTree" xml:space="preserve">
    <value>管理家谱（BETA）</value>
    <comment>Manage Family Tree (BETA)</comment>
  </data>
  <data name="lblMatchData" xml:space="preserve">
    <value>比赛资料</value>
    <comment>Match Data</comment>
  </data>
  <data name="lblOrbIntelligence" xml:space="preserve">
    <value>宝珠智力</value>
    <comment>Orb Intelligence</comment>
  </data>
  <data name="lblPortal" xml:space="preserve">
    <value>门户网</value>
    <comment>Portal</comment>
  </data>
  <data name="lblPreviewMatchedData" xml:space="preserve">
    <value>预览匹配数据（BETA）</value>
    <comment>Preview Matched Data (BETA)</comment>
  </data>
  <data name="lblProspecting" xml:space="preserve">
    <value>勘探</value>
    <comment>Prospecting</comment>
  </data>
  <data name="lblReports" xml:space="preserve">
    <value>报告书</value>
    <comment>Reports</comment>
  </data>
  <data name="lblResearchInvestigation" xml:space="preserve">
    <value>艾瑞调查</value>
    <comment>iResearch Investigation</comment>
  </data>
  <data name="lblReviewMatchCandidates" xml:space="preserve">
    <value>查看比赛候选人</value>
    <comment>Review Match Candidates</comment>
  </data>
  <data name="lblSearchData" xml:space="preserve">
    <value>搜索数据</value>
    <comment>Search Data</comment>
  </data>
  <data name="lblSettings" xml:space="preserve">
    <value>设定值</value>
    <comment>Settings</comment>
  </data>
</root>