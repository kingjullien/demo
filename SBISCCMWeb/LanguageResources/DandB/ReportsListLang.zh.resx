<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblAll" xml:space="preserve">
    <value>所有</value>
    <comment>All</comment>
  </data>
  <data name="lblAPIUsage" xml:space="preserve">
    <value>API 使用情况</value>
    <comment>API Usage</comment>
  </data>
  <data name="lblCurrentMonthCount" xml:space="preserve">
    <value>本月计数</value>
    <comment>Current Month Count</comment>
  </data>
  <data name="lblCurrentYearCount" xml:space="preserve">
    <value>本年计数</value>
    <comment>Current Year Count</comment>
  </data>
  <data name="lblDataQueueDashboard" xml:space="preserve">
    <value>数据队列仪表板</value>
    <comment>Data Queue Dashboard</comment>
  </data>
  <data name="lblDataStewardshipStatistics" xml:space="preserve">
    <value>数据托管统计</value>
    <comment>Data Stewardship Statistics</comment>
  </data>
  <data name="lblDnBAPIName" xml:space="preserve">
    <value>DnBAPI名称</value>
    <comment>DnBAPIName</comment>
  </data>
  <data name="lblEnrichmentCall" xml:space="preserve">
    <value>充实电话</value>
    <comment>EnrichmentCall</comment>
  </data>
  <data name="lblGroups" xml:space="preserve">
    <value>组</value>
    <comment>Groups</comment>
  </data>
  <data name="lblinput" xml:space="preserve">
    <value>输入</value>
    <comment>input</comment>
  </data>
  <data name="lblLowConfidenceCandidates" xml:space="preserve">
    <value>低置信候选项</value>
    <comment>Low Confidence Candidates</comment>
  </data>
  <data name="lblMatchedOutput" xml:space="preserve">
    <value>匹配输出</value>
    <comment>Matched Output</comment>
  </data>
  <data name="lblOutput" xml:space="preserve">
    <value>输出</value>
    <comment>Output</comment>
  </data>
  <data name="lblQueue" xml:space="preserve">
    <value>队列 </value>
    <comment>Queue</comment>
  </data>
  <data name="lblTotal" xml:space="preserve">
    <value>总计</value>
    <comment>Total</comment>
  </data>
  <data name="lblTotalCount" xml:space="preserve">
    <value>总计数</value>
    <comment>Total Count</comment>
  </data>
  <data name="lblUnmatchedRecords" xml:space="preserve">
    <value>不匹配记录</value>
    <comment>Unmatched Records</comment>
  </data>
  <data name="lblUnprocessedInput" xml:space="preserve">
    <value>未处理的输入</value>
    <comment>Unprocessed Input</comment>
  </data>
  <data name="msgCurrentMonthCount" xml:space="preserve">
    <value>当前月份计数</value>
    <comment>Current Month Count</comment>
  </data>
  <data name="msgCurrentMonthCountByAPI" xml:space="preserve">
    <value>按API类型划分的当前月份计数</value>
    <comment>Current Month Count by API Type</comment>
  </data>
  <data name="msgCurrentYearCount" xml:space="preserve">
    <value>本年计数</value>
    <comment>Current Year Count</comment>
  </data>
  <data name="msgCurrentYearCountByDnBAPIName" xml:space="preserve">
    <value>按DnBAPIName的当前年份计数</value>
    <comment>Current Year Count by DnBAPIName</comment>
  </data>
  <data name="msgNoOfRecords" xml:space="preserve">
    <value>记录数</value>
    <comment>Number of Records</comment>
  </data>
  <data name="msgTopRowsByCC" xml:space="preserve">
    <value>置信码和用户组中最匹配的行</value>
    <comment>Top Matched Rows by Confidence Code and User Group</comment>
  </data>
  <data name="msgTopRowsByUser" xml:space="preserve">
    <value>用户和用户组匹配的行</value>
    <comment>Top Matched Rows by User and User Group</comment>
  </data>
  <data name="msgtotalCountByMonth" xml:space="preserve">
    <value>月总数</value>
    <comment>Total Count by Month</comment>
  </data>
  <data name="titleCompanyAudit" xml:space="preserve">
    <value>公司流程审核</value>
    <comment>Company Process Audit</comment>
  </data>
  <data name="titleDataStewardship" xml:space="preserve">
    <value>数据管理统计</value>
    <comment>Data Stewardship Statistics</comment>
  </data>
  <data name="titleInputOutput" xml:space="preserve">
    <value>输入和输出</value>
    <comment>Input and OutPut</comment>
  </data>
  <data name="titleReports" xml:space="preserve">
    <value>报告书</value>
    <comment>Reports</comment>
  </data>
</root>